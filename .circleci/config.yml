version: 2.1

#  Copyright (C) 2019-2020 LEIDOS.
# 
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
# 
#  http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.
# 

# Configuration file for Circle CI 
# CI will report failure if any executed command returns and error status
# Operations performed are as follows
# Build source code
# Run unit tests for C++ 
# Run static code analyzer for SourceCloud
# Upload test results
# Every run command should start with source ${INIT_ENV} to ensure all default dependencies are available
jobs:
  arm_build_push :
   machine:
    # see https://circleci.com/docs/using-arm/ for versions
    image: ubuntu-2004:current
   resource_class: arm.medium
   steps:
     - checkout
     - run: 
        name: Docker Build
        # Run MYSQL image and build v2xhub docker image
        command: |
          docker build -t v2xhubarm:ci-build .
          docker build -f docker/Dockerfile-php -t php_arm:ci-build .
          cd ./tools/port-drayage-webservice/
          docker build -f Dockerfile-arm -t port-drayage-webservice_arm:ci-build .
          if [ -n "$CIRCLE_PR_NUMBER" ]; then
              circleci-agent step halt
          fi          
     - run: 
        name: Docker Push
        # Push v2xhub docker image to usdotfhwaops dockerhub
        command: | 
          if [ "$CIRCLE_BRANCH" = "develop" ]; then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG=${CIRCLE_BRANCH/\//-}
          fi
          docker tag v2xhubarm:ci-build usdotfhwaops/v2xhubarm:${DOCKER_TAG}
          docker tag php_arm:ci-build usdotfhwaops/php_arm:${DOCKER_TAG}
          docker tag port-drayage-webservice_arm:ci-build usdotfhwaops/port-drayage-webservice_arm:${DOCKER_TAG}
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push usdotfhwaops/v2xhubarm:${DOCKER_TAG}
          docker push usdotfhwaops/php_arm:${DOCKER_TAG}
          docker push usdotfhwaops/port-drayage-webservice_arm:${DOCKER_TAG}
  automated_release :
   machine:
    image: ubuntu-2004:202201-02
   steps:
     - run: 
        name: Docker Pull Release
        # Pull all built images associated with github tag
        command: |
          docker pull usdotfhwaops/php:master
          docker pull usdotfhwaops/port-drayage-webservice:master
          docker pull usdotfhwaops/v2xhubamd:master
          docker pull usdotfhwaops/php_arm:master
          docker pull usdotfhwaops/port-drayage-webservice_arm:master
          docker pull usdotfhwaops/v2xhubarm:master
     - run:
        name: Docker Tag Release
        # Tag all pulled images with github tag name
        command: | 
          docker tag usdotfhwaops/php:master usdotfhwaops/php:${CIRCLE_TAG}
          docker tag usdotfhwaops/port-drayage-webservice:master usdotfhwaops/port-drayage-webservice:${CIRCLE_TAG}
          docker tag usdotfhwaops/v2xhubamd:master usdotfhwaops/v2xhubamd:${CIRCLE_TAG}
          docker tag usdotfhwaops/php_arm:master usdotfhwaops/php_arm:${CIRCLE_TAG}
          docker tag usdotfhwaops/port-drayage-webservice_arm:master usdotfhwaops/port-drayage-webservice_arm:${CIRCLE_TAG}
          docker tag usdotfhwaops/v2xhubarm:master usdotfhwaops/v2xhubarm:${CIRCLE_TAG}
     - run:
        name: Docker Push Release Tag
        # Push all tagged images
        command: |
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker push usdotfhwaops/php:${CIRCLE_TAG}
          docker push usdotfhwaops/port-drayage-webservice:${CIRCLE_TAG}
          docker push usdotfhwaops/v2xhubamd:${CIRCLE_TAG}
          docker push usdotfhwaops/php_arm:${CIRCLE_TAG}
          docker push usdotfhwaops/port-drayage-webservice_arm:${CIRCLE_TAG}
          docker push usdotfhwaops/v2xhubarm:${CIRCLE_TAG}
workflows:
  version: 2
  build:
    jobs:
      - arm_build_push:
          filters:
            tags:
              only: /^[\.0-9]*$/
      - automated_release:
          filters:
            tags:
              only: /^[\.0-9]*$/
            branches:
              ignore: /.*/
