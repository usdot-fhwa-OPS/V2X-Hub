/**
 * Port Drayage Web Service.
 * Web Service for Loading/Unloading/Inspection interactions for Port Drayage Operations.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInspectionStatusList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInspectionStatusList::OAIInspectionStatusList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInspectionStatusList::OAIInspectionStatusList() {
    this->initializeModel();
}

OAIInspectionStatusList::~OAIInspectionStatusList() {}

void OAIInspectionStatusList::initializeModel() {

    m_inspections_isSet = false;
    m_inspections_isValid = false;
}

void OAIInspectionStatusList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInspectionStatusList::fromJsonObject(QJsonObject json) {

    m_inspections_isValid = ::OpenAPI::fromJsonValue(inspections, json[QString("inspections")]);
    m_inspections_isSet = !json[QString("inspections")].isNull() && m_inspections_isValid;
}

QString OAIInspectionStatusList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInspectionStatusList::asJsonObject() const {
    QJsonObject obj;
    if (inspections.size() > 0) {
        obj.insert(QString("inspections"), ::OpenAPI::toJsonValue(inspections));
    }
    return obj;
}

QList<OAIInspectionStatus> OAIInspectionStatusList::getInspections() const {
    return inspections;
}
void OAIInspectionStatusList::setInspections(const QList<OAIInspectionStatus> &inspections) {
    this->inspections = inspections;
    this->m_inspections_isSet = true;
}

bool OAIInspectionStatusList::is_inspections_Set() const{
    return m_inspections_isSet;
}

bool OAIInspectionStatusList::is_inspections_Valid() const{
    return m_inspections_isValid;
}

bool OAIInspectionStatusList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (inspections.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInspectionStatusList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
