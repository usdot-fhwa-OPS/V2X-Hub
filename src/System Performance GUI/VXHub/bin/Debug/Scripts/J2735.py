# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class DSRC:

    _name_  = 'DSRC'
    _oid_   = []
    
    _obj_ = [
        'MessageFrame',
        'MESSAGE-ID-AND-TYPE',
        'MessageTypes',
        'REG-EXT-ID-AND-TYPE',
        'RegionalExtension',
        'BasicSafetyMessage',
        'PARTII-EXT-ID-AND-TYPE',
        'BSMpartIIExtension',
        'PartII-Id',
        'vehicleSafetyExt',
        'specialVehicleExt',
        'supplementalVehicleExt',
        'BSMpartIIExtension',
        'CommonSafetyRequest',
        'EmergencyVehicleAlert',
        'IntersectionCollision',
        'MapData',
        'NMEAcorrections',
        'PersonalSafetyMessage',
        'ProbeDataManagement',
        'ProbeVehicleData',
        'RoadSideAlert',
        'RTCMcorrections',
        'SPAT',
        'SignalRequestMessage',
        'SignalStatusMessage',
        'TravelerInformation',
        'TestMessage00',
        'TestMessage01',
        'TestMessage02',
        'TestMessage03',
        'TestMessage04',
        'TestMessage05',
        'TestMessage06',
        'TestMessage07',
        'TestMessage08',
        'TestMessage09',
        'TestMessage10',
        'TestMessage11',
        'TestMessage12',
        'TestMessage13',
        'TestMessage14',
        'TestMessage15',
        'AccelerationSet4Way',
        'AccelSteerYawRateConfidence',
        'AdvisorySpeed',
        'AdvisorySpeedList',
        'AntennaOffsetSet',
        'ApproachOrLane',
        'BrakeSystemStatus',
        'BSMcoreData',
        'BumperHeights',
        'Circle',
        'ComputedLane',
        'ConfidenceSet',
        'ConnectingLane',
        'Connection',
        'ConnectionManeuverAssist',
        'ConnectsToList',
        'DataParameters',
        'DDate',
        'DDateTime',
        'DFullTime',
        'DMonthDay',
        'DTime',
        'DYearMonth',
        'DisabledVehicle',
        'EmergencyDetails',
        'EnabledLaneList',
        'EventDescription',
        'FullPositionVector',
        'GenericLane',
        'GeographicalPath',
        'GeometricProjection',
        'Header',
        'IntersectionAccessPoint',
        'IntersectionGeometry',
        'IntersectionGeometryList',
        'IntersectionReferenceID',
        'IntersectionState',
        'IntersectionStateList',
        'ExitService',
        'GenericSignage',
        'SpeedLimit',
        'WorkZone',
        'J1939data',
        'TireDataList',
        'TireData',
        'AxleWeightList',
        'AxleWeightSet',
        'LaneAttributes',
        'LaneDataAttribute',
        'LaneDataAttributeList',
        'LaneList',
        'LaneTypeAttributes',
        'ManeuverAssistList',
        'MovementEventList',
        'MovementEvent',
        'MovementList',
        'MovementState',
        'Node-LL-24B',
        'Node-LL-28B',
        'Node-LL-32B',
        'Node-LL-36B',
        'Node-LL-44B',
        'Node-LL-48B',
        'Node-LLmD-64b',
        'Node-XY-20b',
        'Node-XY-22b',
        'Node-XY-24b',
        'Node-XY-26b',
        'Node-XY-28b',
        'Node-XY-32b',
        'NodeAttributeLLList',
        'NodeAttributeSetLL',
        'NodeAttributeSetXY',
        'NodeAttributeXYList',
        'NodeListLL',
        'NodeListXY',
        'NodeLL',
        'NodeOffsetPointLL',
        'NodeOffsetPointXY',
        'NodeSetLL',
        'NodeSetXY',
        'NodeXY',
        'ObstacleDetection',
        'OffsetSystem',
        'OverlayLaneList',
        'PathHistory',
        'PathHistoryPointList',
        'PathHistoryPoint',
        'PathPrediction',
        'PivotPointDescription',
        'Position3D',
        'PositionalAccuracy',
        'PositionConfidenceSet',
        'PreemptPriorityList',
        'SignalControlZone',
        'PrivilegedEvents',
        'PropelledInformation',
        'RegionList',
        'RegionOffsets',
        'RegionPointSet',
        'RegulatorySpeedLimit',
        'RequestedItemList',
        'RequestorDescription',
        'RequestorPositionVector',
        'RequestorType',
        'RestrictionClassAssignment',
        'RestrictionClassList',
        'RestrictionUserTypeList',
        'RestrictionUserType',
        'RoadLaneSetList',
        'RoadSegmentList',
        'RoadSegmentReferenceID',
        'RoadSegment',
        'RoadSignID',
        'RTCMheader',
        'RTCMmessageList',
        'RTCMPackage',
        'Sample',
        'SegmentAttributeLLList',
        'SegmentAttributeXYList',
        'ShapePointSet',
        'SignalRequesterInfo',
        'SignalRequestList',
        'SignalRequestPackage',
        'SignalRequest',
        'SignalStatusList',
        'SignalStatusPackageList',
        'SignalStatusPackage',
        'SignalStatus',
        'SnapshotDistance',
        'Snapshot',
        'SnapshotTime',
        'SpecialVehicleExtensions',
        'SpeedandHeadingandThrottleConfidence',
        'SpeedLimitList',
        'SpeedProfileMeasurementList',
        'SpeedProfile',
        'SupplementalVehicleExtensions',
        'TimeChangeDetails',
        'TrailerData',
        'TrailerHistoryPointList',
        'TrailerHistoryPoint',
        'TrailerUnitDescriptionList',
        'TrailerUnitDescription',
        'TransmissionAndSpeed',
        'TravelerDataFrameList',
        'TravelerDataFrame',
        'ValidRegion',
        'VehicleClassification',
        'VehicleData',
        'VehicleIdent',
        'VehicleID',
        'VehicleSafetyExtensions',
        'VehicleSize',
        'VehicleStatusRequest',
        'VehicleStatusRequestList',
        'VehicleStatus',
        'VerticalOffset',
        'WeatherProbe',
        'WeatherReport',
        'WiperSet',
        'Acceleration',
        'AccelerationConfidence',
        'AdvisorySpeedType',
        'AllowedManeuvers',
        'AmbientAirPressure',
        'AmbientAirTemperature',
        'Angle',
        'AnimalPropelledType',
        'AnimalType',
        'AntiLockBrakeStatus',
        'ApproachID',
        'Attachment',
        'AttachmentRadius',
        'AuxiliaryBrakeStatus',
        'BasicVehicleClass',
        'unknownVehicleClass',
        'specialVehicleClass',
        'passenger-Vehicle-TypeUnknown',
        'passenger-Vehicle-TypeOther',
        'lightTruck-Vehicle-TypeUnknown',
        'lightTruck-Vehicle-TypeOther',
        'truck-Vehicle-TypeUnknown',
        'truck-Vehicle-TypeOther',
        'truck-axleCnt2',
        'truck-axleCnt3',
        'truck-axleCnt4',
        'truck-axleCnt4Trailer',
        'truck-axleCnt5Trailer',
        'truck-axleCnt6Trailer',
        'truck-axleCnt5MultiTrailer',
        'truck-axleCnt6MultiTrailer',
        'truck-axleCnt7MultiTrailer',
        'motorcycle-TypeUnknown',
        'motorcycle-TypeOther',
        'motorcycle-Cruiser-Standard',
        'motorcycle-SportUnclad',
        'motorcycle-SportTouring',
        'motorcycle-SuperSport',
        'motorcycle-Touring',
        'motorcycle-Trike',
        'motorcycle-wPassengers',
        'transit-TypeUnknown',
        'transit-TypeOther',
        'transit-BRT',
        'transit-ExpressBus',
        'transit-LocalBus',
        'transit-SchoolBus',
        'transit-FixedGuideway',
        'transit-Paratransit',
        'transit-Paratransit-Ambulance',
        'emergency-TypeUnknown',
        'emergency-TypeOther',
        'emergency-Fire-Light-Vehicle',
        'emergency-Fire-Heavy-Vehicle',
        'emergency-Fire-Paramedic-Vehicle',
        'emergency-Fire-Ambulance-Vehicle',
        'emergency-Police-Light-Vehicle',
        'emergency-Police-Heavy-Vehicle',
        'emergency-Other-Responder',
        'emergency-Other-Ambulance',
        'otherTraveler-TypeUnknown',
        'otherTraveler-TypeOther',
        'otherTraveler-Pedestrian',
        'otherTraveler-Visually-Disabled',
        'otherTraveler-Physically-Disabled',
        'otherTraveler-Bicycle',
        'otherTraveler-Vulnerable-Roadworker',
        'infrastructure-TypeUnknown',
        'infrastructure-Fixed',
        'infrastructure-Movable',
        'equipped-CargoTrailer',
        'BasicVehicleRole',
        'BrakeAppliedPressure',
        'BrakeAppliedStatus',
        'BrakeBoostApplied',
        'BumperHeight',
        'CoarseHeading',
        'CodeWord',
        'CoefficientOfFriction',
        'Confidence',
        'Count',
        'DDay',
        'DeltaAngle',
        'DeltaTime',
        'DescriptiveName',
        'DHour',
        'DirectionOfUse',
        'DistanceUnits',
        'DMinute',
        'DMonth',
        'DOffset',
        'DrivenLineOffsetLg',
        'DrivenLineOffsetSm',
        'DrivingWheelAngle',
        'DSecond',
        'DSRCmsgID',
        'reservedMessageId-D',
        'alaCarteMessage-D',
        'basicSafetyMessage-D',
        'basicSafetyMessageVerbose-D',
        'commonSafetyRequest-D',
        'emergencyVehicleAlert-D',
        'intersectionCollision-D',
        'mapData-D',
        'nmeaCorrections-D',
        'probeDataManagement-D',
        'probeVehicleData-D',
        'roadSideAlert-D',
        'rtcmCorrections-D',
        'signalPhaseAndTimingMessage-D',
        'signalRequestMessage-D',
        'signalStatusMessage-D',
        'travelerInformation-D',
        'uperFrame-D',
        'mapData',
        'signalPhaseAndTimingMessage',
        'basicSafetyMessage',
        'commonSafetyRequest',
        'emergencyVehicleAlert',
        'intersectionCollision',
        'nmeaCorrections',
        'probeDataManagement',
        'probeVehicleData',
        'roadSideAlert',
        'rtcmCorrections',
        'signalRequestMessage',
        'signalStatusMessage',
        'travelerInformation',
        'personalSafetyMessage',
        'testMessage00',
        'testMessage01',
        'testMessage02',
        'testMessage03',
        'testMessage04',
        'testMessage05',
        'testMessage06',
        'testMessage07',
        'testMessage08',
        'testMessage09',
        'testMessage10',
        'testMessage11',
        'testMessage12',
        'testMessage13',
        'testMessage14',
        'testMessage15',
        'Duration',
        'DYear',
        'ElevationConfidence',
        'Elevation',
        'Extent',
        'ExteriorLights',
        'FuelType',
        'unknownFuel',
        'gasoline',
        'ethanol',
        'diesel',
        'electric',
        'hybrid',
        'hydrogen',
        'natGasLiquid',
        'natGasComp',
        'propane',
        'FurtherInfoID',
        'GNSSstatus',
        'GrossDistance',
        'GrossSpeed',
        'HeadingConfidence',
        'Heading',
        'HeadingSlice',
        'IntersectionID',
        'IntersectionStatusObject',
        'IsDolly',
        'Iso3833VehicleType',
        'ITIStextPhrase',
        'AxleLocation',
        'AxleWeight',
        'CargoWeight',
        'DriveAxleLiftAirPressure',
        'DriveAxleLocation',
        'DriveAxleLubePressure',
        'DriveAxleTemperature',
        'SteeringAxleLubePressure',
        'SteeringAxleTemperature',
        'TireLeakageRate',
        'TireLocation',
        'TirePressureThresholdDetection',
        'TirePressure',
        'TireTemp',
        'TrailerWeight',
        'WheelEndElectFault',
        'WheelSensorStatus',
        'LaneAttributes-Barrier',
        'LaneAttributes-Bike',
        'LaneAttributes-Crosswalk',
        'LaneAttributes-Parking',
        'LaneAttributes-Sidewalk',
        'LaneAttributes-Striping',
        'LaneAttributes-TrackedVehicle',
        'LaneAttributes-Vehicle',
        'LaneConnectionID',
        'LaneDirection',
        'LaneID',
        'LaneSharing',
        'LaneWidth',
        'Latitude',
        'LayerID',
        'LayerType',
        'LightbarInUse',
        'Longitude',
        'Location-quality',
        'Location-tech',
        'MergeDivergeNodeAngle',
        'MessageBLOB',
        'MinuteOfTheYear',
        'MinutesDuration',
        'MotorizedPropelledType',
        'MovementPhaseState',
        'MsgCount',
        'MsgCRC',
        'MultiVehicleResponse',
        'MUTCDCode',
        'NMEA-MsgType',
        'NMEA-Payload',
        'NMEA-Revision',
        'NodeAttributeLL',
        'NodeAttributeXY',
        'NumberOfParticipantsInCluster',
        'ObjectCount',
        'ObstacleDirection',
        'ObstacleDistance',
        'Offset-B09',
        'Offset-B10',
        'Offset-B11',
        'Offset-B12',
        'Offset-B13',
        'Offset-B14',
        'Offset-B16',
        'OffsetLL-B12',
        'OffsetLL-B14',
        'OffsetLL-B16',
        'OffsetLL-B18',
        'OffsetLL-B22',
        'OffsetLL-B24',
        'PayloadData',
        'PedestrianBicycleDetect',
        'HumanPropelledType',
        'PersonalAssistive',
        'PersonalClusterRadius',
        'PersonalCrossingInProgress',
        'PersonalCrossingRequest',
        'PersonalDeviceUsageState',
        'PersonalDeviceUserType',
        'PivotingAllowed',
        'PositionConfidence',
        'PrioritizationResponseStatus',
        'Priority',
        'PriorityRequestType',
        'PrivilegedEventFlags',
        'ProbeSegmentNumber',
        'PublicSafetyAndRoadWorkerActivity',
        'PublicSafetyDirectingTrafficSubType',
        'PublicSafetyEventResponderWorkerType',
        'RadiusOfCurvature',
        'Radius-B12',
        'RainSensor',
        'RegionId',
        'noRegion',
        'addGrpA',
        'addGrpB',
        'addGrpC',
        'RequestedItem',
        'RequestID',
        'RequestImportanceLevel',
        'RequestSubRole',
        'ResponseType',
        'RestrictionAppliesTo',
        'RestrictionClassID',
        'RoadRegulatorID',
        'RoadSegmentID',
        'RoadwayCrownAngle',
        'RTCM-Revision',
        'RTCMmessage',
        'Scale-B12',
        'SecondOfTime',
        'SegmentAttributeLL',
        'SegmentAttributeXY',
        'SemiMajorAxisAccuracy',
        'SemiMajorAxisOrientation',
        'SemiMinorAxisAccuracy',
        'SignalGroupID',
        'SignalReqScheme',
        'SignPrority',
        'SirenInUse',
        'SpeedAdvice',
        'SpeedConfidence',
        'SpeedLimitType',
        'SpeedProfileMeasurement',
        'Speed',
        'SSPindex',
        'StabilityControlStatus',
        'StationID',
        'SteeringWheelAngleConfidence',
        'SteeringWheelAngleRateOfChange',
        'SteeringWheelAngle',
        'SunSensor',
        'TemporaryID',
        'TermDistance',
        'TermTime',
        'ThrottleConfidence',
        'ThrottlePosition',
        'TimeConfidence',
        'TimeIntervalConfidence',
        'TimeMark',
        'TimeOffset',
        'TractionControlStatus',
        'TrailerMass',
        'TransitStatus',
        'TransitVehicleOccupancy',
        'TransitVehicleStatus',
        'TransmissionState',
        'TravelerInfoType',
        'UniqueMSGID',
        'URL-Base',
        'URL-Link',
        'URL-Short',
        'UserSizeAndBehaviour',
        'VehicleEventFlags',
        'VehicleHeight',
        'VehicleLength',
        'VehicleMass',
        'VehicleStatusDeviceTypeTag',
        'VehicleType',
        'VehicleWidth',
        'Velocity',
        'VerticalAccelerationThreshold',
        'VerticalAcceleration',
        'VertOffset-B07',
        'VertOffset-B08',
        'VertOffset-B09',
        'VertOffset-B10',
        'VertOffset-B11',
        'VertOffset-B12',
        'VINstring',
        'WaitOnStopline',
        'WiperRate',
        'WiperStatus',
        'YawRateConfidence',
        'YawRate',
        'ZoneLength',
        'Zoom',
        ]
    _type_ = [
        'MessageFrame',
        'MESSAGE-ID-AND-TYPE',
        'REG-EXT-ID-AND-TYPE',
        'RegionalExtension',
        'BasicSafetyMessage',
        'PARTII-EXT-ID-AND-TYPE',
        'BSMpartIIExtension',
        'PartII-Id',
        'CommonSafetyRequest',
        'EmergencyVehicleAlert',
        'IntersectionCollision',
        'MapData',
        'NMEAcorrections',
        'PersonalSafetyMessage',
        'ProbeDataManagement',
        'ProbeVehicleData',
        'RoadSideAlert',
        'RTCMcorrections',
        'SPAT',
        'SignalRequestMessage',
        'SignalStatusMessage',
        'TravelerInformation',
        'TestMessage00',
        'TestMessage01',
        'TestMessage02',
        'TestMessage03',
        'TestMessage04',
        'TestMessage05',
        'TestMessage06',
        'TestMessage07',
        'TestMessage08',
        'TestMessage09',
        'TestMessage10',
        'TestMessage11',
        'TestMessage12',
        'TestMessage13',
        'TestMessage14',
        'TestMessage15',
        'AccelerationSet4Way',
        'AccelSteerYawRateConfidence',
        'AdvisorySpeed',
        'AdvisorySpeedList',
        'AntennaOffsetSet',
        'ApproachOrLane',
        'BrakeSystemStatus',
        'BSMcoreData',
        'BumperHeights',
        'Circle',
        'ComputedLane',
        'ConfidenceSet',
        'ConnectingLane',
        'Connection',
        'ConnectionManeuverAssist',
        'ConnectsToList',
        'DataParameters',
        'DDate',
        'DDateTime',
        'DFullTime',
        'DMonthDay',
        'DTime',
        'DYearMonth',
        'DisabledVehicle',
        'EmergencyDetails',
        'EnabledLaneList',
        'EventDescription',
        'FullPositionVector',
        'GenericLane',
        'GeographicalPath',
        'GeometricProjection',
        'Header',
        'IntersectionAccessPoint',
        'IntersectionGeometry',
        'IntersectionGeometryList',
        'IntersectionReferenceID',
        'IntersectionState',
        'IntersectionStateList',
        'ExitService',
        'GenericSignage',
        'SpeedLimit',
        'WorkZone',
        'J1939data',
        'TireDataList',
        'TireData',
        'AxleWeightList',
        'AxleWeightSet',
        'LaneAttributes',
        'LaneDataAttribute',
        'LaneDataAttributeList',
        'LaneList',
        'LaneTypeAttributes',
        'ManeuverAssistList',
        'MovementEventList',
        'MovementEvent',
        'MovementList',
        'MovementState',
        'Node-LL-24B',
        'Node-LL-28B',
        'Node-LL-32B',
        'Node-LL-36B',
        'Node-LL-44B',
        'Node-LL-48B',
        'Node-LLmD-64b',
        'Node-XY-20b',
        'Node-XY-22b',
        'Node-XY-24b',
        'Node-XY-26b',
        'Node-XY-28b',
        'Node-XY-32b',
        'NodeAttributeLLList',
        'NodeAttributeSetLL',
        'NodeAttributeSetXY',
        'NodeAttributeXYList',
        'NodeListLL',
        'NodeListXY',
        'NodeLL',
        'NodeOffsetPointLL',
        'NodeOffsetPointXY',
        'NodeSetLL',
        'NodeSetXY',
        'NodeXY',
        'ObstacleDetection',
        'OffsetSystem',
        'OverlayLaneList',
        'PathHistory',
        'PathHistoryPointList',
        'PathHistoryPoint',
        'PathPrediction',
        'PivotPointDescription',
        'Position3D',
        'PositionalAccuracy',
        'PositionConfidenceSet',
        'PreemptPriorityList',
        'SignalControlZone',
        'PrivilegedEvents',
        'PropelledInformation',
        'RegionList',
        'RegionOffsets',
        'RegionPointSet',
        'RegulatorySpeedLimit',
        'RequestedItemList',
        'RequestorDescription',
        'RequestorPositionVector',
        'RequestorType',
        'RestrictionClassAssignment',
        'RestrictionClassList',
        'RestrictionUserTypeList',
        'RestrictionUserType',
        'RoadLaneSetList',
        'RoadSegmentList',
        'RoadSegmentReferenceID',
        'RoadSegment',
        'RoadSignID',
        'RTCMheader',
        'RTCMmessageList',
        'RTCMPackage',
        'Sample',
        'SegmentAttributeLLList',
        'SegmentAttributeXYList',
        'ShapePointSet',
        'SignalRequesterInfo',
        'SignalRequestList',
        'SignalRequestPackage',
        'SignalRequest',
        'SignalStatusList',
        'SignalStatusPackageList',
        'SignalStatusPackage',
        'SignalStatus',
        'SnapshotDistance',
        'Snapshot',
        'SnapshotTime',
        'SpecialVehicleExtensions',
        'SpeedandHeadingandThrottleConfidence',
        'SpeedLimitList',
        'SpeedProfileMeasurementList',
        'SpeedProfile',
        'SupplementalVehicleExtensions',
        'TimeChangeDetails',
        'TrailerData',
        'TrailerHistoryPointList',
        'TrailerHistoryPoint',
        'TrailerUnitDescriptionList',
        'TrailerUnitDescription',
        'TransmissionAndSpeed',
        'TravelerDataFrameList',
        'TravelerDataFrame',
        'ValidRegion',
        'VehicleClassification',
        'VehicleData',
        'VehicleIdent',
        'VehicleID',
        'VehicleSafetyExtensions',
        'VehicleSize',
        'VehicleStatusRequest',
        'VehicleStatusRequestList',
        'VehicleStatus',
        'VerticalOffset',
        'WeatherProbe',
        'WeatherReport',
        'WiperSet',
        'Acceleration',
        'AccelerationConfidence',
        'AdvisorySpeedType',
        'AllowedManeuvers',
        'AmbientAirPressure',
        'AmbientAirTemperature',
        'Angle',
        'AnimalPropelledType',
        'AnimalType',
        'AntiLockBrakeStatus',
        'ApproachID',
        'Attachment',
        'AttachmentRadius',
        'AuxiliaryBrakeStatus',
        'BasicVehicleClass',
        'BasicVehicleRole',
        'BrakeAppliedPressure',
        'BrakeAppliedStatus',
        'BrakeBoostApplied',
        'BumperHeight',
        'CoarseHeading',
        'CodeWord',
        'CoefficientOfFriction',
        'Confidence',
        'Count',
        'DDay',
        'DeltaAngle',
        'DeltaTime',
        'DescriptiveName',
        'DHour',
        'DirectionOfUse',
        'DistanceUnits',
        'DMinute',
        'DMonth',
        'DOffset',
        'DrivenLineOffsetLg',
        'DrivenLineOffsetSm',
        'DrivingWheelAngle',
        'DSecond',
        'DSRCmsgID',
        'Duration',
        'DYear',
        'ElevationConfidence',
        'Elevation',
        'Extent',
        'ExteriorLights',
        'FuelType',
        'FurtherInfoID',
        'GNSSstatus',
        'GrossDistance',
        'GrossSpeed',
        'HeadingConfidence',
        'Heading',
        'HeadingSlice',
        'IntersectionID',
        'IntersectionStatusObject',
        'IsDolly',
        'Iso3833VehicleType',
        'ITIStextPhrase',
        'AxleLocation',
        'AxleWeight',
        'CargoWeight',
        'DriveAxleLiftAirPressure',
        'DriveAxleLocation',
        'DriveAxleLubePressure',
        'DriveAxleTemperature',
        'SteeringAxleLubePressure',
        'SteeringAxleTemperature',
        'TireLeakageRate',
        'TireLocation',
        'TirePressureThresholdDetection',
        'TirePressure',
        'TireTemp',
        'TrailerWeight',
        'WheelEndElectFault',
        'WheelSensorStatus',
        'LaneAttributes-Barrier',
        'LaneAttributes-Bike',
        'LaneAttributes-Crosswalk',
        'LaneAttributes-Parking',
        'LaneAttributes-Sidewalk',
        'LaneAttributes-Striping',
        'LaneAttributes-TrackedVehicle',
        'LaneAttributes-Vehicle',
        'LaneConnectionID',
        'LaneDirection',
        'LaneID',
        'LaneSharing',
        'LaneWidth',
        'Latitude',
        'LayerID',
        'LayerType',
        'LightbarInUse',
        'Longitude',
        'Location-quality',
        'Location-tech',
        'MergeDivergeNodeAngle',
        'MessageBLOB',
        'MinuteOfTheYear',
        'MinutesDuration',
        'MotorizedPropelledType',
        'MovementPhaseState',
        'MsgCount',
        'MsgCRC',
        'MultiVehicleResponse',
        'MUTCDCode',
        'NMEA-MsgType',
        'NMEA-Payload',
        'NMEA-Revision',
        'NodeAttributeLL',
        'NodeAttributeXY',
        'NumberOfParticipantsInCluster',
        'ObjectCount',
        'ObstacleDirection',
        'ObstacleDistance',
        'Offset-B09',
        'Offset-B10',
        'Offset-B11',
        'Offset-B12',
        'Offset-B13',
        'Offset-B14',
        'Offset-B16',
        'OffsetLL-B12',
        'OffsetLL-B14',
        'OffsetLL-B16',
        'OffsetLL-B18',
        'OffsetLL-B22',
        'OffsetLL-B24',
        'PayloadData',
        'PedestrianBicycleDetect',
        'HumanPropelledType',
        'PersonalAssistive',
        'PersonalClusterRadius',
        'PersonalCrossingInProgress',
        'PersonalCrossingRequest',
        'PersonalDeviceUsageState',
        'PersonalDeviceUserType',
        'PivotingAllowed',
        'PositionConfidence',
        'PrioritizationResponseStatus',
        'Priority',
        'PriorityRequestType',
        'PrivilegedEventFlags',
        'ProbeSegmentNumber',
        'PublicSafetyAndRoadWorkerActivity',
        'PublicSafetyDirectingTrafficSubType',
        'PublicSafetyEventResponderWorkerType',
        'RadiusOfCurvature',
        'Radius-B12',
        'RainSensor',
        'RegionId',
        'RequestedItem',
        'RequestID',
        'RequestImportanceLevel',
        'RequestSubRole',
        'ResponseType',
        'RestrictionAppliesTo',
        'RestrictionClassID',
        'RoadRegulatorID',
        'RoadSegmentID',
        'RoadwayCrownAngle',
        'RTCM-Revision',
        'RTCMmessage',
        'Scale-B12',
        'SecondOfTime',
        'SegmentAttributeLL',
        'SegmentAttributeXY',
        'SemiMajorAxisAccuracy',
        'SemiMajorAxisOrientation',
        'SemiMinorAxisAccuracy',
        'SignalGroupID',
        'SignalReqScheme',
        'SignPrority',
        'SirenInUse',
        'SpeedAdvice',
        'SpeedConfidence',
        'SpeedLimitType',
        'SpeedProfileMeasurement',
        'Speed',
        'SSPindex',
        'StabilityControlStatus',
        'StationID',
        'SteeringWheelAngleConfidence',
        'SteeringWheelAngleRateOfChange',
        'SteeringWheelAngle',
        'SunSensor',
        'TemporaryID',
        'TermDistance',
        'TermTime',
        'ThrottleConfidence',
        'ThrottlePosition',
        'TimeConfidence',
        'TimeIntervalConfidence',
        'TimeMark',
        'TimeOffset',
        'TractionControlStatus',
        'TrailerMass',
        'TransitStatus',
        'TransitVehicleOccupancy',
        'TransitVehicleStatus',
        'TransmissionState',
        'TravelerInfoType',
        'UniqueMSGID',
        'URL-Base',
        'URL-Link',
        'URL-Short',
        'UserSizeAndBehaviour',
        'VehicleEventFlags',
        'VehicleHeight',
        'VehicleLength',
        'VehicleMass',
        'VehicleStatusDeviceTypeTag',
        'VehicleType',
        'VehicleWidth',
        'Velocity',
        'VerticalAccelerationThreshold',
        'VerticalAcceleration',
        'VertOffset-B07',
        'VertOffset-B08',
        'VertOffset-B09',
        'VertOffset-B10',
        'VertOffset-B11',
        'VertOffset-B12',
        'VINstring',
        'WaitOnStopline',
        'WiperRate',
        'WiperStatus',
        'YawRateConfidence',
        'YawRate',
        'ZoneLength',
        'Zoom',
        ]
    _set_ = [
        'MessageTypes',
        'BSMpartIIExtension',
        ]
    _val_ = [
        'vehicleSafetyExt',
        'specialVehicleExt',
        'supplementalVehicleExt',
        'unknownVehicleClass',
        'specialVehicleClass',
        'passenger-Vehicle-TypeUnknown',
        'passenger-Vehicle-TypeOther',
        'lightTruck-Vehicle-TypeUnknown',
        'lightTruck-Vehicle-TypeOther',
        'truck-Vehicle-TypeUnknown',
        'truck-Vehicle-TypeOther',
        'truck-axleCnt2',
        'truck-axleCnt3',
        'truck-axleCnt4',
        'truck-axleCnt4Trailer',
        'truck-axleCnt5Trailer',
        'truck-axleCnt6Trailer',
        'truck-axleCnt5MultiTrailer',
        'truck-axleCnt6MultiTrailer',
        'truck-axleCnt7MultiTrailer',
        'motorcycle-TypeUnknown',
        'motorcycle-TypeOther',
        'motorcycle-Cruiser-Standard',
        'motorcycle-SportUnclad',
        'motorcycle-SportTouring',
        'motorcycle-SuperSport',
        'motorcycle-Touring',
        'motorcycle-Trike',
        'motorcycle-wPassengers',
        'transit-TypeUnknown',
        'transit-TypeOther',
        'transit-BRT',
        'transit-ExpressBus',
        'transit-LocalBus',
        'transit-SchoolBus',
        'transit-FixedGuideway',
        'transit-Paratransit',
        'transit-Paratransit-Ambulance',
        'emergency-TypeUnknown',
        'emergency-TypeOther',
        'emergency-Fire-Light-Vehicle',
        'emergency-Fire-Heavy-Vehicle',
        'emergency-Fire-Paramedic-Vehicle',
        'emergency-Fire-Ambulance-Vehicle',
        'emergency-Police-Light-Vehicle',
        'emergency-Police-Heavy-Vehicle',
        'emergency-Other-Responder',
        'emergency-Other-Ambulance',
        'otherTraveler-TypeUnknown',
        'otherTraveler-TypeOther',
        'otherTraveler-Pedestrian',
        'otherTraveler-Visually-Disabled',
        'otherTraveler-Physically-Disabled',
        'otherTraveler-Bicycle',
        'otherTraveler-Vulnerable-Roadworker',
        'infrastructure-TypeUnknown',
        'infrastructure-Fixed',
        'infrastructure-Movable',
        'equipped-CargoTrailer',
        'reservedMessageId-D',
        'alaCarteMessage-D',
        'basicSafetyMessage-D',
        'basicSafetyMessageVerbose-D',
        'commonSafetyRequest-D',
        'emergencyVehicleAlert-D',
        'intersectionCollision-D',
        'mapData-D',
        'nmeaCorrections-D',
        'probeDataManagement-D',
        'probeVehicleData-D',
        'roadSideAlert-D',
        'rtcmCorrections-D',
        'signalPhaseAndTimingMessage-D',
        'signalRequestMessage-D',
        'signalStatusMessage-D',
        'travelerInformation-D',
        'uperFrame-D',
        'mapData',
        'signalPhaseAndTimingMessage',
        'basicSafetyMessage',
        'commonSafetyRequest',
        'emergencyVehicleAlert',
        'intersectionCollision',
        'nmeaCorrections',
        'probeDataManagement',
        'probeVehicleData',
        'roadSideAlert',
        'rtcmCorrections',
        'signalRequestMessage',
        'signalStatusMessage',
        'travelerInformation',
        'personalSafetyMessage',
        'testMessage00',
        'testMessage01',
        'testMessage02',
        'testMessage03',
        'testMessage04',
        'testMessage05',
        'testMessage06',
        'testMessage07',
        'testMessage08',
        'testMessage09',
        'testMessage10',
        'testMessage11',
        'testMessage12',
        'testMessage13',
        'testMessage14',
        'testMessage15',
        'unknownFuel',
        'gasoline',
        'ethanol',
        'diesel',
        'electric',
        'hybrid',
        'hydrogen',
        'natGasLiquid',
        'natGasComp',
        'propane',
        'noRegion',
        'addGrpA',
        'addGrpB',
        'addGrpC',
        ]
    _class_ = [
        'MESSAGE-ID-AND-TYPE',
        'MessageTypes',
        'REG-EXT-ID-AND-TYPE',
        'PARTII-EXT-ID-AND-TYPE',
        'BSMpartIIExtension',
        ]
    _param_ = [
        'RegionalExtension',
        'BSMpartIIExtension',
        ]
    
    #-----< MessageFrame >-----#
    MessageFrame = SEQ(name='MessageFrame', mode=MODE_TYPE)
    _MessageFrame_messageId = INT(name='messageId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'MESSAGE-ID-AND-TYPE'), ['id']))
    __MessageFrame_messageId_tab = CLASS(name='_tab_MESSAGE-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'MESSAGE-ID-AND-TYPE')))
    ___MessageFrame_messageId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'BasicSafetyMessage')))
    ___MessageFrame_messageId_tab_val_Type_1 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'MapData')))
    ___MessageFrame_messageId_tab_val_Type_2 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SPAT')))
    ___MessageFrame_messageId_tab_val_Type_3 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'CommonSafetyRequest')))
    ___MessageFrame_messageId_tab_val_Type_4 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'EmergencyVehicleAlert')))
    ___MessageFrame_messageId_tab_val_Type_5 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'IntersectionCollision')))
    ___MessageFrame_messageId_tab_val_Type_6 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'NMEAcorrections')))
    ___MessageFrame_messageId_tab_val_Type_7 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'ProbeDataManagement')))
    ___MessageFrame_messageId_tab_val_Type_8 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'ProbeVehicleData')))
    ___MessageFrame_messageId_tab_val_Type_9 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RoadSideAlert')))
    ___MessageFrame_messageId_tab_val_Type_10 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RTCMcorrections')))
    ___MessageFrame_messageId_tab_val_Type_11 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalRequestMessage')))
    ___MessageFrame_messageId_tab_val_Type_12 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalStatusMessage')))
    ___MessageFrame_messageId_tab_val_Type_13 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TravelerInformation')))
    ___MessageFrame_messageId_tab_val_Type_14 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'PersonalSafetyMessage')))
    ___MessageFrame_messageId_tab_val_Type_15 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage00')))
    ___MessageFrame_messageId_tab_val_Type_16 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage01')))
    ___MessageFrame_messageId_tab_val_Type_17 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage02')))
    ___MessageFrame_messageId_tab_val_Type_18 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage03')))
    ___MessageFrame_messageId_tab_val_Type_19 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage04')))
    ___MessageFrame_messageId_tab_val_Type_20 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage05')))
    ___MessageFrame_messageId_tab_val_Type_21 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage06')))
    ___MessageFrame_messageId_tab_val_Type_22 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage07')))
    ___MessageFrame_messageId_tab_val_Type_23 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage08')))
    ___MessageFrame_messageId_tab_val_Type_24 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage09')))
    ___MessageFrame_messageId_tab_val_Type_25 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage10')))
    ___MessageFrame_messageId_tab_val_Type_26 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage11')))
    ___MessageFrame_messageId_tab_val_Type_27 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage12')))
    ___MessageFrame_messageId_tab_val_Type_28 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage13')))
    ___MessageFrame_messageId_tab_val_Type_29 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage14')))
    ___MessageFrame_messageId_tab_val_Type_30 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage15')))
    __MessageFrame_messageId_tab._val = ASN1Set(rv=[dict([('Type', ___MessageFrame_messageId_tab_val_Type_0), ('id', 20)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_1), ('id', 18)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_2), ('id', 19)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_3), ('id', 21)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_4), ('id', 22)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_5), ('id', 23)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_6), ('id', 24)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_7), ('id', 25)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_8), ('id', 26)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_9), ('id', 27)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_10), ('id', 28)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_11), ('id', 29)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_12), ('id', 30)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_13), ('id', 31)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_14), ('id', 32)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_15), ('id', 240)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_16), ('id', 241)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_17), ('id', 242)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_18), ('id', 243)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_19), ('id', 244)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_20), ('id', 245)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_21), ('id', 246)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_22), ('id', 247)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_23), ('id', 248)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_24), ('id', 249)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_25), ('id', 250)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_26), ('id', 251)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_27), ('id', 252)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_28), ('id', 253)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_29), ('id', 254)]), dict([('Type', ___MessageFrame_messageId_tab_val_Type_30), ('id', 255)])], rr=[], ev=None, er=[])
    _MessageFrame_messageId._const_tab = __MessageFrame_messageId_tab
    _MessageFrame_messageId._const_tab_at = None
    _MessageFrame_messageId._const_tab_id = 'id'
    _MessageFrame_value = OPEN(name='value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'MESSAGE-ID-AND-TYPE'), ['Type']))
    _MessageFrame_value._const_tab = __MessageFrame_messageId_tab
    _MessageFrame_value._const_tab_at = ('..', 'messageId')
    _MessageFrame_value._const_tab_id = 'Type'
    MessageFrame._cont = ASN1Dict([
        ('messageId', _MessageFrame_messageId),
        ('value', _MessageFrame_value),
        ])
    MessageFrame._ext = []
    
    #-----< MESSAGE-ID-AND-TYPE >-----#
    MESSAGE_ID_AND_TYPE = CLASS(name='MESSAGE-ID-AND-TYPE', mode=MODE_TYPE)
    _MESSAGE_ID_AND_TYPE_id = INT(name='id', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')), uniq=True)
    _MESSAGE_ID_AND_TYPE_Type = OPEN(name='Type', mode=MODE_TYPE)
    MESSAGE_ID_AND_TYPE._cont = ASN1Dict([
        ('id', _MESSAGE_ID_AND_TYPE_id),
        ('Type', _MESSAGE_ID_AND_TYPE_Type),
        ])
    
    #-----< MessageTypes >-----#
    MessageTypes = CLASS(name='MessageTypes', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'MESSAGE-ID-AND-TYPE')))
    _MessageTypes_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'BasicSafetyMessage')))
    _MessageTypes_val_Type_1 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'MapData')))
    _MessageTypes_val_Type_2 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SPAT')))
    _MessageTypes_val_Type_3 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'CommonSafetyRequest')))
    _MessageTypes_val_Type_4 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'EmergencyVehicleAlert')))
    _MessageTypes_val_Type_5 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'IntersectionCollision')))
    _MessageTypes_val_Type_6 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'NMEAcorrections')))
    _MessageTypes_val_Type_7 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'ProbeDataManagement')))
    _MessageTypes_val_Type_8 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'ProbeVehicleData')))
    _MessageTypes_val_Type_9 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RoadSideAlert')))
    _MessageTypes_val_Type_10 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RTCMcorrections')))
    _MessageTypes_val_Type_11 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalRequestMessage')))
    _MessageTypes_val_Type_12 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalStatusMessage')))
    _MessageTypes_val_Type_13 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TravelerInformation')))
    _MessageTypes_val_Type_14 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'PersonalSafetyMessage')))
    _MessageTypes_val_Type_15 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage00')))
    _MessageTypes_val_Type_16 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage01')))
    _MessageTypes_val_Type_17 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage02')))
    _MessageTypes_val_Type_18 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage03')))
    _MessageTypes_val_Type_19 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage04')))
    _MessageTypes_val_Type_20 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage05')))
    _MessageTypes_val_Type_21 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage06')))
    _MessageTypes_val_Type_22 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage07')))
    _MessageTypes_val_Type_23 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage08')))
    _MessageTypes_val_Type_24 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage09')))
    _MessageTypes_val_Type_25 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage10')))
    _MessageTypes_val_Type_26 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage11')))
    _MessageTypes_val_Type_27 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage12')))
    _MessageTypes_val_Type_28 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage13')))
    _MessageTypes_val_Type_29 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage14')))
    _MessageTypes_val_Type_30 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TestMessage15')))
    MessageTypes._val = ASN1Set(rv=[dict([('Type', _MessageTypes_val_Type_0), ('id', 20)]), dict([('Type', _MessageTypes_val_Type_1), ('id', 18)]), dict([('Type', _MessageTypes_val_Type_2), ('id', 19)]), dict([('Type', _MessageTypes_val_Type_3), ('id', 21)]), dict([('Type', _MessageTypes_val_Type_4), ('id', 22)]), dict([('Type', _MessageTypes_val_Type_5), ('id', 23)]), dict([('Type', _MessageTypes_val_Type_6), ('id', 24)]), dict([('Type', _MessageTypes_val_Type_7), ('id', 25)]), dict([('Type', _MessageTypes_val_Type_8), ('id', 26)]), dict([('Type', _MessageTypes_val_Type_9), ('id', 27)]), dict([('Type', _MessageTypes_val_Type_10), ('id', 28)]), dict([('Type', _MessageTypes_val_Type_11), ('id', 29)]), dict([('Type', _MessageTypes_val_Type_12), ('id', 30)]), dict([('Type', _MessageTypes_val_Type_13), ('id', 31)]), dict([('Type', _MessageTypes_val_Type_14), ('id', 32)]), dict([('Type', _MessageTypes_val_Type_15), ('id', 240)]), dict([('Type', _MessageTypes_val_Type_16), ('id', 241)]), dict([('Type', _MessageTypes_val_Type_17), ('id', 242)]), dict([('Type', _MessageTypes_val_Type_18), ('id', 243)]), dict([('Type', _MessageTypes_val_Type_19), ('id', 244)]), dict([('Type', _MessageTypes_val_Type_20), ('id', 245)]), dict([('Type', _MessageTypes_val_Type_21), ('id', 246)]), dict([('Type', _MessageTypes_val_Type_22), ('id', 247)]), dict([('Type', _MessageTypes_val_Type_23), ('id', 248)]), dict([('Type', _MessageTypes_val_Type_24), ('id', 249)]), dict([('Type', _MessageTypes_val_Type_25), ('id', 250)]), dict([('Type', _MessageTypes_val_Type_26), ('id', 251)]), dict([('Type', _MessageTypes_val_Type_27), ('id', 252)]), dict([('Type', _MessageTypes_val_Type_28), ('id', 253)]), dict([('Type', _MessageTypes_val_Type_29), ('id', 254)]), dict([('Type', _MessageTypes_val_Type_30), ('id', 255)])], rr=[], ev=[], er=[])
    
    #-----< REG-EXT-ID-AND-TYPE >-----#
    REG_EXT_ID_AND_TYPE = CLASS(name='REG-EXT-ID-AND-TYPE', mode=MODE_TYPE)
    _REG_EXT_ID_AND_TYPE_id = INT(name='id', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'RegionId')), uniq=True)
    _REG_EXT_ID_AND_TYPE_Type = OPEN(name='Type', mode=MODE_TYPE)
    REG_EXT_ID_AND_TYPE._cont = ASN1Dict([
        ('id', _REG_EXT_ID_AND_TYPE_id),
        ('Type', _REG_EXT_ID_AND_TYPE_Type),
        ])
    
    #-----< RegionalExtension >-----#
    RegionalExtension = SEQ(name='RegionalExtension', mode=MODE_TYPE, param=True)
    
    #-----< BasicSafetyMessage >-----#
    BasicSafetyMessage = SEQ(name='BasicSafetyMessage', mode=MODE_TYPE)
    _BasicSafetyMessage_coreData = SEQ(name='coreData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BSMcoreData')))
    _BasicSafetyMessage_partII = SEQ_OF(name='partII', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasicSafetyMessage_partII__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'BSMpartIIExtension')))
    ___BasicSafetyMessage_partII__item__partII_Id = INT(name='partII-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'PARTII-EXT-ID-AND-TYPE'), ['id']))
    ____BasicSafetyMessage_partII__item__partII_Id_tab = CLASS(name='_tab_PARTII-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'PARTII-EXT-ID-AND-TYPE')))
    _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'VehicleSafetyExtensions')))
    _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_1 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SpecialVehicleExtensions')))
    _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_2 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SupplementalVehicleExtensions')))
    ____BasicSafetyMessage_partII__item__partII_Id_tab._val = ASN1Set(rv=[dict([('Type', _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_0), ('id', 0)]), dict([('Type', _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_1), ('id', 1)]), dict([('Type', _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_2), ('id', 2)])], rr=[], ev=None, er=[])
    ___BasicSafetyMessage_partII__item__partII_Id._const_tab = ____BasicSafetyMessage_partII__item__partII_Id_tab
    ___BasicSafetyMessage_partII__item__partII_Id._const_tab_at = None
    ___BasicSafetyMessage_partII__item__partII_Id._const_tab_id = 'id'
    ___BasicSafetyMessage_partII__item__partII_Value = OPEN(name='partII-Value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'PARTII-EXT-ID-AND-TYPE'), ['Type']))
    ___BasicSafetyMessage_partII__item__partII_Value._const_tab = ____BasicSafetyMessage_partII__item__partII_Id_tab
    ___BasicSafetyMessage_partII__item__partII_Value._const_tab_at = ('..', 'partII-Id')
    ___BasicSafetyMessage_partII__item__partII_Value._const_tab_id = 'Type'
    __BasicSafetyMessage_partII__item_._cont = ASN1Dict([
        ('partII-Id', ___BasicSafetyMessage_partII__item__partII_Id),
        ('partII-Value', ___BasicSafetyMessage_partII__item__partII_Value),
        ])
    __BasicSafetyMessage_partII__item_._ext = None
    _BasicSafetyMessage_partII._cont = __BasicSafetyMessage_partII__item_
    _BasicSafetyMessage_partII._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _BasicSafetyMessage_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasicSafetyMessage_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___BasicSafetyMessage_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____BasicSafetyMessage_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____BasicSafetyMessage_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___BasicSafetyMessage_regional__item__regionId._const_tab = ____BasicSafetyMessage_regional__item__regionId_tab
    ___BasicSafetyMessage_regional__item__regionId._const_tab_at = None
    ___BasicSafetyMessage_regional__item__regionId._const_tab_id = 'id'
    ___BasicSafetyMessage_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___BasicSafetyMessage_regional__item__regExtValue._const_tab = ____BasicSafetyMessage_regional__item__regionId_tab
    ___BasicSafetyMessage_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___BasicSafetyMessage_regional__item__regExtValue._const_tab_id = 'Type'
    __BasicSafetyMessage_regional__item_._cont = ASN1Dict([
        ('regionId', ___BasicSafetyMessage_regional__item__regionId),
        ('regExtValue', ___BasicSafetyMessage_regional__item__regExtValue),
        ])
    __BasicSafetyMessage_regional__item_._ext = None
    _BasicSafetyMessage_regional._cont = __BasicSafetyMessage_regional__item_
    _BasicSafetyMessage_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    BasicSafetyMessage._cont = ASN1Dict([
        ('coreData', _BasicSafetyMessage_coreData),
        ('partII', _BasicSafetyMessage_partII),
        ('regional', _BasicSafetyMessage_regional),
        ])
    BasicSafetyMessage._ext = []
    
    #-----< PARTII-EXT-ID-AND-TYPE >-----#
    PARTII_EXT_ID_AND_TYPE = CLASS(name='PARTII-EXT-ID-AND-TYPE', mode=MODE_TYPE)
    _PARTII_EXT_ID_AND_TYPE_id = INT(name='id', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'PartII-Id')), uniq=True)
    _PARTII_EXT_ID_AND_TYPE_Type = OPEN(name='Type', mode=MODE_TYPE)
    PARTII_EXT_ID_AND_TYPE._cont = ASN1Dict([
        ('id', _PARTII_EXT_ID_AND_TYPE_id),
        ('Type', _PARTII_EXT_ID_AND_TYPE_Type),
        ])
    
    #-----< BSMpartIIExtension >-----#
    BSMpartIIExtension = SEQ(name='BSMpartIIExtension', mode=MODE_TYPE, param=True)
    
    #-----< PartII-Id >-----#
    PartII_Id = INT(name='PartII-Id', mode=MODE_TYPE)
    PartII_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< vehicleSafetyExt >-----#
    vehicleSafetyExt = INT(name='vehicleSafetyExt', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'PartII-Id')))
    vehicleSafetyExt._val = 0
    
    #-----< specialVehicleExt >-----#
    specialVehicleExt = INT(name='specialVehicleExt', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'PartII-Id')))
    specialVehicleExt._val = 1
    
    #-----< supplementalVehicleExt >-----#
    supplementalVehicleExt = INT(name='supplementalVehicleExt', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'PartII-Id')))
    supplementalVehicleExt._val = 2
    
    #-----< BSMpartIIExtension >-----#
    BSMpartIIExtension = CLASS(name='BSMpartIIExtension', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'PARTII-EXT-ID-AND-TYPE')))
    _BSMpartIIExtension_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'VehicleSafetyExtensions')))
    _BSMpartIIExtension_val_Type_1 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SpecialVehicleExtensions')))
    _BSMpartIIExtension_val_Type_2 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SupplementalVehicleExtensions')))
    BSMpartIIExtension._val = ASN1Set(rv=[dict([('Type', _BSMpartIIExtension_val_Type_0), ('id', 0)]), dict([('Type', _BSMpartIIExtension_val_Type_1), ('id', 1)]), dict([('Type', _BSMpartIIExtension_val_Type_2), ('id', 2)])], rr=[], ev=[], er=[])
    
    #-----< CommonSafetyRequest >-----#
    CommonSafetyRequest = SEQ(name='CommonSafetyRequest', mode=MODE_TYPE)
    _CommonSafetyRequest_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _CommonSafetyRequest_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')), opt=True)
    _CommonSafetyRequest_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TemporaryID')), opt=True)
    _CommonSafetyRequest_requests = SEQ_OF(name='requests', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestedItemList')))
    _CommonSafetyRequest_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CommonSafetyRequest_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___CommonSafetyRequest_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____CommonSafetyRequest_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____CommonSafetyRequest_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___CommonSafetyRequest_regional__item__regionId._const_tab = ____CommonSafetyRequest_regional__item__regionId_tab
    ___CommonSafetyRequest_regional__item__regionId._const_tab_at = None
    ___CommonSafetyRequest_regional__item__regionId._const_tab_id = 'id'
    ___CommonSafetyRequest_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___CommonSafetyRequest_regional__item__regExtValue._const_tab = ____CommonSafetyRequest_regional__item__regionId_tab
    ___CommonSafetyRequest_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___CommonSafetyRequest_regional__item__regExtValue._const_tab_id = 'Type'
    __CommonSafetyRequest_regional__item_._cont = ASN1Dict([
        ('regionId', ___CommonSafetyRequest_regional__item__regionId),
        ('regExtValue', ___CommonSafetyRequest_regional__item__regExtValue),
        ])
    __CommonSafetyRequest_regional__item_._ext = None
    _CommonSafetyRequest_regional._cont = __CommonSafetyRequest_regional__item_
    _CommonSafetyRequest_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    CommonSafetyRequest._cont = ASN1Dict([
        ('timeStamp', _CommonSafetyRequest_timeStamp),
        ('msgCnt', _CommonSafetyRequest_msgCnt),
        ('id', _CommonSafetyRequest_id),
        ('requests', _CommonSafetyRequest_requests),
        ('regional', _CommonSafetyRequest_regional),
        ])
    CommonSafetyRequest._ext = []
    
    #-----< EmergencyVehicleAlert >-----#
    EmergencyVehicleAlert = SEQ(name='EmergencyVehicleAlert', mode=MODE_TYPE)
    _EmergencyVehicleAlert_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _EmergencyVehicleAlert_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TemporaryID')), opt=True)
    _EmergencyVehicleAlert_rsaMsg = SEQ(name='rsaMsg', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadSideAlert')))
    _EmergencyVehicleAlert_responseType = ENUM(name='responseType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ResponseType')), opt=True)
    _EmergencyVehicleAlert_details = SEQ(name='details', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'EmergencyDetails')), opt=True)
    _EmergencyVehicleAlert_mass = INT(name='mass', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleMass')), opt=True)
    _EmergencyVehicleAlert_basicType = ENUM(name='basicType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleType')), opt=True)
    _EmergencyVehicleAlert_vehicleType = ENUM(name='vehicleType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'VehicleGroupAffected')), opt=True)
    _EmergencyVehicleAlert_responseEquip = ENUM(name='responseEquip', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'IncidentResponseEquipment')), opt=True)
    _EmergencyVehicleAlert_responderType = ENUM(name='responderType', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ResponderGroupAffected')), opt=True)
    _EmergencyVehicleAlert_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EmergencyVehicleAlert_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___EmergencyVehicleAlert_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____EmergencyVehicleAlert_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____EmergencyVehicleAlert_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___EmergencyVehicleAlert_regional__item__regionId._const_tab = ____EmergencyVehicleAlert_regional__item__regionId_tab
    ___EmergencyVehicleAlert_regional__item__regionId._const_tab_at = None
    ___EmergencyVehicleAlert_regional__item__regionId._const_tab_id = 'id'
    ___EmergencyVehicleAlert_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___EmergencyVehicleAlert_regional__item__regExtValue._const_tab = ____EmergencyVehicleAlert_regional__item__regionId_tab
    ___EmergencyVehicleAlert_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___EmergencyVehicleAlert_regional__item__regExtValue._const_tab_id = 'Type'
    __EmergencyVehicleAlert_regional__item_._cont = ASN1Dict([
        ('regionId', ___EmergencyVehicleAlert_regional__item__regionId),
        ('regExtValue', ___EmergencyVehicleAlert_regional__item__regExtValue),
        ])
    __EmergencyVehicleAlert_regional__item_._ext = None
    _EmergencyVehicleAlert_regional._cont = __EmergencyVehicleAlert_regional__item_
    _EmergencyVehicleAlert_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    EmergencyVehicleAlert._cont = ASN1Dict([
        ('timeStamp', _EmergencyVehicleAlert_timeStamp),
        ('id', _EmergencyVehicleAlert_id),
        ('rsaMsg', _EmergencyVehicleAlert_rsaMsg),
        ('responseType', _EmergencyVehicleAlert_responseType),
        ('details', _EmergencyVehicleAlert_details),
        ('mass', _EmergencyVehicleAlert_mass),
        ('basicType', _EmergencyVehicleAlert_basicType),
        ('vehicleType', _EmergencyVehicleAlert_vehicleType),
        ('responseEquip', _EmergencyVehicleAlert_responseEquip),
        ('responderType', _EmergencyVehicleAlert_responderType),
        ('regional', _EmergencyVehicleAlert_regional),
        ])
    EmergencyVehicleAlert._ext = []
    
    #-----< IntersectionCollision >-----#
    IntersectionCollision = SEQ(name='IntersectionCollision', mode=MODE_TYPE)
    _IntersectionCollision_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _IntersectionCollision_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TemporaryID')))
    _IntersectionCollision_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _IntersectionCollision_partOne = SEQ(name='partOne', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BSMcoreData')), opt=True)
    _IntersectionCollision_path = SEQ(name='path', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathHistory')), opt=True)
    _IntersectionCollision_pathPrediction = SEQ(name='pathPrediction', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathPrediction')), opt=True)
    _IntersectionCollision_intersectionID = SEQ(name='intersectionID', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionReferenceID')))
    _IntersectionCollision_laneNumber = CHOICE(name='laneNumber', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'ApproachOrLane')))
    _IntersectionCollision_eventFlag = BIT_STR(name='eventFlag', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleEventFlags')))
    _IntersectionCollision_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IntersectionCollision_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___IntersectionCollision_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____IntersectionCollision_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____IntersectionCollision_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___IntersectionCollision_regional__item__regionId._const_tab = ____IntersectionCollision_regional__item__regionId_tab
    ___IntersectionCollision_regional__item__regionId._const_tab_at = None
    ___IntersectionCollision_regional__item__regionId._const_tab_id = 'id'
    ___IntersectionCollision_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___IntersectionCollision_regional__item__regExtValue._const_tab = ____IntersectionCollision_regional__item__regionId_tab
    ___IntersectionCollision_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___IntersectionCollision_regional__item__regExtValue._const_tab_id = 'Type'
    __IntersectionCollision_regional__item_._cont = ASN1Dict([
        ('regionId', ___IntersectionCollision_regional__item__regionId),
        ('regExtValue', ___IntersectionCollision_regional__item__regExtValue),
        ])
    __IntersectionCollision_regional__item_._ext = None
    _IntersectionCollision_regional._cont = __IntersectionCollision_regional__item_
    _IntersectionCollision_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    IntersectionCollision._cont = ASN1Dict([
        ('msgCnt', _IntersectionCollision_msgCnt),
        ('id', _IntersectionCollision_id),
        ('timeStamp', _IntersectionCollision_timeStamp),
        ('partOne', _IntersectionCollision_partOne),
        ('path', _IntersectionCollision_path),
        ('pathPrediction', _IntersectionCollision_pathPrediction),
        ('intersectionID', _IntersectionCollision_intersectionID),
        ('laneNumber', _IntersectionCollision_laneNumber),
        ('eventFlag', _IntersectionCollision_eventFlag),
        ('regional', _IntersectionCollision_regional),
        ])
    IntersectionCollision._ext = []
    
    #-----< MapData >-----#
    MapData = SEQ(name='MapData', mode=MODE_TYPE)
    _MapData_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _MapData_msgIssueRevision = INT(name='msgIssueRevision', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _MapData_layerType = ENUM(name='layerType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LayerType')), opt=True)
    _MapData_layerID = INT(name='layerID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LayerID')), opt=True)
    _MapData_intersections = SEQ_OF(name='intersections', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionGeometryList')), opt=True)
    _MapData_roadSegments = SEQ_OF(name='roadSegments', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadSegmentList')), opt=True)
    _MapData_dataParameters = SEQ(name='dataParameters', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DataParameters')), opt=True)
    _MapData_restrictionList = SEQ_OF(name='restrictionList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RestrictionClassList')), opt=True)
    _MapData_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MapData_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___MapData_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____MapData_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____MapData_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'MapData-addGrpC')))
    ____MapData_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____MapData_regional__item__regionId_tab_val_Type_0), ('id', 3)])], rr=[], ev=None, er=[])
    ___MapData_regional__item__regionId._const_tab = ____MapData_regional__item__regionId_tab
    ___MapData_regional__item__regionId._const_tab_at = None
    ___MapData_regional__item__regionId._const_tab_id = 'id'
    ___MapData_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___MapData_regional__item__regExtValue._const_tab = ____MapData_regional__item__regionId_tab
    ___MapData_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___MapData_regional__item__regExtValue._const_tab_id = 'Type'
    __MapData_regional__item_._cont = ASN1Dict([
        ('regionId', ___MapData_regional__item__regionId),
        ('regExtValue', ___MapData_regional__item__regExtValue),
        ])
    __MapData_regional__item_._ext = None
    _MapData_regional._cont = __MapData_regional__item_
    _MapData_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    MapData._cont = ASN1Dict([
        ('timeStamp', _MapData_timeStamp),
        ('msgIssueRevision', _MapData_msgIssueRevision),
        ('layerType', _MapData_layerType),
        ('layerID', _MapData_layerID),
        ('intersections', _MapData_intersections),
        ('roadSegments', _MapData_roadSegments),
        ('dataParameters', _MapData_dataParameters),
        ('restrictionList', _MapData_restrictionList),
        ('regional', _MapData_regional),
        ])
    MapData._ext = []
    
    #-----< NMEAcorrections >-----#
    NMEAcorrections = SEQ(name='NMEAcorrections', mode=MODE_TYPE)
    _NMEAcorrections_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _NMEAcorrections_rev = ENUM(name='rev', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NMEA-Revision')), opt=True)
    _NMEAcorrections_msg = INT(name='msg', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NMEA-MsgType')), opt=True)
    _NMEAcorrections_wdCount = INT(name='wdCount', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ObjectCount')), opt=True)
    _NMEAcorrections_payload = OCT_STR(name='payload', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NMEA-Payload')))
    _NMEAcorrections_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __NMEAcorrections_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___NMEAcorrections_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____NMEAcorrections_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____NMEAcorrections_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___NMEAcorrections_regional__item__regionId._const_tab = ____NMEAcorrections_regional__item__regionId_tab
    ___NMEAcorrections_regional__item__regionId._const_tab_at = None
    ___NMEAcorrections_regional__item__regionId._const_tab_id = 'id'
    ___NMEAcorrections_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___NMEAcorrections_regional__item__regExtValue._const_tab = ____NMEAcorrections_regional__item__regionId_tab
    ___NMEAcorrections_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___NMEAcorrections_regional__item__regExtValue._const_tab_id = 'Type'
    __NMEAcorrections_regional__item_._cont = ASN1Dict([
        ('regionId', ___NMEAcorrections_regional__item__regionId),
        ('regExtValue', ___NMEAcorrections_regional__item__regExtValue),
        ])
    __NMEAcorrections_regional__item_._ext = None
    _NMEAcorrections_regional._cont = __NMEAcorrections_regional__item_
    _NMEAcorrections_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    NMEAcorrections._cont = ASN1Dict([
        ('timeStamp', _NMEAcorrections_timeStamp),
        ('rev', _NMEAcorrections_rev),
        ('msg', _NMEAcorrections_msg),
        ('wdCount', _NMEAcorrections_wdCount),
        ('payload', _NMEAcorrections_payload),
        ('regional', _NMEAcorrections_regional),
        ])
    NMEAcorrections._ext = []
    
    #-----< PersonalSafetyMessage >-----#
    PersonalSafetyMessage = SEQ(name='PersonalSafetyMessage', mode=MODE_TYPE)
    _PersonalSafetyMessage_basicType = ENUM(name='basicType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PersonalDeviceUserType')))
    _PersonalSafetyMessage_secMark = INT(name='secMark', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')))
    _PersonalSafetyMessage_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _PersonalSafetyMessage_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TemporaryID')))
    _PersonalSafetyMessage_position = SEQ(name='position', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')))
    _PersonalSafetyMessage_accuracy = SEQ(name='accuracy', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionalAccuracy')))
    _PersonalSafetyMessage_speed = INT(name='speed', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Velocity')))
    _PersonalSafetyMessage_heading = INT(name='heading', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Heading')))
    _PersonalSafetyMessage_accelSet = SEQ(name='accelSet', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AccelerationSet4Way')), opt=True)
    _PersonalSafetyMessage_pathHistory = SEQ(name='pathHistory', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathHistory')), opt=True)
    _PersonalSafetyMessage_pathPrediction = SEQ(name='pathPrediction', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathPrediction')), opt=True)
    _PersonalSafetyMessage_propulsion = CHOICE(name='propulsion', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'PropelledInformation')), opt=True)
    _PersonalSafetyMessage_useState = BIT_STR(name='useState', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PersonalDeviceUsageState')), opt=True)
    _PersonalSafetyMessage_crossRequest = BOOL(name='crossRequest', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PersonalCrossingRequest')), opt=True)
    _PersonalSafetyMessage_crossState = BOOL(name='crossState', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PersonalCrossingInProgress')), opt=True)
    _PersonalSafetyMessage_clusterSize = ENUM(name='clusterSize', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NumberOfParticipantsInCluster')), opt=True)
    _PersonalSafetyMessage_clusterRadius = INT(name='clusterRadius', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PersonalClusterRadius')), opt=True)
    _PersonalSafetyMessage_eventResponderType = ENUM(name='eventResponderType', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PublicSafetyEventResponderWorkerType')), opt=True)
    _PersonalSafetyMessage_activityType = BIT_STR(name='activityType', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PublicSafetyAndRoadWorkerActivity')), opt=True)
    _PersonalSafetyMessage_activitySubType = BIT_STR(name='activitySubType', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PublicSafetyDirectingTrafficSubType')), opt=True)
    _PersonalSafetyMessage_assistType = BIT_STR(name='assistType', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PersonalAssistive')), opt=True)
    _PersonalSafetyMessage_sizing = BIT_STR(name='sizing', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'UserSizeAndBehaviour')), opt=True)
    _PersonalSafetyMessage_attachment = ENUM(name='attachment', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Attachment')), opt=True)
    _PersonalSafetyMessage_attachmentRadius = INT(name='attachmentRadius', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AttachmentRadius')), opt=True)
    _PersonalSafetyMessage_animalType = ENUM(name='animalType', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AnimalType')), opt=True)
    _PersonalSafetyMessage_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PersonalSafetyMessage_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___PersonalSafetyMessage_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____PersonalSafetyMessage_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____PersonalSafetyMessage_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___PersonalSafetyMessage_regional__item__regionId._const_tab = ____PersonalSafetyMessage_regional__item__regionId_tab
    ___PersonalSafetyMessage_regional__item__regionId._const_tab_at = None
    ___PersonalSafetyMessage_regional__item__regionId._const_tab_id = 'id'
    ___PersonalSafetyMessage_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___PersonalSafetyMessage_regional__item__regExtValue._const_tab = ____PersonalSafetyMessage_regional__item__regionId_tab
    ___PersonalSafetyMessage_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___PersonalSafetyMessage_regional__item__regExtValue._const_tab_id = 'Type'
    __PersonalSafetyMessage_regional__item_._cont = ASN1Dict([
        ('regionId', ___PersonalSafetyMessage_regional__item__regionId),
        ('regExtValue', ___PersonalSafetyMessage_regional__item__regExtValue),
        ])
    __PersonalSafetyMessage_regional__item_._ext = None
    _PersonalSafetyMessage_regional._cont = __PersonalSafetyMessage_regional__item_
    _PersonalSafetyMessage_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    PersonalSafetyMessage._cont = ASN1Dict([
        ('basicType', _PersonalSafetyMessage_basicType),
        ('secMark', _PersonalSafetyMessage_secMark),
        ('msgCnt', _PersonalSafetyMessage_msgCnt),
        ('id', _PersonalSafetyMessage_id),
        ('position', _PersonalSafetyMessage_position),
        ('accuracy', _PersonalSafetyMessage_accuracy),
        ('speed', _PersonalSafetyMessage_speed),
        ('heading', _PersonalSafetyMessage_heading),
        ('accelSet', _PersonalSafetyMessage_accelSet),
        ('pathHistory', _PersonalSafetyMessage_pathHistory),
        ('pathPrediction', _PersonalSafetyMessage_pathPrediction),
        ('propulsion', _PersonalSafetyMessage_propulsion),
        ('useState', _PersonalSafetyMessage_useState),
        ('crossRequest', _PersonalSafetyMessage_crossRequest),
        ('crossState', _PersonalSafetyMessage_crossState),
        ('clusterSize', _PersonalSafetyMessage_clusterSize),
        ('clusterRadius', _PersonalSafetyMessage_clusterRadius),
        ('eventResponderType', _PersonalSafetyMessage_eventResponderType),
        ('activityType', _PersonalSafetyMessage_activityType),
        ('activitySubType', _PersonalSafetyMessage_activitySubType),
        ('assistType', _PersonalSafetyMessage_assistType),
        ('sizing', _PersonalSafetyMessage_sizing),
        ('attachment', _PersonalSafetyMessage_attachment),
        ('attachmentRadius', _PersonalSafetyMessage_attachmentRadius),
        ('animalType', _PersonalSafetyMessage_animalType),
        ('regional', _PersonalSafetyMessage_regional),
        ])
    PersonalSafetyMessage._ext = []
    
    #-----< ProbeDataManagement >-----#
    ProbeDataManagement = SEQ(name='ProbeDataManagement', mode=MODE_TYPE)
    _ProbeDataManagement_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _ProbeDataManagement_sample = SEQ(name='sample', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Sample')))
    _ProbeDataManagement_directions = BIT_STR(name='directions', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')))
    _ProbeDataManagement_term = CHOICE(name='term', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ProbeDataManagement_term_termtime = INT(name='termtime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TermTime')))
    __ProbeDataManagement_term_termDistance = INT(name='termDistance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TermDistance')))
    _ProbeDataManagement_term._cont = ASN1Dict([
        ('termtime', __ProbeDataManagement_term_termtime),
        ('termDistance', __ProbeDataManagement_term_termDistance),
        ])
    _ProbeDataManagement_term._ext = None
    _ProbeDataManagement_snapshot = CHOICE(name='snapshot', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ProbeDataManagement_snapshot_snapshotTime = SEQ(name='snapshotTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SnapshotTime')))
    __ProbeDataManagement_snapshot_snapshotDistance = SEQ(name='snapshotDistance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SnapshotDistance')))
    _ProbeDataManagement_snapshot._cont = ASN1Dict([
        ('snapshotTime', __ProbeDataManagement_snapshot_snapshotTime),
        ('snapshotDistance', __ProbeDataManagement_snapshot_snapshotDistance),
        ])
    _ProbeDataManagement_snapshot._ext = None
    _ProbeDataManagement_txInterval = INT(name='txInterval', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SecondOfTime')))
    _ProbeDataManagement_dataElements = SEQ_OF(name='dataElements', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleStatusRequestList')), opt=True)
    _ProbeDataManagement_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ProbeDataManagement_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___ProbeDataManagement_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____ProbeDataManagement_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____ProbeDataManagement_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___ProbeDataManagement_regional__item__regionId._const_tab = ____ProbeDataManagement_regional__item__regionId_tab
    ___ProbeDataManagement_regional__item__regionId._const_tab_at = None
    ___ProbeDataManagement_regional__item__regionId._const_tab_id = 'id'
    ___ProbeDataManagement_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___ProbeDataManagement_regional__item__regExtValue._const_tab = ____ProbeDataManagement_regional__item__regionId_tab
    ___ProbeDataManagement_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___ProbeDataManagement_regional__item__regExtValue._const_tab_id = 'Type'
    __ProbeDataManagement_regional__item_._cont = ASN1Dict([
        ('regionId', ___ProbeDataManagement_regional__item__regionId),
        ('regExtValue', ___ProbeDataManagement_regional__item__regExtValue),
        ])
    __ProbeDataManagement_regional__item_._ext = None
    _ProbeDataManagement_regional._cont = __ProbeDataManagement_regional__item_
    _ProbeDataManagement_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    ProbeDataManagement._cont = ASN1Dict([
        ('timeStamp', _ProbeDataManagement_timeStamp),
        ('sample', _ProbeDataManagement_sample),
        ('directions', _ProbeDataManagement_directions),
        ('term', _ProbeDataManagement_term),
        ('snapshot', _ProbeDataManagement_snapshot),
        ('txInterval', _ProbeDataManagement_txInterval),
        ('dataElements', _ProbeDataManagement_dataElements),
        ('regional', _ProbeDataManagement_regional),
        ])
    ProbeDataManagement._ext = []
    
    #-----< ProbeVehicleData >-----#
    ProbeVehicleData = SEQ(name='ProbeVehicleData', mode=MODE_TYPE)
    _ProbeVehicleData_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _ProbeVehicleData_segNum = INT(name='segNum', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ProbeSegmentNumber')), opt=True)
    _ProbeVehicleData_probeID = SEQ(name='probeID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleIdent')), opt=True)
    _ProbeVehicleData_startVector = SEQ(name='startVector', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FullPositionVector')))
    _ProbeVehicleData_vehicleType = SEQ(name='vehicleType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleClassification')))
    _ProbeVehicleData_snapshots = SEQ_OF(name='snapshots', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProbeVehicleData_snapshots__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'Snapshot')))
    _ProbeVehicleData_snapshots._cont = __ProbeVehicleData_snapshots__item_
    _ProbeVehicleData_snapshots._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _ProbeVehicleData_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ProbeVehicleData_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___ProbeVehicleData_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____ProbeVehicleData_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____ProbeVehicleData_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___ProbeVehicleData_regional__item__regionId._const_tab = ____ProbeVehicleData_regional__item__regionId_tab
    ___ProbeVehicleData_regional__item__regionId._const_tab_at = None
    ___ProbeVehicleData_regional__item__regionId._const_tab_id = 'id'
    ___ProbeVehicleData_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___ProbeVehicleData_regional__item__regExtValue._const_tab = ____ProbeVehicleData_regional__item__regionId_tab
    ___ProbeVehicleData_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___ProbeVehicleData_regional__item__regExtValue._const_tab_id = 'Type'
    __ProbeVehicleData_regional__item_._cont = ASN1Dict([
        ('regionId', ___ProbeVehicleData_regional__item__regionId),
        ('regExtValue', ___ProbeVehicleData_regional__item__regExtValue),
        ])
    __ProbeVehicleData_regional__item_._ext = None
    _ProbeVehicleData_regional._cont = __ProbeVehicleData_regional__item_
    _ProbeVehicleData_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    ProbeVehicleData._cont = ASN1Dict([
        ('timeStamp', _ProbeVehicleData_timeStamp),
        ('segNum', _ProbeVehicleData_segNum),
        ('probeID', _ProbeVehicleData_probeID),
        ('startVector', _ProbeVehicleData_startVector),
        ('vehicleType', _ProbeVehicleData_vehicleType),
        ('snapshots', _ProbeVehicleData_snapshots),
        ('regional', _ProbeVehicleData_regional),
        ])
    ProbeVehicleData._ext = []
    
    #-----< RoadSideAlert >-----#
    RoadSideAlert = SEQ(name='RoadSideAlert', mode=MODE_TYPE)
    _RoadSideAlert_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _RoadSideAlert_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _RoadSideAlert_typeEvent = INT(name='typeEvent', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    _RoadSideAlert_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RoadSideAlert_description__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    _RoadSideAlert_description._cont = __RoadSideAlert_description__item_
    _RoadSideAlert_description._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _RoadSideAlert_priority = OCT_STR(name='priority', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Priority')), opt=True)
    _RoadSideAlert_heading = BIT_STR(name='heading', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')), opt=True)
    _RoadSideAlert_extent = ENUM(name='extent', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Extent')), opt=True)
    _RoadSideAlert_position = SEQ(name='position', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FullPositionVector')), opt=True)
    _RoadSideAlert_furtherInfoID = OCT_STR(name='furtherInfoID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FurtherInfoID')), opt=True)
    _RoadSideAlert_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RoadSideAlert_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___RoadSideAlert_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____RoadSideAlert_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____RoadSideAlert_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___RoadSideAlert_regional__item__regionId._const_tab = ____RoadSideAlert_regional__item__regionId_tab
    ___RoadSideAlert_regional__item__regionId._const_tab_at = None
    ___RoadSideAlert_regional__item__regionId._const_tab_id = 'id'
    ___RoadSideAlert_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___RoadSideAlert_regional__item__regExtValue._const_tab = ____RoadSideAlert_regional__item__regionId_tab
    ___RoadSideAlert_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___RoadSideAlert_regional__item__regExtValue._const_tab_id = 'Type'
    __RoadSideAlert_regional__item_._cont = ASN1Dict([
        ('regionId', ___RoadSideAlert_regional__item__regionId),
        ('regExtValue', ___RoadSideAlert_regional__item__regExtValue),
        ])
    __RoadSideAlert_regional__item_._ext = None
    _RoadSideAlert_regional._cont = __RoadSideAlert_regional__item_
    _RoadSideAlert_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    RoadSideAlert._cont = ASN1Dict([
        ('msgCnt', _RoadSideAlert_msgCnt),
        ('timeStamp', _RoadSideAlert_timeStamp),
        ('typeEvent', _RoadSideAlert_typeEvent),
        ('description', _RoadSideAlert_description),
        ('priority', _RoadSideAlert_priority),
        ('heading', _RoadSideAlert_heading),
        ('extent', _RoadSideAlert_extent),
        ('position', _RoadSideAlert_position),
        ('furtherInfoID', _RoadSideAlert_furtherInfoID),
        ('regional', _RoadSideAlert_regional),
        ])
    RoadSideAlert._ext = []
    
    #-----< RTCMcorrections >-----#
    RTCMcorrections = SEQ(name='RTCMcorrections', mode=MODE_TYPE)
    _RTCMcorrections_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _RTCMcorrections_rev = ENUM(name='rev', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RTCM-Revision')))
    _RTCMcorrections_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _RTCMcorrections_anchorPoint = SEQ(name='anchorPoint', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FullPositionVector')), opt=True)
    _RTCMcorrections_rtcmHeader = SEQ(name='rtcmHeader', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RTCMheader')), opt=True)
    _RTCMcorrections_msgs = SEQ_OF(name='msgs', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RTCMmessageList')))
    _RTCMcorrections_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RTCMcorrections_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___RTCMcorrections_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____RTCMcorrections_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____RTCMcorrections_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___RTCMcorrections_regional__item__regionId._const_tab = ____RTCMcorrections_regional__item__regionId_tab
    ___RTCMcorrections_regional__item__regionId._const_tab_at = None
    ___RTCMcorrections_regional__item__regionId._const_tab_id = 'id'
    ___RTCMcorrections_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___RTCMcorrections_regional__item__regExtValue._const_tab = ____RTCMcorrections_regional__item__regionId_tab
    ___RTCMcorrections_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___RTCMcorrections_regional__item__regExtValue._const_tab_id = 'Type'
    __RTCMcorrections_regional__item_._cont = ASN1Dict([
        ('regionId', ___RTCMcorrections_regional__item__regionId),
        ('regExtValue', ___RTCMcorrections_regional__item__regExtValue),
        ])
    __RTCMcorrections_regional__item_._ext = None
    _RTCMcorrections_regional._cont = __RTCMcorrections_regional__item_
    _RTCMcorrections_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    RTCMcorrections._cont = ASN1Dict([
        ('msgCnt', _RTCMcorrections_msgCnt),
        ('rev', _RTCMcorrections_rev),
        ('timeStamp', _RTCMcorrections_timeStamp),
        ('anchorPoint', _RTCMcorrections_anchorPoint),
        ('rtcmHeader', _RTCMcorrections_rtcmHeader),
        ('msgs', _RTCMcorrections_msgs),
        ('regional', _RTCMcorrections_regional),
        ])
    RTCMcorrections._ext = []
    
    #-----< SPAT >-----#
    SPAT = SEQ(name='SPAT', mode=MODE_TYPE)
    _SPAT_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _SPAT_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _SPAT_intersections = SEQ_OF(name='intersections', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionStateList')))
    _SPAT_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SPAT_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SPAT_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SPAT_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SPAT_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SPAT_regional__item__regionId._const_tab = ____SPAT_regional__item__regionId_tab
    ___SPAT_regional__item__regionId._const_tab_at = None
    ___SPAT_regional__item__regionId._const_tab_id = 'id'
    ___SPAT_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SPAT_regional__item__regExtValue._const_tab = ____SPAT_regional__item__regionId_tab
    ___SPAT_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SPAT_regional__item__regExtValue._const_tab_id = 'Type'
    __SPAT_regional__item_._cont = ASN1Dict([
        ('regionId', ___SPAT_regional__item__regionId),
        ('regExtValue', ___SPAT_regional__item__regExtValue),
        ])
    __SPAT_regional__item_._ext = None
    _SPAT_regional._cont = __SPAT_regional__item_
    _SPAT_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SPAT._cont = ASN1Dict([
        ('timeStamp', _SPAT_timeStamp),
        ('name', _SPAT_name),
        ('intersections', _SPAT_intersections),
        ('regional', _SPAT_regional),
        ])
    SPAT._ext = []
    
    #-----< SignalRequestMessage >-----#
    SignalRequestMessage = SEQ(name='SignalRequestMessage', mode=MODE_TYPE)
    _SignalRequestMessage_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _SignalRequestMessage_second = INT(name='second', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')))
    _SignalRequestMessage_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')), opt=True)
    _SignalRequestMessage_requests = SEQ_OF(name='requests', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalRequestList')), opt=True)
    _SignalRequestMessage_requestor = SEQ(name='requestor', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestorDescription')))
    _SignalRequestMessage_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SignalRequestMessage_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SignalRequestMessage_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SignalRequestMessage_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SignalRequestMessage_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SignalRequestMessage_regional__item__regionId._const_tab = ____SignalRequestMessage_regional__item__regionId_tab
    ___SignalRequestMessage_regional__item__regionId._const_tab_at = None
    ___SignalRequestMessage_regional__item__regionId._const_tab_id = 'id'
    ___SignalRequestMessage_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SignalRequestMessage_regional__item__regExtValue._const_tab = ____SignalRequestMessage_regional__item__regionId_tab
    ___SignalRequestMessage_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SignalRequestMessage_regional__item__regExtValue._const_tab_id = 'Type'
    __SignalRequestMessage_regional__item_._cont = ASN1Dict([
        ('regionId', ___SignalRequestMessage_regional__item__regionId),
        ('regExtValue', ___SignalRequestMessage_regional__item__regExtValue),
        ])
    __SignalRequestMessage_regional__item_._ext = None
    _SignalRequestMessage_regional._cont = __SignalRequestMessage_regional__item_
    _SignalRequestMessage_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SignalRequestMessage._cont = ASN1Dict([
        ('timeStamp', _SignalRequestMessage_timeStamp),
        ('second', _SignalRequestMessage_second),
        ('sequenceNumber', _SignalRequestMessage_sequenceNumber),
        ('requests', _SignalRequestMessage_requests),
        ('requestor', _SignalRequestMessage_requestor),
        ('regional', _SignalRequestMessage_regional),
        ])
    SignalRequestMessage._ext = []
    
    #-----< SignalStatusMessage >-----#
    SignalStatusMessage = SEQ(name='SignalStatusMessage', mode=MODE_TYPE)
    _SignalStatusMessage_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _SignalStatusMessage_second = INT(name='second', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')))
    _SignalStatusMessage_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')), opt=True)
    _SignalStatusMessage_status = SEQ_OF(name='status', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalStatusList')))
    _SignalStatusMessage_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SignalStatusMessage_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SignalStatusMessage_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SignalStatusMessage_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SignalStatusMessage_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SignalStatusMessage_regional__item__regionId._const_tab = ____SignalStatusMessage_regional__item__regionId_tab
    ___SignalStatusMessage_regional__item__regionId._const_tab_at = None
    ___SignalStatusMessage_regional__item__regionId._const_tab_id = 'id'
    ___SignalStatusMessage_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SignalStatusMessage_regional__item__regExtValue._const_tab = ____SignalStatusMessage_regional__item__regionId_tab
    ___SignalStatusMessage_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SignalStatusMessage_regional__item__regExtValue._const_tab_id = 'Type'
    __SignalStatusMessage_regional__item_._cont = ASN1Dict([
        ('regionId', ___SignalStatusMessage_regional__item__regionId),
        ('regExtValue', ___SignalStatusMessage_regional__item__regExtValue),
        ])
    __SignalStatusMessage_regional__item_._ext = None
    _SignalStatusMessage_regional._cont = __SignalStatusMessage_regional__item_
    _SignalStatusMessage_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SignalStatusMessage._cont = ASN1Dict([
        ('timeStamp', _SignalStatusMessage_timeStamp),
        ('second', _SignalStatusMessage_second),
        ('sequenceNumber', _SignalStatusMessage_sequenceNumber),
        ('status', _SignalStatusMessage_status),
        ('regional', _SignalStatusMessage_regional),
        ])
    SignalStatusMessage._ext = []
    
    #-----< TravelerInformation >-----#
    TravelerInformation = SEQ(name='TravelerInformation', mode=MODE_TYPE)
    _TravelerInformation_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _TravelerInformation_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _TravelerInformation_packetID = OCT_STR(name='packetID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'UniqueMSGID')), opt=True)
    _TravelerInformation_urlB = STR_IA5(name='urlB', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'URL-Base')), opt=True)
    _TravelerInformation_dataFrames = SEQ_OF(name='dataFrames', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TravelerDataFrameList')))
    _TravelerInformation_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TravelerInformation_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___TravelerInformation_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____TravelerInformation_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____TravelerInformation_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___TravelerInformation_regional__item__regionId._const_tab = ____TravelerInformation_regional__item__regionId_tab
    ___TravelerInformation_regional__item__regionId._const_tab_at = None
    ___TravelerInformation_regional__item__regionId._const_tab_id = 'id'
    ___TravelerInformation_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___TravelerInformation_regional__item__regExtValue._const_tab = ____TravelerInformation_regional__item__regionId_tab
    ___TravelerInformation_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___TravelerInformation_regional__item__regExtValue._const_tab_id = 'Type'
    __TravelerInformation_regional__item_._cont = ASN1Dict([
        ('regionId', ___TravelerInformation_regional__item__regionId),
        ('regExtValue', ___TravelerInformation_regional__item__regExtValue),
        ])
    __TravelerInformation_regional__item_._ext = None
    _TravelerInformation_regional._cont = __TravelerInformation_regional__item_
    _TravelerInformation_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    TravelerInformation._cont = ASN1Dict([
        ('msgCnt', _TravelerInformation_msgCnt),
        ('timeStamp', _TravelerInformation_timeStamp),
        ('packetID', _TravelerInformation_packetID),
        ('urlB', _TravelerInformation_urlB),
        ('dataFrames', _TravelerInformation_dataFrames),
        ('regional', _TravelerInformation_regional),
        ])
    TravelerInformation._ext = []
    
    #-----< TestMessage00 >-----#
    TestMessage00 = SEQ(name='TestMessage00', mode=MODE_TYPE)
    _TestMessage00_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage00_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage00_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage00_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage00_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage00_regional_regionId._const_tab = ___TestMessage00_regional_regionId_tab
    __TestMessage00_regional_regionId._const_tab_at = None
    __TestMessage00_regional_regionId._const_tab_id = 'id'
    __TestMessage00_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage00_regional_regExtValue._const_tab = ___TestMessage00_regional_regionId_tab
    __TestMessage00_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage00_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage00_regional._cont = ASN1Dict([
        ('regionId', __TestMessage00_regional_regionId),
        ('regExtValue', __TestMessage00_regional_regExtValue),
        ])
    _TestMessage00_regional._ext = None
    TestMessage00._cont = ASN1Dict([
        ('header', _TestMessage00_header),
        ('regional', _TestMessage00_regional),
        ])
    TestMessage00._ext = []
    
    #-----< TestMessage01 >-----#
    TestMessage01 = SEQ(name='TestMessage01', mode=MODE_TYPE)
    _TestMessage01_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage01_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage01_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage01_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage01_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage01_regional_regionId._const_tab = ___TestMessage01_regional_regionId_tab
    __TestMessage01_regional_regionId._const_tab_at = None
    __TestMessage01_regional_regionId._const_tab_id = 'id'
    __TestMessage01_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage01_regional_regExtValue._const_tab = ___TestMessage01_regional_regionId_tab
    __TestMessage01_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage01_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage01_regional._cont = ASN1Dict([
        ('regionId', __TestMessage01_regional_regionId),
        ('regExtValue', __TestMessage01_regional_regExtValue),
        ])
    _TestMessage01_regional._ext = None
    TestMessage01._cont = ASN1Dict([
        ('header', _TestMessage01_header),
        ('regional', _TestMessage01_regional),
        ])
    TestMessage01._ext = []
    
    #-----< TestMessage02 >-----#
    TestMessage02 = SEQ(name='TestMessage02', mode=MODE_TYPE)
    _TestMessage02_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage02_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage02_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage02_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage02_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage02_regional_regionId._const_tab = ___TestMessage02_regional_regionId_tab
    __TestMessage02_regional_regionId._const_tab_at = None
    __TestMessage02_regional_regionId._const_tab_id = 'id'
    __TestMessage02_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage02_regional_regExtValue._const_tab = ___TestMessage02_regional_regionId_tab
    __TestMessage02_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage02_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage02_regional._cont = ASN1Dict([
        ('regionId', __TestMessage02_regional_regionId),
        ('regExtValue', __TestMessage02_regional_regExtValue),
        ])
    _TestMessage02_regional._ext = None
    TestMessage02._cont = ASN1Dict([
        ('header', _TestMessage02_header),
        ('regional', _TestMessage02_regional),
        ])
    TestMessage02._ext = []
    
    #-----< TestMessage03 >-----#
    TestMessage03 = SEQ(name='TestMessage03', mode=MODE_TYPE)
    _TestMessage03_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage03_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage03_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage03_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage03_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage03_regional_regionId._const_tab = ___TestMessage03_regional_regionId_tab
    __TestMessage03_regional_regionId._const_tab_at = None
    __TestMessage03_regional_regionId._const_tab_id = 'id'
    __TestMessage03_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage03_regional_regExtValue._const_tab = ___TestMessage03_regional_regionId_tab
    __TestMessage03_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage03_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage03_regional._cont = ASN1Dict([
        ('regionId', __TestMessage03_regional_regionId),
        ('regExtValue', __TestMessage03_regional_regExtValue),
        ])
    _TestMessage03_regional._ext = None
    TestMessage03._cont = ASN1Dict([
        ('header', _TestMessage03_header),
        ('regional', _TestMessage03_regional),
        ])
    TestMessage03._ext = []
    
    #-----< TestMessage04 >-----#
    TestMessage04 = SEQ(name='TestMessage04', mode=MODE_TYPE)
    _TestMessage04_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage04_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage04_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage04_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage04_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage04_regional_regionId._const_tab = ___TestMessage04_regional_regionId_tab
    __TestMessage04_regional_regionId._const_tab_at = None
    __TestMessage04_regional_regionId._const_tab_id = 'id'
    __TestMessage04_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage04_regional_regExtValue._const_tab = ___TestMessage04_regional_regionId_tab
    __TestMessage04_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage04_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage04_regional._cont = ASN1Dict([
        ('regionId', __TestMessage04_regional_regionId),
        ('regExtValue', __TestMessage04_regional_regExtValue),
        ])
    _TestMessage04_regional._ext = None
    TestMessage04._cont = ASN1Dict([
        ('header', _TestMessage04_header),
        ('regional', _TestMessage04_regional),
        ])
    TestMessage04._ext = []
    
    #-----< TestMessage05 >-----#
    TestMessage05 = SEQ(name='TestMessage05', mode=MODE_TYPE)
    _TestMessage05_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage05_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage05_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage05_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage05_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage05_regional_regionId._const_tab = ___TestMessage05_regional_regionId_tab
    __TestMessage05_regional_regionId._const_tab_at = None
    __TestMessage05_regional_regionId._const_tab_id = 'id'
    __TestMessage05_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage05_regional_regExtValue._const_tab = ___TestMessage05_regional_regionId_tab
    __TestMessage05_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage05_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage05_regional._cont = ASN1Dict([
        ('regionId', __TestMessage05_regional_regionId),
        ('regExtValue', __TestMessage05_regional_regExtValue),
        ])
    _TestMessage05_regional._ext = None
    TestMessage05._cont = ASN1Dict([
        ('header', _TestMessage05_header),
        ('regional', _TestMessage05_regional),
        ])
    TestMessage05._ext = []
    
    #-----< TestMessage06 >-----#
    TestMessage06 = SEQ(name='TestMessage06', mode=MODE_TYPE)
    _TestMessage06_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage06_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage06_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage06_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage06_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage06_regional_regionId._const_tab = ___TestMessage06_regional_regionId_tab
    __TestMessage06_regional_regionId._const_tab_at = None
    __TestMessage06_regional_regionId._const_tab_id = 'id'
    __TestMessage06_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage06_regional_regExtValue._const_tab = ___TestMessage06_regional_regionId_tab
    __TestMessage06_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage06_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage06_regional._cont = ASN1Dict([
        ('regionId', __TestMessage06_regional_regionId),
        ('regExtValue', __TestMessage06_regional_regExtValue),
        ])
    _TestMessage06_regional._ext = None
    TestMessage06._cont = ASN1Dict([
        ('header', _TestMessage06_header),
        ('regional', _TestMessage06_regional),
        ])
    TestMessage06._ext = []
    
    #-----< TestMessage07 >-----#
    TestMessage07 = SEQ(name='TestMessage07', mode=MODE_TYPE)
    _TestMessage07_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage07_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage07_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage07_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage07_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage07_regional_regionId._const_tab = ___TestMessage07_regional_regionId_tab
    __TestMessage07_regional_regionId._const_tab_at = None
    __TestMessage07_regional_regionId._const_tab_id = 'id'
    __TestMessage07_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage07_regional_regExtValue._const_tab = ___TestMessage07_regional_regionId_tab
    __TestMessage07_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage07_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage07_regional._cont = ASN1Dict([
        ('regionId', __TestMessage07_regional_regionId),
        ('regExtValue', __TestMessage07_regional_regExtValue),
        ])
    _TestMessage07_regional._ext = None
    TestMessage07._cont = ASN1Dict([
        ('header', _TestMessage07_header),
        ('regional', _TestMessage07_regional),
        ])
    TestMessage07._ext = []
    
    #-----< TestMessage08 >-----#
    TestMessage08 = SEQ(name='TestMessage08', mode=MODE_TYPE)
    _TestMessage08_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage08_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage08_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage08_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage08_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage08_regional_regionId._const_tab = ___TestMessage08_regional_regionId_tab
    __TestMessage08_regional_regionId._const_tab_at = None
    __TestMessage08_regional_regionId._const_tab_id = 'id'
    __TestMessage08_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage08_regional_regExtValue._const_tab = ___TestMessage08_regional_regionId_tab
    __TestMessage08_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage08_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage08_regional._cont = ASN1Dict([
        ('regionId', __TestMessage08_regional_regionId),
        ('regExtValue', __TestMessage08_regional_regExtValue),
        ])
    _TestMessage08_regional._ext = None
    TestMessage08._cont = ASN1Dict([
        ('header', _TestMessage08_header),
        ('regional', _TestMessage08_regional),
        ])
    TestMessage08._ext = []
    
    #-----< TestMessage09 >-----#
    TestMessage09 = SEQ(name='TestMessage09', mode=MODE_TYPE)
    _TestMessage09_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage09_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage09_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage09_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage09_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage09_regional_regionId._const_tab = ___TestMessage09_regional_regionId_tab
    __TestMessage09_regional_regionId._const_tab_at = None
    __TestMessage09_regional_regionId._const_tab_id = 'id'
    __TestMessage09_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage09_regional_regExtValue._const_tab = ___TestMessage09_regional_regionId_tab
    __TestMessage09_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage09_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage09_regional._cont = ASN1Dict([
        ('regionId', __TestMessage09_regional_regionId),
        ('regExtValue', __TestMessage09_regional_regExtValue),
        ])
    _TestMessage09_regional._ext = None
    TestMessage09._cont = ASN1Dict([
        ('header', _TestMessage09_header),
        ('regional', _TestMessage09_regional),
        ])
    TestMessage09._ext = []
    
    #-----< TestMessage10 >-----#
    TestMessage10 = SEQ(name='TestMessage10', mode=MODE_TYPE)
    _TestMessage10_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage10_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage10_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage10_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage10_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage10_regional_regionId._const_tab = ___TestMessage10_regional_regionId_tab
    __TestMessage10_regional_regionId._const_tab_at = None
    __TestMessage10_regional_regionId._const_tab_id = 'id'
    __TestMessage10_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage10_regional_regExtValue._const_tab = ___TestMessage10_regional_regionId_tab
    __TestMessage10_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage10_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage10_regional._cont = ASN1Dict([
        ('regionId', __TestMessage10_regional_regionId),
        ('regExtValue', __TestMessage10_regional_regExtValue),
        ])
    _TestMessage10_regional._ext = None
    TestMessage10._cont = ASN1Dict([
        ('header', _TestMessage10_header),
        ('regional', _TestMessage10_regional),
        ])
    TestMessage10._ext = []
    
    #-----< TestMessage11 >-----#
    TestMessage11 = SEQ(name='TestMessage11', mode=MODE_TYPE)
    _TestMessage11_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage11_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage11_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage11_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage11_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage11_regional_regionId._const_tab = ___TestMessage11_regional_regionId_tab
    __TestMessage11_regional_regionId._const_tab_at = None
    __TestMessage11_regional_regionId._const_tab_id = 'id'
    __TestMessage11_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage11_regional_regExtValue._const_tab = ___TestMessage11_regional_regionId_tab
    __TestMessage11_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage11_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage11_regional._cont = ASN1Dict([
        ('regionId', __TestMessage11_regional_regionId),
        ('regExtValue', __TestMessage11_regional_regExtValue),
        ])
    _TestMessage11_regional._ext = None
    TestMessage11._cont = ASN1Dict([
        ('header', _TestMessage11_header),
        ('regional', _TestMessage11_regional),
        ])
    TestMessage11._ext = []
    
    #-----< TestMessage12 >-----#
    TestMessage12 = SEQ(name='TestMessage12', mode=MODE_TYPE)
    _TestMessage12_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage12_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage12_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage12_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage12_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage12_regional_regionId._const_tab = ___TestMessage12_regional_regionId_tab
    __TestMessage12_regional_regionId._const_tab_at = None
    __TestMessage12_regional_regionId._const_tab_id = 'id'
    __TestMessage12_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage12_regional_regExtValue._const_tab = ___TestMessage12_regional_regionId_tab
    __TestMessage12_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage12_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage12_regional._cont = ASN1Dict([
        ('regionId', __TestMessage12_regional_regionId),
        ('regExtValue', __TestMessage12_regional_regExtValue),
        ])
    _TestMessage12_regional._ext = None
    TestMessage12._cont = ASN1Dict([
        ('header', _TestMessage12_header),
        ('regional', _TestMessage12_regional),
        ])
    TestMessage12._ext = []
    
    #-----< TestMessage13 >-----#
    TestMessage13 = SEQ(name='TestMessage13', mode=MODE_TYPE)
    _TestMessage13_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage13_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage13_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage13_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage13_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage13_regional_regionId._const_tab = ___TestMessage13_regional_regionId_tab
    __TestMessage13_regional_regionId._const_tab_at = None
    __TestMessage13_regional_regionId._const_tab_id = 'id'
    __TestMessage13_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage13_regional_regExtValue._const_tab = ___TestMessage13_regional_regionId_tab
    __TestMessage13_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage13_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage13_regional._cont = ASN1Dict([
        ('regionId', __TestMessage13_regional_regionId),
        ('regExtValue', __TestMessage13_regional_regExtValue),
        ])
    _TestMessage13_regional._ext = None
    TestMessage13._cont = ASN1Dict([
        ('header', _TestMessage13_header),
        ('regional', _TestMessage13_regional),
        ])
    TestMessage13._ext = []
    
    #-----< TestMessage14 >-----#
    TestMessage14 = SEQ(name='TestMessage14', mode=MODE_TYPE)
    _TestMessage14_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage14_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage14_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage14_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage14_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage14_regional_regionId._const_tab = ___TestMessage14_regional_regionId_tab
    __TestMessage14_regional_regionId._const_tab_at = None
    __TestMessage14_regional_regionId._const_tab_id = 'id'
    __TestMessage14_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage14_regional_regExtValue._const_tab = ___TestMessage14_regional_regionId_tab
    __TestMessage14_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage14_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage14_regional._cont = ASN1Dict([
        ('regionId', __TestMessage14_regional_regionId),
        ('regExtValue', __TestMessage14_regional_regExtValue),
        ])
    _TestMessage14_regional._ext = None
    TestMessage14._cont = ASN1Dict([
        ('header', _TestMessage14_header),
        ('regional', _TestMessage14_regional),
        ])
    TestMessage14._ext = []
    
    #-----< TestMessage15 >-----#
    TestMessage15 = SEQ(name='TestMessage15', mode=MODE_TYPE)
    _TestMessage15_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Header')), opt=True)
    _TestMessage15_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __TestMessage15_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___TestMessage15_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___TestMessage15_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __TestMessage15_regional_regionId._const_tab = ___TestMessage15_regional_regionId_tab
    __TestMessage15_regional_regionId._const_tab_at = None
    __TestMessage15_regional_regionId._const_tab_id = 'id'
    __TestMessage15_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __TestMessage15_regional_regExtValue._const_tab = ___TestMessage15_regional_regionId_tab
    __TestMessage15_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __TestMessage15_regional_regExtValue._const_tab_id = 'Type'
    _TestMessage15_regional._cont = ASN1Dict([
        ('regionId', __TestMessage15_regional_regionId),
        ('regExtValue', __TestMessage15_regional_regExtValue),
        ])
    _TestMessage15_regional._ext = None
    TestMessage15._cont = ASN1Dict([
        ('header', _TestMessage15_header),
        ('regional', _TestMessage15_regional),
        ])
    TestMessage15._ext = []
    
    #-----< AccelerationSet4Way >-----#
    AccelerationSet4Way = SEQ(name='AccelerationSet4Way', mode=MODE_TYPE)
    _AccelerationSet4Way_long = INT(name='long', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Acceleration')))
    _AccelerationSet4Way_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Acceleration')))
    _AccelerationSet4Way_vert = INT(name='vert', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VerticalAcceleration')))
    _AccelerationSet4Way_yaw = INT(name='yaw', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'YawRate')))
    AccelerationSet4Way._cont = ASN1Dict([
        ('long', _AccelerationSet4Way_long),
        ('lat', _AccelerationSet4Way_lat),
        ('vert', _AccelerationSet4Way_vert),
        ('yaw', _AccelerationSet4Way_yaw),
        ])
    AccelerationSet4Way._ext = None
    
    #-----< AccelSteerYawRateConfidence >-----#
    AccelSteerYawRateConfidence = SEQ(name='AccelSteerYawRateConfidence', mode=MODE_TYPE)
    _AccelSteerYawRateConfidence_yawRate = ENUM(name='yawRate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'YawRateConfidence')))
    _AccelSteerYawRateConfidence_acceleration = ENUM(name='acceleration', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AccelerationConfidence')))
    _AccelSteerYawRateConfidence_steeringWheelAngle = ENUM(name='steeringWheelAngle', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringWheelAngleConfidence')))
    AccelSteerYawRateConfidence._cont = ASN1Dict([
        ('yawRate', _AccelSteerYawRateConfidence_yawRate),
        ('acceleration', _AccelSteerYawRateConfidence_acceleration),
        ('steeringWheelAngle', _AccelSteerYawRateConfidence_steeringWheelAngle),
        ])
    AccelSteerYawRateConfidence._ext = None
    
    #-----< AdvisorySpeed >-----#
    AdvisorySpeed = SEQ(name='AdvisorySpeed', mode=MODE_TYPE)
    _AdvisorySpeed_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AdvisorySpeedType')))
    _AdvisorySpeed_speed = INT(name='speed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedAdvice')), opt=True)
    _AdvisorySpeed_confidence = ENUM(name='confidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedConfidence')), opt=True)
    _AdvisorySpeed_distance = INT(name='distance', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ZoneLength')), opt=True)
    _AdvisorySpeed_class_ = INT(name='class', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RestrictionClassID')), opt=True)
    _AdvisorySpeed_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AdvisorySpeed_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___AdvisorySpeed_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____AdvisorySpeed_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____AdvisorySpeed_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___AdvisorySpeed_regional__item__regionId._const_tab = ____AdvisorySpeed_regional__item__regionId_tab
    ___AdvisorySpeed_regional__item__regionId._const_tab_at = None
    ___AdvisorySpeed_regional__item__regionId._const_tab_id = 'id'
    ___AdvisorySpeed_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___AdvisorySpeed_regional__item__regExtValue._const_tab = ____AdvisorySpeed_regional__item__regionId_tab
    ___AdvisorySpeed_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___AdvisorySpeed_regional__item__regExtValue._const_tab_id = 'Type'
    __AdvisorySpeed_regional__item_._cont = ASN1Dict([
        ('regionId', ___AdvisorySpeed_regional__item__regionId),
        ('regExtValue', ___AdvisorySpeed_regional__item__regExtValue),
        ])
    __AdvisorySpeed_regional__item_._ext = None
    _AdvisorySpeed_regional._cont = __AdvisorySpeed_regional__item_
    _AdvisorySpeed_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    AdvisorySpeed._cont = ASN1Dict([
        ('type', _AdvisorySpeed_type),
        ('speed', _AdvisorySpeed_speed),
        ('confidence', _AdvisorySpeed_confidence),
        ('distance', _AdvisorySpeed_distance),
        ('class', _AdvisorySpeed_class_),
        ('regional', _AdvisorySpeed_regional),
        ])
    AdvisorySpeed._ext = []
    
    #-----< AdvisorySpeedList >-----#
    AdvisorySpeedList = SEQ_OF(name='AdvisorySpeedList', mode=MODE_TYPE)
    _AdvisorySpeedList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'AdvisorySpeed')))
    AdvisorySpeedList._cont = _AdvisorySpeedList__item_
    AdvisorySpeedList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< AntennaOffsetSet >-----#
    AntennaOffsetSet = SEQ(name='AntennaOffsetSet', mode=MODE_TYPE)
    _AntennaOffsetSet_antOffsetX = INT(name='antOffsetX', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B12')))
    _AntennaOffsetSet_antOffsetY = INT(name='antOffsetY', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B09')))
    _AntennaOffsetSet_antOffsetZ = INT(name='antOffsetZ', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')))
    AntennaOffsetSet._cont = ASN1Dict([
        ('antOffsetX', _AntennaOffsetSet_antOffsetX),
        ('antOffsetY', _AntennaOffsetSet_antOffsetY),
        ('antOffsetZ', _AntennaOffsetSet_antOffsetZ),
        ])
    AntennaOffsetSet._ext = None
    
    #-----< ApproachOrLane >-----#
    ApproachOrLane = CHOICE(name='ApproachOrLane', mode=MODE_TYPE)
    _ApproachOrLane_approach = INT(name='approach', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ApproachID')))
    _ApproachOrLane_lane = INT(name='lane', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneID')))
    ApproachOrLane._cont = ASN1Dict([
        ('approach', _ApproachOrLane_approach),
        ('lane', _ApproachOrLane_lane),
        ])
    ApproachOrLane._ext = None
    
    #-----< BrakeSystemStatus >-----#
    BrakeSystemStatus = SEQ(name='BrakeSystemStatus', mode=MODE_TYPE)
    _BrakeSystemStatus_wheelBrakes = BIT_STR(name='wheelBrakes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BrakeAppliedStatus')))
    _BrakeSystemStatus_traction = ENUM(name='traction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TractionControlStatus')))
    _BrakeSystemStatus_abs = ENUM(name='abs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AntiLockBrakeStatus')))
    _BrakeSystemStatus_scs = ENUM(name='scs', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'StabilityControlStatus')))
    _BrakeSystemStatus_brakeBoost = ENUM(name='brakeBoost', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BrakeBoostApplied')))
    _BrakeSystemStatus_auxBrakes = ENUM(name='auxBrakes', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AuxiliaryBrakeStatus')))
    BrakeSystemStatus._cont = ASN1Dict([
        ('wheelBrakes', _BrakeSystemStatus_wheelBrakes),
        ('traction', _BrakeSystemStatus_traction),
        ('abs', _BrakeSystemStatus_abs),
        ('scs', _BrakeSystemStatus_scs),
        ('brakeBoost', _BrakeSystemStatus_brakeBoost),
        ('auxBrakes', _BrakeSystemStatus_auxBrakes),
        ])
    BrakeSystemStatus._ext = None
    
    #-----< BSMcoreData >-----#
    BSMcoreData = SEQ(name='BSMcoreData', mode=MODE_TYPE)
    _BSMcoreData_msgCnt = INT(name='msgCnt', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _BSMcoreData_id = OCT_STR(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TemporaryID')))
    _BSMcoreData_secMark = INT(name='secMark', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')))
    _BSMcoreData_lat = INT(name='lat', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Latitude')))
    _BSMcoreData_long = INT(name='long', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Longitude')))
    _BSMcoreData_elev = INT(name='elev', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Elevation')))
    _BSMcoreData_accuracy = SEQ(name='accuracy', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionalAccuracy')))
    _BSMcoreData_transmission = ENUM(name='transmission', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TransmissionState')))
    _BSMcoreData_speed = INT(name='speed', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Speed')))
    _BSMcoreData_heading = INT(name='heading', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Heading')))
    _BSMcoreData_angle = INT(name='angle', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringWheelAngle')))
    _BSMcoreData_accelSet = SEQ(name='accelSet', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AccelerationSet4Way')))
    _BSMcoreData_brakes = SEQ(name='brakes', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BrakeSystemStatus')))
    _BSMcoreData_size = SEQ(name='size', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleSize')))
    BSMcoreData._cont = ASN1Dict([
        ('msgCnt', _BSMcoreData_msgCnt),
        ('id', _BSMcoreData_id),
        ('secMark', _BSMcoreData_secMark),
        ('lat', _BSMcoreData_lat),
        ('long', _BSMcoreData_long),
        ('elev', _BSMcoreData_elev),
        ('accuracy', _BSMcoreData_accuracy),
        ('transmission', _BSMcoreData_transmission),
        ('speed', _BSMcoreData_speed),
        ('heading', _BSMcoreData_heading),
        ('angle', _BSMcoreData_angle),
        ('accelSet', _BSMcoreData_accelSet),
        ('brakes', _BSMcoreData_brakes),
        ('size', _BSMcoreData_size),
        ])
    BSMcoreData._ext = None
    
    #-----< BumperHeights >-----#
    BumperHeights = SEQ(name='BumperHeights', mode=MODE_TYPE)
    _BumperHeights_front = INT(name='front', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BumperHeight')))
    _BumperHeights_rear = INT(name='rear', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BumperHeight')))
    BumperHeights._cont = ASN1Dict([
        ('front', _BumperHeights_front),
        ('rear', _BumperHeights_rear),
        ])
    BumperHeights._ext = None
    
    #-----< Circle >-----#
    Circle = SEQ(name='Circle', mode=MODE_TYPE)
    _Circle_center = SEQ(name='center', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')))
    _Circle_radius = INT(name='radius', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Radius-B12')))
    _Circle_units = ENUM(name='units', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DistanceUnits')))
    Circle._cont = ASN1Dict([
        ('center', _Circle_center),
        ('radius', _Circle_radius),
        ('units', _Circle_units),
        ])
    Circle._ext = None
    
    #-----< ComputedLane >-----#
    ComputedLane = SEQ(name='ComputedLane', mode=MODE_TYPE)
    _ComputedLane_referenceLaneId = INT(name='referenceLaneId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneID')))
    _ComputedLane_offsetXaxis = CHOICE(name='offsetXaxis', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ComputedLane_offsetXaxis_small = INT(name='small', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DrivenLineOffsetSm')))
    __ComputedLane_offsetXaxis_large = INT(name='large', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DrivenLineOffsetLg')))
    _ComputedLane_offsetXaxis._cont = ASN1Dict([
        ('small', __ComputedLane_offsetXaxis_small),
        ('large', __ComputedLane_offsetXaxis_large),
        ])
    _ComputedLane_offsetXaxis._ext = None
    _ComputedLane_offsetYaxis = CHOICE(name='offsetYaxis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ComputedLane_offsetYaxis_small = INT(name='small', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DrivenLineOffsetSm')))
    __ComputedLane_offsetYaxis_large = INT(name='large', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DrivenLineOffsetLg')))
    _ComputedLane_offsetYaxis._cont = ASN1Dict([
        ('small', __ComputedLane_offsetYaxis_small),
        ('large', __ComputedLane_offsetYaxis_large),
        ])
    _ComputedLane_offsetYaxis._ext = None
    _ComputedLane_rotateXY = INT(name='rotateXY', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Angle')), opt=True)
    _ComputedLane_scaleXaxis = INT(name='scaleXaxis', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Scale-B12')), opt=True)
    _ComputedLane_scaleYaxis = INT(name='scaleYaxis', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Scale-B12')), opt=True)
    _ComputedLane_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ComputedLane_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___ComputedLane_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____ComputedLane_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____ComputedLane_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___ComputedLane_regional__item__regionId._const_tab = ____ComputedLane_regional__item__regionId_tab
    ___ComputedLane_regional__item__regionId._const_tab_at = None
    ___ComputedLane_regional__item__regionId._const_tab_id = 'id'
    ___ComputedLane_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___ComputedLane_regional__item__regExtValue._const_tab = ____ComputedLane_regional__item__regionId_tab
    ___ComputedLane_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___ComputedLane_regional__item__regExtValue._const_tab_id = 'Type'
    __ComputedLane_regional__item_._cont = ASN1Dict([
        ('regionId', ___ComputedLane_regional__item__regionId),
        ('regExtValue', ___ComputedLane_regional__item__regExtValue),
        ])
    __ComputedLane_regional__item_._ext = None
    _ComputedLane_regional._cont = __ComputedLane_regional__item_
    _ComputedLane_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    ComputedLane._cont = ASN1Dict([
        ('referenceLaneId', _ComputedLane_referenceLaneId),
        ('offsetXaxis', _ComputedLane_offsetXaxis),
        ('offsetYaxis', _ComputedLane_offsetYaxis),
        ('rotateXY', _ComputedLane_rotateXY),
        ('scaleXaxis', _ComputedLane_scaleXaxis),
        ('scaleYaxis', _ComputedLane_scaleYaxis),
        ('regional', _ComputedLane_regional),
        ])
    ComputedLane._ext = []
    
    #-----< ConfidenceSet >-----#
    ConfidenceSet = SEQ(name='ConfidenceSet', mode=MODE_TYPE)
    _ConfidenceSet_accelConfidence = SEQ(name='accelConfidence', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AccelSteerYawRateConfidence')), opt=True)
    _ConfidenceSet_speedConfidence = SEQ(name='speedConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedandHeadingandThrottleConfidence')), opt=True)
    _ConfidenceSet_timeConfidence = ENUM(name='timeConfidence', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeConfidence')), opt=True)
    _ConfidenceSet_posConfidence = SEQ(name='posConfidence', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionConfidenceSet')), opt=True)
    _ConfidenceSet_steerConfidence = ENUM(name='steerConfidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringWheelAngleConfidence')), opt=True)
    _ConfidenceSet_headingConfidence = ENUM(name='headingConfidence', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingConfidence')), opt=True)
    _ConfidenceSet_throttleConfidence = ENUM(name='throttleConfidence', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ThrottleConfidence')), opt=True)
    ConfidenceSet._cont = ASN1Dict([
        ('accelConfidence', _ConfidenceSet_accelConfidence),
        ('speedConfidence', _ConfidenceSet_speedConfidence),
        ('timeConfidence', _ConfidenceSet_timeConfidence),
        ('posConfidence', _ConfidenceSet_posConfidence),
        ('steerConfidence', _ConfidenceSet_steerConfidence),
        ('headingConfidence', _ConfidenceSet_headingConfidence),
        ('throttleConfidence', _ConfidenceSet_throttleConfidence),
        ])
    ConfidenceSet._ext = []
    
    #-----< ConnectingLane >-----#
    ConnectingLane = SEQ(name='ConnectingLane', mode=MODE_TYPE)
    _ConnectingLane_lane = INT(name='lane', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneID')))
    _ConnectingLane_maneuver = BIT_STR(name='maneuver', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AllowedManeuvers')), opt=True)
    ConnectingLane._cont = ASN1Dict([
        ('lane', _ConnectingLane_lane),
        ('maneuver', _ConnectingLane_maneuver),
        ])
    ConnectingLane._ext = None
    
    #-----< Connection >-----#
    Connection = SEQ(name='Connection', mode=MODE_TYPE)
    _Connection_connectingLane = SEQ(name='connectingLane', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ConnectingLane')))
    _Connection_remoteIntersection = SEQ(name='remoteIntersection', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionReferenceID')), opt=True)
    _Connection_signalGroup = INT(name='signalGroup', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalGroupID')), opt=True)
    _Connection_userClass = INT(name='userClass', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RestrictionClassID')), opt=True)
    _Connection_connectionID = INT(name='connectionID', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneConnectionID')), opt=True)
    Connection._cont = ASN1Dict([
        ('connectingLane', _Connection_connectingLane),
        ('remoteIntersection', _Connection_remoteIntersection),
        ('signalGroup', _Connection_signalGroup),
        ('userClass', _Connection_userClass),
        ('connectionID', _Connection_connectionID),
        ])
    Connection._ext = None
    
    #-----< ConnectionManeuverAssist >-----#
    ConnectionManeuverAssist = SEQ(name='ConnectionManeuverAssist', mode=MODE_TYPE)
    _ConnectionManeuverAssist_connectionID = INT(name='connectionID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneConnectionID')))
    _ConnectionManeuverAssist_queueLength = INT(name='queueLength', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ZoneLength')), opt=True)
    _ConnectionManeuverAssist_availableStorageLength = INT(name='availableStorageLength', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ZoneLength')), opt=True)
    _ConnectionManeuverAssist_waitOnStop = BOOL(name='waitOnStop', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WaitOnStopline')), opt=True)
    _ConnectionManeuverAssist_pedBicycleDetect = BOOL(name='pedBicycleDetect', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PedestrianBicycleDetect')), opt=True)
    _ConnectionManeuverAssist_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConnectionManeuverAssist_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___ConnectionManeuverAssist_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____ConnectionManeuverAssist_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____ConnectionManeuverAssist_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'ConnectionManeuverAssist-addGrpC')))
    ____ConnectionManeuverAssist_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____ConnectionManeuverAssist_regional__item__regionId_tab_val_Type_0), ('id', 3)])], rr=[], ev=None, er=[])
    ___ConnectionManeuverAssist_regional__item__regionId._const_tab = ____ConnectionManeuverAssist_regional__item__regionId_tab
    ___ConnectionManeuverAssist_regional__item__regionId._const_tab_at = None
    ___ConnectionManeuverAssist_regional__item__regionId._const_tab_id = 'id'
    ___ConnectionManeuverAssist_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___ConnectionManeuverAssist_regional__item__regExtValue._const_tab = ____ConnectionManeuverAssist_regional__item__regionId_tab
    ___ConnectionManeuverAssist_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___ConnectionManeuverAssist_regional__item__regExtValue._const_tab_id = 'Type'
    __ConnectionManeuverAssist_regional__item_._cont = ASN1Dict([
        ('regionId', ___ConnectionManeuverAssist_regional__item__regionId),
        ('regExtValue', ___ConnectionManeuverAssist_regional__item__regExtValue),
        ])
    __ConnectionManeuverAssist_regional__item_._ext = None
    _ConnectionManeuverAssist_regional._cont = __ConnectionManeuverAssist_regional__item_
    _ConnectionManeuverAssist_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    ConnectionManeuverAssist._cont = ASN1Dict([
        ('connectionID', _ConnectionManeuverAssist_connectionID),
        ('queueLength', _ConnectionManeuverAssist_queueLength),
        ('availableStorageLength', _ConnectionManeuverAssist_availableStorageLength),
        ('waitOnStop', _ConnectionManeuverAssist_waitOnStop),
        ('pedBicycleDetect', _ConnectionManeuverAssist_pedBicycleDetect),
        ('regional', _ConnectionManeuverAssist_regional),
        ])
    ConnectionManeuverAssist._ext = []
    
    #-----< ConnectsToList >-----#
    ConnectsToList = SEQ_OF(name='ConnectsToList', mode=MODE_TYPE)
    _ConnectsToList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'Connection')))
    ConnectsToList._cont = _ConnectsToList__item_
    ConnectsToList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< DataParameters >-----#
    DataParameters = SEQ(name='DataParameters', mode=MODE_TYPE)
    _DataParameters_processMethod = STR_IA5(name='processMethod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DataParameters_processMethod._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    _DataParameters_processAgency = STR_IA5(name='processAgency', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DataParameters_processAgency._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    _DataParameters_lastCheckedDate = STR_IA5(name='lastCheckedDate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DataParameters_lastCheckedDate._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    _DataParameters_geoidUsed = STR_IA5(name='geoidUsed', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DataParameters_geoidUsed._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    DataParameters._cont = ASN1Dict([
        ('processMethod', _DataParameters_processMethod),
        ('processAgency', _DataParameters_processAgency),
        ('lastCheckedDate', _DataParameters_lastCheckedDate),
        ('geoidUsed', _DataParameters_geoidUsed),
        ])
    DataParameters._ext = []
    
    #-----< DDate >-----#
    DDate = SEQ(name='DDate', mode=MODE_TYPE)
    _DDate_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DYear')))
    _DDate_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMonth')))
    _DDate_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDay')))
    DDate._cont = ASN1Dict([
        ('year', _DDate_year),
        ('month', _DDate_month),
        ('day', _DDate_day),
        ])
    DDate._ext = None
    
    #-----< DDateTime >-----#
    DDateTime = SEQ(name='DDateTime', mode=MODE_TYPE)
    _DDateTime_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DYear')), opt=True)
    _DDateTime_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMonth')), opt=True)
    _DDateTime_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDay')), opt=True)
    _DDateTime_hour = INT(name='hour', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DHour')), opt=True)
    _DDateTime_minute = INT(name='minute', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMinute')), opt=True)
    _DDateTime_second = INT(name='second', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _DDateTime_offset = INT(name='offset', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DOffset')), opt=True)
    DDateTime._cont = ASN1Dict([
        ('year', _DDateTime_year),
        ('month', _DDateTime_month),
        ('day', _DDateTime_day),
        ('hour', _DDateTime_hour),
        ('minute', _DDateTime_minute),
        ('second', _DDateTime_second),
        ('offset', _DDateTime_offset),
        ])
    DDateTime._ext = None
    
    #-----< DFullTime >-----#
    DFullTime = SEQ(name='DFullTime', mode=MODE_TYPE)
    _DFullTime_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DYear')))
    _DFullTime_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMonth')))
    _DFullTime_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDay')))
    _DFullTime_hour = INT(name='hour', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DHour')))
    _DFullTime_minute = INT(name='minute', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMinute')))
    DFullTime._cont = ASN1Dict([
        ('year', _DFullTime_year),
        ('month', _DFullTime_month),
        ('day', _DFullTime_day),
        ('hour', _DFullTime_hour),
        ('minute', _DFullTime_minute),
        ])
    DFullTime._ext = None
    
    #-----< DMonthDay >-----#
    DMonthDay = SEQ(name='DMonthDay', mode=MODE_TYPE)
    _DMonthDay_month = INT(name='month', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMonth')))
    _DMonthDay_day = INT(name='day', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDay')))
    DMonthDay._cont = ASN1Dict([
        ('month', _DMonthDay_month),
        ('day', _DMonthDay_day),
        ])
    DMonthDay._ext = None
    
    #-----< DTime >-----#
    DTime = SEQ(name='DTime', mode=MODE_TYPE)
    _DTime_hour = INT(name='hour', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DHour')))
    _DTime_minute = INT(name='minute', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMinute')))
    _DTime_second = INT(name='second', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')))
    _DTime_offset = INT(name='offset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DOffset')), opt=True)
    DTime._cont = ASN1Dict([
        ('hour', _DTime_hour),
        ('minute', _DTime_minute),
        ('second', _DTime_second),
        ('offset', _DTime_offset),
        ])
    DTime._ext = None
    
    #-----< DYearMonth >-----#
    DYearMonth = SEQ(name='DYearMonth', mode=MODE_TYPE)
    _DYearMonth_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DYear')))
    _DYearMonth_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DMonth')))
    DYearMonth._cont = ASN1Dict([
        ('year', _DYearMonth_year),
        ('month', _DYearMonth_month),
        ])
    DYearMonth._ext = None
    
    #-----< DisabledVehicle >-----#
    DisabledVehicle = SEQ(name='DisabledVehicle', mode=MODE_TYPE)
    _DisabledVehicle_statusDetails = INT(name='statusDetails', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    _DisabledVehicle_statusDetails._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=523, ub=541)], ev=None, er=[])
    _DisabledVehicle_locationDetails = ENUM(name='locationDetails', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'GenericLocations')), opt=True)
    DisabledVehicle._cont = ASN1Dict([
        ('statusDetails', _DisabledVehicle_statusDetails),
        ('locationDetails', _DisabledVehicle_locationDetails),
        ])
    DisabledVehicle._ext = []
    
    #-----< EmergencyDetails >-----#
    EmergencyDetails = SEQ(name='EmergencyDetails', mode=MODE_TYPE)
    _EmergencyDetails_sspRights = INT(name='sspRights', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _EmergencyDetails_sirenUse = ENUM(name='sirenUse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SirenInUse')))
    _EmergencyDetails_lightsUse = ENUM(name='lightsUse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LightbarInUse')))
    _EmergencyDetails_multi = ENUM(name='multi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MultiVehicleResponse')))
    _EmergencyDetails_events = SEQ(name='events', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PrivilegedEvents')), opt=True)
    _EmergencyDetails_responseType = ENUM(name='responseType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ResponseType')), opt=True)
    EmergencyDetails._cont = ASN1Dict([
        ('sspRights', _EmergencyDetails_sspRights),
        ('sirenUse', _EmergencyDetails_sirenUse),
        ('lightsUse', _EmergencyDetails_lightsUse),
        ('multi', _EmergencyDetails_multi),
        ('events', _EmergencyDetails_events),
        ('responseType', _EmergencyDetails_responseType),
        ])
    EmergencyDetails._ext = []
    
    #-----< EnabledLaneList >-----#
    EnabledLaneList = SEQ_OF(name='EnabledLaneList', mode=MODE_TYPE)
    _EnabledLaneList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'LaneID')))
    EnabledLaneList._cont = _EnabledLaneList__item_
    EnabledLaneList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< EventDescription >-----#
    EventDescription = SEQ(name='EventDescription', mode=MODE_TYPE)
    _EventDescription_typeEvent = INT(name='typeEvent', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    _EventDescription_description = SEQ_OF(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EventDescription_description__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    _EventDescription_description._cont = __EventDescription_description__item_
    _EventDescription_description._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _EventDescription_priority = OCT_STR(name='priority', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Priority')), opt=True)
    _EventDescription_heading = BIT_STR(name='heading', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')), opt=True)
    _EventDescription_extent = ENUM(name='extent', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Extent')), opt=True)
    _EventDescription_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EventDescription_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___EventDescription_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____EventDescription_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____EventDescription_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___EventDescription_regional__item__regionId._const_tab = ____EventDescription_regional__item__regionId_tab
    ___EventDescription_regional__item__regionId._const_tab_at = None
    ___EventDescription_regional__item__regionId._const_tab_id = 'id'
    ___EventDescription_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___EventDescription_regional__item__regExtValue._const_tab = ____EventDescription_regional__item__regionId_tab
    ___EventDescription_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___EventDescription_regional__item__regExtValue._const_tab_id = 'Type'
    __EventDescription_regional__item_._cont = ASN1Dict([
        ('regionId', ___EventDescription_regional__item__regionId),
        ('regExtValue', ___EventDescription_regional__item__regExtValue),
        ])
    __EventDescription_regional__item_._ext = None
    _EventDescription_regional._cont = __EventDescription_regional__item_
    _EventDescription_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    EventDescription._cont = ASN1Dict([
        ('typeEvent', _EventDescription_typeEvent),
        ('description', _EventDescription_description),
        ('priority', _EventDescription_priority),
        ('heading', _EventDescription_heading),
        ('extent', _EventDescription_extent),
        ('regional', _EventDescription_regional),
        ])
    EventDescription._ext = []
    
    #-----< FullPositionVector >-----#
    FullPositionVector = SEQ(name='FullPositionVector', mode=MODE_TYPE)
    _FullPositionVector_utcTime = SEQ(name='utcTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDateTime')), opt=True)
    _FullPositionVector_long = INT(name='long', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Longitude')))
    _FullPositionVector_lat = INT(name='lat', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Latitude')))
    _FullPositionVector_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Elevation')), opt=True)
    _FullPositionVector_heading = INT(name='heading', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Heading')), opt=True)
    _FullPositionVector_speed = SEQ(name='speed', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TransmissionAndSpeed')), opt=True)
    _FullPositionVector_posAccuracy = SEQ(name='posAccuracy', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionalAccuracy')), opt=True)
    _FullPositionVector_timeConfidence = ENUM(name='timeConfidence', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeConfidence')), opt=True)
    _FullPositionVector_posConfidence = SEQ(name='posConfidence', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionConfidenceSet')), opt=True)
    _FullPositionVector_speedConfidence = SEQ(name='speedConfidence', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedandHeadingandThrottleConfidence')), opt=True)
    FullPositionVector._cont = ASN1Dict([
        ('utcTime', _FullPositionVector_utcTime),
        ('long', _FullPositionVector_long),
        ('lat', _FullPositionVector_lat),
        ('elevation', _FullPositionVector_elevation),
        ('heading', _FullPositionVector_heading),
        ('speed', _FullPositionVector_speed),
        ('posAccuracy', _FullPositionVector_posAccuracy),
        ('timeConfidence', _FullPositionVector_timeConfidence),
        ('posConfidence', _FullPositionVector_posConfidence),
        ('speedConfidence', _FullPositionVector_speedConfidence),
        ])
    FullPositionVector._ext = []
    
    #-----< GenericLane >-----#
    GenericLane = SEQ(name='GenericLane', mode=MODE_TYPE)
    _GenericLane_laneID = INT(name='laneID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneID')))
    _GenericLane_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _GenericLane_ingressApproach = INT(name='ingressApproach', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ApproachID')), opt=True)
    _GenericLane_egressApproach = INT(name='egressApproach', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ApproachID')), opt=True)
    _GenericLane_laneAttributes = SEQ(name='laneAttributes', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes')))
    _GenericLane_maneuvers = BIT_STR(name='maneuvers', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AllowedManeuvers')), opt=True)
    _GenericLane_nodeList = CHOICE(name='nodeList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeListXY')))
    _GenericLane_connectsTo = SEQ_OF(name='connectsTo', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ConnectsToList')), opt=True)
    _GenericLane_overlays = SEQ_OF(name='overlays', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OverlayLaneList')), opt=True)
    _GenericLane_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GenericLane_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___GenericLane_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____GenericLane_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____GenericLane_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___GenericLane_regional__item__regionId._const_tab = ____GenericLane_regional__item__regionId_tab
    ___GenericLane_regional__item__regionId._const_tab_at = None
    ___GenericLane_regional__item__regionId._const_tab_id = 'id'
    ___GenericLane_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___GenericLane_regional__item__regExtValue._const_tab = ____GenericLane_regional__item__regionId_tab
    ___GenericLane_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___GenericLane_regional__item__regExtValue._const_tab_id = 'Type'
    __GenericLane_regional__item_._cont = ASN1Dict([
        ('regionId', ___GenericLane_regional__item__regionId),
        ('regExtValue', ___GenericLane_regional__item__regExtValue),
        ])
    __GenericLane_regional__item_._ext = None
    _GenericLane_regional._cont = __GenericLane_regional__item_
    _GenericLane_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    GenericLane._cont = ASN1Dict([
        ('laneID', _GenericLane_laneID),
        ('name', _GenericLane_name),
        ('ingressApproach', _GenericLane_ingressApproach),
        ('egressApproach', _GenericLane_egressApproach),
        ('laneAttributes', _GenericLane_laneAttributes),
        ('maneuvers', _GenericLane_maneuvers),
        ('nodeList', _GenericLane_nodeList),
        ('connectsTo', _GenericLane_connectsTo),
        ('overlays', _GenericLane_overlays),
        ('regional', _GenericLane_regional),
        ])
    GenericLane._ext = []
    
    #-----< GeographicalPath >-----#
    GeographicalPath = SEQ(name='GeographicalPath', mode=MODE_TYPE)
    _GeographicalPath_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _GeographicalPath_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadSegmentReferenceID')), opt=True)
    _GeographicalPath_anchor = SEQ(name='anchor', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')), opt=True)
    _GeographicalPath_laneWidth = INT(name='laneWidth', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneWidth')), opt=True)
    _GeographicalPath_directionality = ENUM(name='directionality', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DirectionOfUse')), opt=True)
    _GeographicalPath_closedPath = BOOL(name='closedPath', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GeographicalPath_direction = BIT_STR(name='direction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')), opt=True)
    _GeographicalPath_description = CHOICE(name='description', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __GeographicalPath_description_path = SEQ(name='path', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetSystem')))
    __GeographicalPath_description_geometry = SEQ(name='geometry', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GeometricProjection')))
    __GeographicalPath_description_oldRegion = SEQ(name='oldRegion', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ValidRegion')))
    _GeographicalPath_description._cont = ASN1Dict([
        ('path', __GeographicalPath_description_path),
        ('geometry', __GeographicalPath_description_geometry),
        ('oldRegion', __GeographicalPath_description_oldRegion),
        ])
    _GeographicalPath_description._ext = []
    _GeographicalPath_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GeographicalPath_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___GeographicalPath_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____GeographicalPath_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____GeographicalPath_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___GeographicalPath_regional__item__regionId._const_tab = ____GeographicalPath_regional__item__regionId_tab
    ___GeographicalPath_regional__item__regionId._const_tab_at = None
    ___GeographicalPath_regional__item__regionId._const_tab_id = 'id'
    ___GeographicalPath_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___GeographicalPath_regional__item__regExtValue._const_tab = ____GeographicalPath_regional__item__regionId_tab
    ___GeographicalPath_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___GeographicalPath_regional__item__regExtValue._const_tab_id = 'Type'
    __GeographicalPath_regional__item_._cont = ASN1Dict([
        ('regionId', ___GeographicalPath_regional__item__regionId),
        ('regExtValue', ___GeographicalPath_regional__item__regExtValue),
        ])
    __GeographicalPath_regional__item_._ext = None
    _GeographicalPath_regional._cont = __GeographicalPath_regional__item_
    _GeographicalPath_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    GeographicalPath._cont = ASN1Dict([
        ('name', _GeographicalPath_name),
        ('id', _GeographicalPath_id),
        ('anchor', _GeographicalPath_anchor),
        ('laneWidth', _GeographicalPath_laneWidth),
        ('directionality', _GeographicalPath_directionality),
        ('closedPath', _GeographicalPath_closedPath),
        ('direction', _GeographicalPath_direction),
        ('description', _GeographicalPath_description),
        ('regional', _GeographicalPath_regional),
        ])
    GeographicalPath._ext = []
    
    #-----< GeometricProjection >-----#
    GeometricProjection = SEQ(name='GeometricProjection', mode=MODE_TYPE)
    _GeometricProjection_direction = BIT_STR(name='direction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')))
    _GeometricProjection_extent = ENUM(name='extent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Extent')), opt=True)
    _GeometricProjection_laneWidth = INT(name='laneWidth', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneWidth')), opt=True)
    _GeometricProjection_circle = SEQ(name='circle', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Circle')))
    _GeometricProjection_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __GeometricProjection_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___GeometricProjection_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____GeometricProjection_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____GeometricProjection_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___GeometricProjection_regional__item__regionId._const_tab = ____GeometricProjection_regional__item__regionId_tab
    ___GeometricProjection_regional__item__regionId._const_tab_at = None
    ___GeometricProjection_regional__item__regionId._const_tab_id = 'id'
    ___GeometricProjection_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___GeometricProjection_regional__item__regExtValue._const_tab = ____GeometricProjection_regional__item__regionId_tab
    ___GeometricProjection_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___GeometricProjection_regional__item__regExtValue._const_tab_id = 'Type'
    __GeometricProjection_regional__item_._cont = ASN1Dict([
        ('regionId', ___GeometricProjection_regional__item__regionId),
        ('regExtValue', ___GeometricProjection_regional__item__regExtValue),
        ])
    __GeometricProjection_regional__item_._ext = None
    _GeometricProjection_regional._cont = __GeometricProjection_regional__item_
    _GeometricProjection_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    GeometricProjection._cont = ASN1Dict([
        ('direction', _GeometricProjection_direction),
        ('extent', _GeometricProjection_extent),
        ('laneWidth', _GeometricProjection_laneWidth),
        ('circle', _GeometricProjection_circle),
        ('regional', _GeometricProjection_regional),
        ])
    GeometricProjection._ext = []
    
    #-----< Header >-----#
    Header = SEQ(name='Header', mode=MODE_TYPE)
    _Header_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DYear')), opt=True)
    _Header_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _Header_secMark = INT(name='secMark', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _Header_msgIssueRevision = INT(name='msgIssueRevision', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')), opt=True)
    Header._cont = ASN1Dict([
        ('year', _Header_year),
        ('timeStamp', _Header_timeStamp),
        ('secMark', _Header_secMark),
        ('msgIssueRevision', _Header_msgIssueRevision),
        ])
    Header._ext = []
    
    #-----< IntersectionAccessPoint >-----#
    IntersectionAccessPoint = CHOICE(name='IntersectionAccessPoint', mode=MODE_TYPE)
    _IntersectionAccessPoint_lane = INT(name='lane', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneID')))
    _IntersectionAccessPoint_approach = INT(name='approach', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ApproachID')))
    _IntersectionAccessPoint_connection = INT(name='connection', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneConnectionID')))
    IntersectionAccessPoint._cont = ASN1Dict([
        ('lane', _IntersectionAccessPoint_lane),
        ('approach', _IntersectionAccessPoint_approach),
        ('connection', _IntersectionAccessPoint_connection),
        ])
    IntersectionAccessPoint._ext = []
    
    #-----< IntersectionGeometry >-----#
    IntersectionGeometry = SEQ(name='IntersectionGeometry', mode=MODE_TYPE)
    _IntersectionGeometry_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _IntersectionGeometry_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionReferenceID')))
    _IntersectionGeometry_revision = INT(name='revision', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _IntersectionGeometry_refPoint = SEQ(name='refPoint', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')))
    _IntersectionGeometry_laneWidth = INT(name='laneWidth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneWidth')), opt=True)
    _IntersectionGeometry_speedLimits = SEQ_OF(name='speedLimits', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedLimitList')), opt=True)
    _IntersectionGeometry_laneSet = SEQ_OF(name='laneSet', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneList')))
    _IntersectionGeometry_preemptPriorityData = SEQ_OF(name='preemptPriorityData', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PreemptPriorityList')), opt=True)
    _IntersectionGeometry_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IntersectionGeometry_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___IntersectionGeometry_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____IntersectionGeometry_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____IntersectionGeometry_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___IntersectionGeometry_regional__item__regionId._const_tab = ____IntersectionGeometry_regional__item__regionId_tab
    ___IntersectionGeometry_regional__item__regionId._const_tab_at = None
    ___IntersectionGeometry_regional__item__regionId._const_tab_id = 'id'
    ___IntersectionGeometry_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___IntersectionGeometry_regional__item__regExtValue._const_tab = ____IntersectionGeometry_regional__item__regionId_tab
    ___IntersectionGeometry_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___IntersectionGeometry_regional__item__regExtValue._const_tab_id = 'Type'
    __IntersectionGeometry_regional__item_._cont = ASN1Dict([
        ('regionId', ___IntersectionGeometry_regional__item__regionId),
        ('regExtValue', ___IntersectionGeometry_regional__item__regExtValue),
        ])
    __IntersectionGeometry_regional__item_._ext = None
    _IntersectionGeometry_regional._cont = __IntersectionGeometry_regional__item_
    _IntersectionGeometry_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    IntersectionGeometry._cont = ASN1Dict([
        ('name', _IntersectionGeometry_name),
        ('id', _IntersectionGeometry_id),
        ('revision', _IntersectionGeometry_revision),
        ('refPoint', _IntersectionGeometry_refPoint),
        ('laneWidth', _IntersectionGeometry_laneWidth),
        ('speedLimits', _IntersectionGeometry_speedLimits),
        ('laneSet', _IntersectionGeometry_laneSet),
        ('preemptPriorityData', _IntersectionGeometry_preemptPriorityData),
        ('regional', _IntersectionGeometry_regional),
        ])
    IntersectionGeometry._ext = []
    
    #-----< IntersectionGeometryList >-----#
    IntersectionGeometryList = SEQ_OF(name='IntersectionGeometryList', mode=MODE_TYPE)
    _IntersectionGeometryList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'IntersectionGeometry')))
    IntersectionGeometryList._cont = _IntersectionGeometryList__item_
    IntersectionGeometryList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< IntersectionReferenceID >-----#
    IntersectionReferenceID = SEQ(name='IntersectionReferenceID', mode=MODE_TYPE)
    _IntersectionReferenceID_region = INT(name='region', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadRegulatorID')), opt=True)
    _IntersectionReferenceID_id = INT(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionID')))
    IntersectionReferenceID._cont = ASN1Dict([
        ('region', _IntersectionReferenceID_region),
        ('id', _IntersectionReferenceID_id),
        ])
    IntersectionReferenceID._ext = None
    
    #-----< IntersectionState >-----#
    IntersectionState = SEQ(name='IntersectionState', mode=MODE_TYPE)
    _IntersectionState_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _IntersectionState_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionReferenceID')))
    _IntersectionState_revision = INT(name='revision', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _IntersectionState_status = BIT_STR(name='status', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionStatusObject')))
    _IntersectionState_moy = INT(name='moy', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _IntersectionState_timeStamp = INT(name='timeStamp', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _IntersectionState_enabledLanes = SEQ_OF(name='enabledLanes', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'EnabledLaneList')), opt=True)
    _IntersectionState_states = SEQ_OF(name='states', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MovementList')))
    _IntersectionState_maneuverAssistList = SEQ_OF(name='maneuverAssistList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ManeuverAssistList')), opt=True)
    _IntersectionState_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IntersectionState_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___IntersectionState_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____IntersectionState_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____IntersectionState_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'IntersectionState-addGrpC')))
    ____IntersectionState_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____IntersectionState_regional__item__regionId_tab_val_Type_0), ('id', 3)])], rr=[], ev=None, er=[])
    ___IntersectionState_regional__item__regionId._const_tab = ____IntersectionState_regional__item__regionId_tab
    ___IntersectionState_regional__item__regionId._const_tab_at = None
    ___IntersectionState_regional__item__regionId._const_tab_id = 'id'
    ___IntersectionState_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___IntersectionState_regional__item__regExtValue._const_tab = ____IntersectionState_regional__item__regionId_tab
    ___IntersectionState_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___IntersectionState_regional__item__regExtValue._const_tab_id = 'Type'
    __IntersectionState_regional__item_._cont = ASN1Dict([
        ('regionId', ___IntersectionState_regional__item__regionId),
        ('regExtValue', ___IntersectionState_regional__item__regExtValue),
        ])
    __IntersectionState_regional__item_._ext = None
    _IntersectionState_regional._cont = __IntersectionState_regional__item_
    _IntersectionState_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    IntersectionState._cont = ASN1Dict([
        ('name', _IntersectionState_name),
        ('id', _IntersectionState_id),
        ('revision', _IntersectionState_revision),
        ('status', _IntersectionState_status),
        ('moy', _IntersectionState_moy),
        ('timeStamp', _IntersectionState_timeStamp),
        ('enabledLanes', _IntersectionState_enabledLanes),
        ('states', _IntersectionState_states),
        ('maneuverAssistList', _IntersectionState_maneuverAssistList),
        ('regional', _IntersectionState_regional),
        ])
    IntersectionState._ext = []
    
    #-----< IntersectionStateList >-----#
    IntersectionStateList = SEQ_OF(name='IntersectionStateList', mode=MODE_TYPE)
    _IntersectionStateList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'IntersectionState')))
    IntersectionStateList._cont = _IntersectionStateList__item_
    IntersectionStateList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< ExitService >-----#
    ExitService = SEQ_OF(name='ExitService', mode=MODE_TYPE)
    _ExitService__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __ExitService__item__item = CHOICE(name='item', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___ExitService__item__item_itis = INT(name='itis', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    ___ExitService__item__item_text = STR_IA5(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ITIStextPhrase')))
    __ExitService__item__item._cont = ASN1Dict([
        ('itis', ___ExitService__item__item_itis),
        ('text', ___ExitService__item__item_text),
        ])
    __ExitService__item__item._ext = None
    _ExitService__item_._cont = ASN1Dict([
        ('item', __ExitService__item__item),
        ])
    _ExitService__item_._ext = None
    ExitService._cont = _ExitService__item_
    ExitService._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GenericSignage >-----#
    GenericSignage = SEQ_OF(name='GenericSignage', mode=MODE_TYPE)
    _GenericSignage__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __GenericSignage__item__item = CHOICE(name='item', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___GenericSignage__item__item_itis = INT(name='itis', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    ___GenericSignage__item__item_text = STR_IA5(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ITIStextPhrase')))
    __GenericSignage__item__item._cont = ASN1Dict([
        ('itis', ___GenericSignage__item__item_itis),
        ('text', ___GenericSignage__item__item_text),
        ])
    __GenericSignage__item__item._ext = None
    _GenericSignage__item_._cont = ASN1Dict([
        ('item', __GenericSignage__item__item),
        ])
    _GenericSignage__item_._ext = None
    GenericSignage._cont = _GenericSignage__item_
    GenericSignage._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< SpeedLimit >-----#
    SpeedLimit = SEQ_OF(name='SpeedLimit', mode=MODE_TYPE)
    _SpeedLimit__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __SpeedLimit__item__item = CHOICE(name='item', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___SpeedLimit__item__item_itis = INT(name='itis', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    ___SpeedLimit__item__item_text = STR_IA5(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ITIStextPhrase')))
    __SpeedLimit__item__item._cont = ASN1Dict([
        ('itis', ___SpeedLimit__item__item_itis),
        ('text', ___SpeedLimit__item__item_text),
        ])
    __SpeedLimit__item__item._ext = None
    _SpeedLimit__item_._cont = ASN1Dict([
        ('item', __SpeedLimit__item__item),
        ])
    _SpeedLimit__item_._ext = None
    SpeedLimit._cont = _SpeedLimit__item_
    SpeedLimit._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< WorkZone >-----#
    WorkZone = SEQ_OF(name='WorkZone', mode=MODE_TYPE)
    _WorkZone__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __WorkZone__item__item = CHOICE(name='item', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___WorkZone__item__item_itis = INT(name='itis', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    ___WorkZone__item__item_text = STR_IA5(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ITIStextPhrase')))
    __WorkZone__item__item._cont = ASN1Dict([
        ('itis', ___WorkZone__item__item_itis),
        ('text', ___WorkZone__item__item_text),
        ])
    __WorkZone__item__item._ext = None
    _WorkZone__item_._cont = ASN1Dict([
        ('item', __WorkZone__item__item),
        ])
    _WorkZone__item_._ext = None
    WorkZone._cont = _WorkZone__item_
    WorkZone._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< J1939data >-----#
    J1939data = SEQ(name='J1939data', mode=MODE_TYPE)
    _J1939data_tires = SEQ_OF(name='tires', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TireDataList')), opt=True)
    _J1939data_axles = SEQ_OF(name='axles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AxleWeightList')), opt=True)
    _J1939data_trailerWeight = INT(name='trailerWeight', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerWeight')), opt=True)
    _J1939data_cargoWeight = INT(name='cargoWeight', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'CargoWeight')), opt=True)
    _J1939data_steeringAxleTemperature = INT(name='steeringAxleTemperature', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringAxleTemperature')), opt=True)
    _J1939data_driveAxleLocation = INT(name='driveAxleLocation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DriveAxleLocation')), opt=True)
    _J1939data_driveAxleLiftAirPressure = INT(name='driveAxleLiftAirPressure', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DriveAxleLiftAirPressure')), opt=True)
    _J1939data_driveAxleTemperature = INT(name='driveAxleTemperature', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DriveAxleTemperature')), opt=True)
    _J1939data_driveAxleLubePressure = INT(name='driveAxleLubePressure', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DriveAxleLubePressure')), opt=True)
    _J1939data_steeringAxleLubePressure = INT(name='steeringAxleLubePressure', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringAxleLubePressure')), opt=True)
    J1939data._cont = ASN1Dict([
        ('tires', _J1939data_tires),
        ('axles', _J1939data_axles),
        ('trailerWeight', _J1939data_trailerWeight),
        ('cargoWeight', _J1939data_cargoWeight),
        ('steeringAxleTemperature', _J1939data_steeringAxleTemperature),
        ('driveAxleLocation', _J1939data_driveAxleLocation),
        ('driveAxleLiftAirPressure', _J1939data_driveAxleLiftAirPressure),
        ('driveAxleTemperature', _J1939data_driveAxleTemperature),
        ('driveAxleLubePressure', _J1939data_driveAxleLubePressure),
        ('steeringAxleLubePressure', _J1939data_steeringAxleLubePressure),
        ])
    J1939data._ext = []
    
    #-----< TireDataList >-----#
    TireDataList = SEQ_OF(name='TireDataList', mode=MODE_TYPE)
    _TireDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TireData')))
    TireDataList._cont = _TireDataList__item_
    TireDataList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< TireData >-----#
    TireData = SEQ(name='TireData', mode=MODE_TYPE)
    _TireData_location = INT(name='location', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TireLocation')), opt=True)
    _TireData_pressure = INT(name='pressure', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TirePressure')), opt=True)
    _TireData_temp = INT(name='temp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TireTemp')), opt=True)
    _TireData_wheelSensorStatus = ENUM(name='wheelSensorStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WheelSensorStatus')), opt=True)
    _TireData_wheelEndElectFault = ENUM(name='wheelEndElectFault', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WheelEndElectFault')), opt=True)
    _TireData_leakageRate = INT(name='leakageRate', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TireLeakageRate')), opt=True)
    _TireData_detection = ENUM(name='detection', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TirePressureThresholdDetection')), opt=True)
    TireData._cont = ASN1Dict([
        ('location', _TireData_location),
        ('pressure', _TireData_pressure),
        ('temp', _TireData_temp),
        ('wheelSensorStatus', _TireData_wheelSensorStatus),
        ('wheelEndElectFault', _TireData_wheelEndElectFault),
        ('leakageRate', _TireData_leakageRate),
        ('detection', _TireData_detection),
        ])
    TireData._ext = []
    
    #-----< AxleWeightList >-----#
    AxleWeightList = SEQ_OF(name='AxleWeightList', mode=MODE_TYPE)
    _AxleWeightList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'AxleWeightSet')))
    AxleWeightList._cont = _AxleWeightList__item_
    AxleWeightList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< AxleWeightSet >-----#
    AxleWeightSet = SEQ(name='AxleWeightSet', mode=MODE_TYPE)
    _AxleWeightSet_location = INT(name='location', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AxleLocation')), opt=True)
    _AxleWeightSet_weight = INT(name='weight', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AxleWeight')), opt=True)
    AxleWeightSet._cont = ASN1Dict([
        ('location', _AxleWeightSet_location),
        ('weight', _AxleWeightSet_weight),
        ])
    AxleWeightSet._ext = []
    
    #-----< LaneAttributes >-----#
    LaneAttributes = SEQ(name='LaneAttributes', mode=MODE_TYPE)
    _LaneAttributes_directionalUse = BIT_STR(name='directionalUse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneDirection')))
    _LaneAttributes_sharedWith = BIT_STR(name='sharedWith', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneSharing')))
    _LaneAttributes_laneType = CHOICE(name='laneType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'LaneTypeAttributes')))
    _LaneAttributes_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __LaneAttributes_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___LaneAttributes_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___LaneAttributes_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __LaneAttributes_regional_regionId._const_tab = ___LaneAttributes_regional_regionId_tab
    __LaneAttributes_regional_regionId._const_tab_at = None
    __LaneAttributes_regional_regionId._const_tab_id = 'id'
    __LaneAttributes_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __LaneAttributes_regional_regExtValue._const_tab = ___LaneAttributes_regional_regionId_tab
    __LaneAttributes_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __LaneAttributes_regional_regExtValue._const_tab_id = 'Type'
    _LaneAttributes_regional._cont = ASN1Dict([
        ('regionId', __LaneAttributes_regional_regionId),
        ('regExtValue', __LaneAttributes_regional_regExtValue),
        ])
    _LaneAttributes_regional._ext = None
    LaneAttributes._cont = ASN1Dict([
        ('directionalUse', _LaneAttributes_directionalUse),
        ('sharedWith', _LaneAttributes_sharedWith),
        ('laneType', _LaneAttributes_laneType),
        ('regional', _LaneAttributes_regional),
        ])
    LaneAttributes._ext = None
    
    #-----< LaneDataAttribute >-----#
    LaneDataAttribute = CHOICE(name='LaneDataAttribute', mode=MODE_TYPE)
    _LaneDataAttribute_pathEndPointAngle = INT(name='pathEndPointAngle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DeltaAngle')))
    _LaneDataAttribute_laneCrownPointCenter = INT(name='laneCrownPointCenter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadwayCrownAngle')))
    _LaneDataAttribute_laneCrownPointLeft = INT(name='laneCrownPointLeft', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadwayCrownAngle')))
    _LaneDataAttribute_laneCrownPointRight = INT(name='laneCrownPointRight', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadwayCrownAngle')))
    _LaneDataAttribute_laneAngle = INT(name='laneAngle', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MergeDivergeNodeAngle')))
    _LaneDataAttribute_speedLimits = SEQ_OF(name='speedLimits', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedLimitList')))
    _LaneDataAttribute_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LaneDataAttribute_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___LaneDataAttribute_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____LaneDataAttribute_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____LaneDataAttribute_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'LaneDataAttribute-addGrpB')))
    ____LaneDataAttribute_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____LaneDataAttribute_regional__item__regionId_tab_val_Type_0), ('id', 2)])], rr=[], ev=None, er=[])
    ___LaneDataAttribute_regional__item__regionId._const_tab = ____LaneDataAttribute_regional__item__regionId_tab
    ___LaneDataAttribute_regional__item__regionId._const_tab_at = None
    ___LaneDataAttribute_regional__item__regionId._const_tab_id = 'id'
    ___LaneDataAttribute_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___LaneDataAttribute_regional__item__regExtValue._const_tab = ____LaneDataAttribute_regional__item__regionId_tab
    ___LaneDataAttribute_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___LaneDataAttribute_regional__item__regExtValue._const_tab_id = 'Type'
    __LaneDataAttribute_regional__item_._cont = ASN1Dict([
        ('regionId', ___LaneDataAttribute_regional__item__regionId),
        ('regExtValue', ___LaneDataAttribute_regional__item__regExtValue),
        ])
    __LaneDataAttribute_regional__item_._ext = None
    _LaneDataAttribute_regional._cont = __LaneDataAttribute_regional__item_
    _LaneDataAttribute_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    LaneDataAttribute._cont = ASN1Dict([
        ('pathEndPointAngle', _LaneDataAttribute_pathEndPointAngle),
        ('laneCrownPointCenter', _LaneDataAttribute_laneCrownPointCenter),
        ('laneCrownPointLeft', _LaneDataAttribute_laneCrownPointLeft),
        ('laneCrownPointRight', _LaneDataAttribute_laneCrownPointRight),
        ('laneAngle', _LaneDataAttribute_laneAngle),
        ('speedLimits', _LaneDataAttribute_speedLimits),
        ('regional', _LaneDataAttribute_regional),
        ])
    LaneDataAttribute._ext = []
    
    #-----< LaneDataAttributeList >-----#
    LaneDataAttributeList = SEQ_OF(name='LaneDataAttributeList', mode=MODE_TYPE)
    _LaneDataAttributeList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'LaneDataAttribute')))
    LaneDataAttributeList._cont = _LaneDataAttributeList__item_
    LaneDataAttributeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< LaneList >-----#
    LaneList = SEQ_OF(name='LaneList', mode=MODE_TYPE)
    _LaneList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'GenericLane')))
    LaneList._cont = _LaneList__item_
    LaneList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< LaneTypeAttributes >-----#
    LaneTypeAttributes = CHOICE(name='LaneTypeAttributes', mode=MODE_TYPE)
    _LaneTypeAttributes_vehicle = BIT_STR(name='vehicle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Vehicle')))
    _LaneTypeAttributes_crosswalk = BIT_STR(name='crosswalk', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Crosswalk')))
    _LaneTypeAttributes_bikeLane = BIT_STR(name='bikeLane', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Bike')))
    _LaneTypeAttributes_sidewalk = BIT_STR(name='sidewalk', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Sidewalk')))
    _LaneTypeAttributes_median = BIT_STR(name='median', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Barrier')))
    _LaneTypeAttributes_striping = BIT_STR(name='striping', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Striping')))
    _LaneTypeAttributes_trackedVehicle = BIT_STR(name='trackedVehicle', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-TrackedVehicle')))
    _LaneTypeAttributes_parking = BIT_STR(name='parking', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneAttributes-Parking')))
    LaneTypeAttributes._cont = ASN1Dict([
        ('vehicle', _LaneTypeAttributes_vehicle),
        ('crosswalk', _LaneTypeAttributes_crosswalk),
        ('bikeLane', _LaneTypeAttributes_bikeLane),
        ('sidewalk', _LaneTypeAttributes_sidewalk),
        ('median', _LaneTypeAttributes_median),
        ('striping', _LaneTypeAttributes_striping),
        ('trackedVehicle', _LaneTypeAttributes_trackedVehicle),
        ('parking', _LaneTypeAttributes_parking),
        ])
    LaneTypeAttributes._ext = []
    
    #-----< ManeuverAssistList >-----#
    ManeuverAssistList = SEQ_OF(name='ManeuverAssistList', mode=MODE_TYPE)
    _ManeuverAssistList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'ConnectionManeuverAssist')))
    ManeuverAssistList._cont = _ManeuverAssistList__item_
    ManeuverAssistList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< MovementEventList >-----#
    MovementEventList = SEQ_OF(name='MovementEventList', mode=MODE_TYPE)
    _MovementEventList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'MovementEvent')))
    MovementEventList._cont = _MovementEventList__item_
    MovementEventList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< MovementEvent >-----#
    MovementEvent = SEQ(name='MovementEvent', mode=MODE_TYPE)
    _MovementEvent_eventState = ENUM(name='eventState', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MovementPhaseState')))
    _MovementEvent_timing = SEQ(name='timing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeChangeDetails')), opt=True)
    _MovementEvent_speeds = SEQ_OF(name='speeds', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AdvisorySpeedList')), opt=True)
    _MovementEvent_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MovementEvent_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___MovementEvent_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____MovementEvent_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____MovementEvent_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'MovementEvent-addGrpB')))
    ____MovementEvent_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____MovementEvent_regional__item__regionId_tab_val_Type_0), ('id', 2)])], rr=[], ev=None, er=[])
    ___MovementEvent_regional__item__regionId._const_tab = ____MovementEvent_regional__item__regionId_tab
    ___MovementEvent_regional__item__regionId._const_tab_at = None
    ___MovementEvent_regional__item__regionId._const_tab_id = 'id'
    ___MovementEvent_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___MovementEvent_regional__item__regExtValue._const_tab = ____MovementEvent_regional__item__regionId_tab
    ___MovementEvent_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___MovementEvent_regional__item__regExtValue._const_tab_id = 'Type'
    __MovementEvent_regional__item_._cont = ASN1Dict([
        ('regionId', ___MovementEvent_regional__item__regionId),
        ('regExtValue', ___MovementEvent_regional__item__regExtValue),
        ])
    __MovementEvent_regional__item_._ext = None
    _MovementEvent_regional._cont = __MovementEvent_regional__item_
    _MovementEvent_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    MovementEvent._cont = ASN1Dict([
        ('eventState', _MovementEvent_eventState),
        ('timing', _MovementEvent_timing),
        ('speeds', _MovementEvent_speeds),
        ('regional', _MovementEvent_regional),
        ])
    MovementEvent._ext = []
    
    #-----< MovementList >-----#
    MovementList = SEQ_OF(name='MovementList', mode=MODE_TYPE)
    _MovementList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'MovementState')))
    MovementList._cont = _MovementList__item_
    MovementList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< MovementState >-----#
    MovementState = SEQ(name='MovementState', mode=MODE_TYPE)
    _MovementState_movementName = STR_IA5(name='movementName', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _MovementState_signalGroup = INT(name='signalGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalGroupID')))
    _MovementState_state_time_speed = SEQ_OF(name='state-time-speed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MovementEventList')))
    _MovementState_maneuverAssistList = SEQ_OF(name='maneuverAssistList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ManeuverAssistList')), opt=True)
    _MovementState_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MovementState_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___MovementState_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____MovementState_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____MovementState_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___MovementState_regional__item__regionId._const_tab = ____MovementState_regional__item__regionId_tab
    ___MovementState_regional__item__regionId._const_tab_at = None
    ___MovementState_regional__item__regionId._const_tab_id = 'id'
    ___MovementState_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___MovementState_regional__item__regExtValue._const_tab = ____MovementState_regional__item__regionId_tab
    ___MovementState_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___MovementState_regional__item__regExtValue._const_tab_id = 'Type'
    __MovementState_regional__item_._cont = ASN1Dict([
        ('regionId', ___MovementState_regional__item__regionId),
        ('regExtValue', ___MovementState_regional__item__regExtValue),
        ])
    __MovementState_regional__item_._ext = None
    _MovementState_regional._cont = __MovementState_regional__item_
    _MovementState_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    MovementState._cont = ASN1Dict([
        ('movementName', _MovementState_movementName),
        ('signalGroup', _MovementState_signalGroup),
        ('state-time-speed', _MovementState_state_time_speed),
        ('maneuverAssistList', _MovementState_maneuverAssistList),
        ('regional', _MovementState_regional),
        ])
    MovementState._ext = []
    
    #-----< Node-LL-24B >-----#
    Node_LL_24B = SEQ(name='Node-LL-24B', mode=MODE_TYPE)
    _Node_LL_24B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B12')))
    _Node_LL_24B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B12')))
    Node_LL_24B._cont = ASN1Dict([
        ('lon', _Node_LL_24B_lon),
        ('lat', _Node_LL_24B_lat),
        ])
    Node_LL_24B._ext = None
    
    #-----< Node-LL-28B >-----#
    Node_LL_28B = SEQ(name='Node-LL-28B', mode=MODE_TYPE)
    _Node_LL_28B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B14')))
    _Node_LL_28B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B14')))
    Node_LL_28B._cont = ASN1Dict([
        ('lon', _Node_LL_28B_lon),
        ('lat', _Node_LL_28B_lat),
        ])
    Node_LL_28B._ext = None
    
    #-----< Node-LL-32B >-----#
    Node_LL_32B = SEQ(name='Node-LL-32B', mode=MODE_TYPE)
    _Node_LL_32B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B16')))
    _Node_LL_32B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B16')))
    Node_LL_32B._cont = ASN1Dict([
        ('lon', _Node_LL_32B_lon),
        ('lat', _Node_LL_32B_lat),
        ])
    Node_LL_32B._ext = None
    
    #-----< Node-LL-36B >-----#
    Node_LL_36B = SEQ(name='Node-LL-36B', mode=MODE_TYPE)
    _Node_LL_36B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B18')))
    _Node_LL_36B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B18')))
    Node_LL_36B._cont = ASN1Dict([
        ('lon', _Node_LL_36B_lon),
        ('lat', _Node_LL_36B_lat),
        ])
    Node_LL_36B._ext = None
    
    #-----< Node-LL-44B >-----#
    Node_LL_44B = SEQ(name='Node-LL-44B', mode=MODE_TYPE)
    _Node_LL_44B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B22')))
    _Node_LL_44B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B22')))
    Node_LL_44B._cont = ASN1Dict([
        ('lon', _Node_LL_44B_lon),
        ('lat', _Node_LL_44B_lat),
        ])
    Node_LL_44B._ext = None
    
    #-----< Node-LL-48B >-----#
    Node_LL_48B = SEQ(name='Node-LL-48B', mode=MODE_TYPE)
    _Node_LL_48B_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B24')))
    _Node_LL_48B_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B24')))
    Node_LL_48B._cont = ASN1Dict([
        ('lon', _Node_LL_48B_lon),
        ('lat', _Node_LL_48B_lat),
        ])
    Node_LL_48B._ext = None
    
    #-----< Node-LLmD-64b >-----#
    Node_LLmD_64b = SEQ(name='Node-LLmD-64b', mode=MODE_TYPE)
    _Node_LLmD_64b_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Longitude')))
    _Node_LLmD_64b_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Latitude')))
    Node_LLmD_64b._cont = ASN1Dict([
        ('lon', _Node_LLmD_64b_lon),
        ('lat', _Node_LLmD_64b_lat),
        ])
    Node_LLmD_64b._ext = None
    
    #-----< Node-XY-20b >-----#
    Node_XY_20b = SEQ(name='Node-XY-20b', mode=MODE_TYPE)
    _Node_XY_20b_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')))
    _Node_XY_20b_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')))
    Node_XY_20b._cont = ASN1Dict([
        ('x', _Node_XY_20b_x),
        ('y', _Node_XY_20b_y),
        ])
    Node_XY_20b._ext = None
    
    #-----< Node-XY-22b >-----#
    Node_XY_22b = SEQ(name='Node-XY-22b', mode=MODE_TYPE)
    _Node_XY_22b_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B11')))
    _Node_XY_22b_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B11')))
    Node_XY_22b._cont = ASN1Dict([
        ('x', _Node_XY_22b_x),
        ('y', _Node_XY_22b_y),
        ])
    Node_XY_22b._ext = None
    
    #-----< Node-XY-24b >-----#
    Node_XY_24b = SEQ(name='Node-XY-24b', mode=MODE_TYPE)
    _Node_XY_24b_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B12')))
    _Node_XY_24b_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B12')))
    Node_XY_24b._cont = ASN1Dict([
        ('x', _Node_XY_24b_x),
        ('y', _Node_XY_24b_y),
        ])
    Node_XY_24b._ext = None
    
    #-----< Node-XY-26b >-----#
    Node_XY_26b = SEQ(name='Node-XY-26b', mode=MODE_TYPE)
    _Node_XY_26b_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B13')))
    _Node_XY_26b_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B13')))
    Node_XY_26b._cont = ASN1Dict([
        ('x', _Node_XY_26b_x),
        ('y', _Node_XY_26b_y),
        ])
    Node_XY_26b._ext = None
    
    #-----< Node-XY-28b >-----#
    Node_XY_28b = SEQ(name='Node-XY-28b', mode=MODE_TYPE)
    _Node_XY_28b_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B14')))
    _Node_XY_28b_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B14')))
    Node_XY_28b._cont = ASN1Dict([
        ('x', _Node_XY_28b_x),
        ('y', _Node_XY_28b_y),
        ])
    Node_XY_28b._ext = None
    
    #-----< Node-XY-32b >-----#
    Node_XY_32b = SEQ(name='Node-XY-32b', mode=MODE_TYPE)
    _Node_XY_32b_x = INT(name='x', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B16')))
    _Node_XY_32b_y = INT(name='y', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B16')))
    Node_XY_32b._cont = ASN1Dict([
        ('x', _Node_XY_32b_x),
        ('y', _Node_XY_32b_y),
        ])
    Node_XY_32b._ext = None
    
    #-----< NodeAttributeLLList >-----#
    NodeAttributeLLList = SEQ_OF(name='NodeAttributeLLList', mode=MODE_TYPE)
    _NodeAttributeLLList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'NodeAttributeLL')))
    NodeAttributeLLList._cont = _NodeAttributeLLList__item_
    NodeAttributeLLList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< NodeAttributeSetLL >-----#
    NodeAttributeSetLL = SEQ(name='NodeAttributeSetLL', mode=MODE_TYPE)
    _NodeAttributeSetLL_localNode = SEQ_OF(name='localNode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NodeAttributeLLList')), opt=True)
    _NodeAttributeSetLL_disabled = SEQ_OF(name='disabled', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SegmentAttributeLLList')), opt=True)
    _NodeAttributeSetLL_enabled = SEQ_OF(name='enabled', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SegmentAttributeLLList')), opt=True)
    _NodeAttributeSetLL_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneDataAttributeList')), opt=True)
    _NodeAttributeSetLL_dWidth = INT(name='dWidth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')), opt=True)
    _NodeAttributeSetLL_dElevation = INT(name='dElevation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')), opt=True)
    _NodeAttributeSetLL_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __NodeAttributeSetLL_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___NodeAttributeSetLL_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____NodeAttributeSetLL_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____NodeAttributeSetLL_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___NodeAttributeSetLL_regional__item__regionId._const_tab = ____NodeAttributeSetLL_regional__item__regionId_tab
    ___NodeAttributeSetLL_regional__item__regionId._const_tab_at = None
    ___NodeAttributeSetLL_regional__item__regionId._const_tab_id = 'id'
    ___NodeAttributeSetLL_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___NodeAttributeSetLL_regional__item__regExtValue._const_tab = ____NodeAttributeSetLL_regional__item__regionId_tab
    ___NodeAttributeSetLL_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___NodeAttributeSetLL_regional__item__regExtValue._const_tab_id = 'Type'
    __NodeAttributeSetLL_regional__item_._cont = ASN1Dict([
        ('regionId', ___NodeAttributeSetLL_regional__item__regionId),
        ('regExtValue', ___NodeAttributeSetLL_regional__item__regExtValue),
        ])
    __NodeAttributeSetLL_regional__item_._ext = None
    _NodeAttributeSetLL_regional._cont = __NodeAttributeSetLL_regional__item_
    _NodeAttributeSetLL_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    NodeAttributeSetLL._cont = ASN1Dict([
        ('localNode', _NodeAttributeSetLL_localNode),
        ('disabled', _NodeAttributeSetLL_disabled),
        ('enabled', _NodeAttributeSetLL_enabled),
        ('data', _NodeAttributeSetLL_data),
        ('dWidth', _NodeAttributeSetLL_dWidth),
        ('dElevation', _NodeAttributeSetLL_dElevation),
        ('regional', _NodeAttributeSetLL_regional),
        ])
    NodeAttributeSetLL._ext = []
    
    #-----< NodeAttributeSetXY >-----#
    NodeAttributeSetXY = SEQ(name='NodeAttributeSetXY', mode=MODE_TYPE)
    _NodeAttributeSetXY_localNode = SEQ_OF(name='localNode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NodeAttributeXYList')), opt=True)
    _NodeAttributeSetXY_disabled = SEQ_OF(name='disabled', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SegmentAttributeXYList')), opt=True)
    _NodeAttributeSetXY_enabled = SEQ_OF(name='enabled', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SegmentAttributeXYList')), opt=True)
    _NodeAttributeSetXY_data = SEQ_OF(name='data', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneDataAttributeList')), opt=True)
    _NodeAttributeSetXY_dWidth = INT(name='dWidth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')), opt=True)
    _NodeAttributeSetXY_dElevation = INT(name='dElevation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B10')), opt=True)
    _NodeAttributeSetXY_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __NodeAttributeSetXY_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___NodeAttributeSetXY_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____NodeAttributeSetXY_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____NodeAttributeSetXY_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___NodeAttributeSetXY_regional__item__regionId._const_tab = ____NodeAttributeSetXY_regional__item__regionId_tab
    ___NodeAttributeSetXY_regional__item__regionId._const_tab_at = None
    ___NodeAttributeSetXY_regional__item__regionId._const_tab_id = 'id'
    ___NodeAttributeSetXY_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___NodeAttributeSetXY_regional__item__regExtValue._const_tab = ____NodeAttributeSetXY_regional__item__regionId_tab
    ___NodeAttributeSetXY_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___NodeAttributeSetXY_regional__item__regExtValue._const_tab_id = 'Type'
    __NodeAttributeSetXY_regional__item_._cont = ASN1Dict([
        ('regionId', ___NodeAttributeSetXY_regional__item__regionId),
        ('regExtValue', ___NodeAttributeSetXY_regional__item__regExtValue),
        ])
    __NodeAttributeSetXY_regional__item_._ext = None
    _NodeAttributeSetXY_regional._cont = __NodeAttributeSetXY_regional__item_
    _NodeAttributeSetXY_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    NodeAttributeSetXY._cont = ASN1Dict([
        ('localNode', _NodeAttributeSetXY_localNode),
        ('disabled', _NodeAttributeSetXY_disabled),
        ('enabled', _NodeAttributeSetXY_enabled),
        ('data', _NodeAttributeSetXY_data),
        ('dWidth', _NodeAttributeSetXY_dWidth),
        ('dElevation', _NodeAttributeSetXY_dElevation),
        ('regional', _NodeAttributeSetXY_regional),
        ])
    NodeAttributeSetXY._ext = []
    
    #-----< NodeAttributeXYList >-----#
    NodeAttributeXYList = SEQ_OF(name='NodeAttributeXYList', mode=MODE_TYPE)
    _NodeAttributeXYList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'NodeAttributeXY')))
    NodeAttributeXYList._cont = _NodeAttributeXYList__item_
    NodeAttributeXYList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< NodeListLL >-----#
    NodeListLL = CHOICE(name='NodeListLL', mode=MODE_TYPE)
    _NodeListLL_nodes = SEQ_OF(name='nodes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NodeSetLL')))
    NodeListLL._cont = ASN1Dict([
        ('nodes', _NodeListLL_nodes),
        ])
    NodeListLL._ext = []
    
    #-----< NodeListXY >-----#
    NodeListXY = CHOICE(name='NodeListXY', mode=MODE_TYPE)
    _NodeListXY_nodes = SEQ_OF(name='nodes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NodeSetXY')))
    _NodeListXY_computed = SEQ(name='computed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ComputedLane')))
    NodeListXY._cont = ASN1Dict([
        ('nodes', _NodeListXY_nodes),
        ('computed', _NodeListXY_computed),
        ])
    NodeListXY._ext = []
    
    #-----< NodeLL >-----#
    NodeLL = SEQ(name='NodeLL', mode=MODE_TYPE)
    _NodeLL_delta = CHOICE(name='delta', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeOffsetPointLL')))
    _NodeLL_attributes = SEQ(name='attributes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NodeAttributeSetLL')), opt=True)
    NodeLL._cont = ASN1Dict([
        ('delta', _NodeLL_delta),
        ('attributes', _NodeLL_attributes),
        ])
    NodeLL._ext = []
    
    #-----< NodeOffsetPointLL >-----#
    NodeOffsetPointLL = CHOICE(name='NodeOffsetPointLL', mode=MODE_TYPE)
    _NodeOffsetPointLL_node_LL1 = SEQ(name='node-LL1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LL-24B')))
    _NodeOffsetPointLL_node_LL2 = SEQ(name='node-LL2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LL-28B')))
    _NodeOffsetPointLL_node_LL3 = SEQ(name='node-LL3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LL-32B')))
    _NodeOffsetPointLL_node_LL4 = SEQ(name='node-LL4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LL-36B')))
    _NodeOffsetPointLL_node_LL5 = SEQ(name='node-LL5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LL-44B')))
    _NodeOffsetPointLL_node_LL6 = SEQ(name='node-LL6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LL-48B')))
    _NodeOffsetPointLL_node_LatLon = SEQ(name='node-LatLon', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LLmD-64b')))
    _NodeOffsetPointLL_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    __NodeOffsetPointLL_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___NodeOffsetPointLL_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___NodeOffsetPointLL_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __NodeOffsetPointLL_regional_regionId._const_tab = ___NodeOffsetPointLL_regional_regionId_tab
    __NodeOffsetPointLL_regional_regionId._const_tab_at = None
    __NodeOffsetPointLL_regional_regionId._const_tab_id = 'id'
    __NodeOffsetPointLL_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __NodeOffsetPointLL_regional_regExtValue._const_tab = ___NodeOffsetPointLL_regional_regionId_tab
    __NodeOffsetPointLL_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __NodeOffsetPointLL_regional_regExtValue._const_tab_id = 'Type'
    _NodeOffsetPointLL_regional._cont = ASN1Dict([
        ('regionId', __NodeOffsetPointLL_regional_regionId),
        ('regExtValue', __NodeOffsetPointLL_regional_regExtValue),
        ])
    _NodeOffsetPointLL_regional._ext = None
    NodeOffsetPointLL._cont = ASN1Dict([
        ('node-LL1', _NodeOffsetPointLL_node_LL1),
        ('node-LL2', _NodeOffsetPointLL_node_LL2),
        ('node-LL3', _NodeOffsetPointLL_node_LL3),
        ('node-LL4', _NodeOffsetPointLL_node_LL4),
        ('node-LL5', _NodeOffsetPointLL_node_LL5),
        ('node-LL6', _NodeOffsetPointLL_node_LL6),
        ('node-LatLon', _NodeOffsetPointLL_node_LatLon),
        ('regional', _NodeOffsetPointLL_regional),
        ])
    NodeOffsetPointLL._ext = None
    
    #-----< NodeOffsetPointXY >-----#
    NodeOffsetPointXY = CHOICE(name='NodeOffsetPointXY', mode=MODE_TYPE)
    _NodeOffsetPointXY_node_XY1 = SEQ(name='node-XY1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-20b')))
    _NodeOffsetPointXY_node_XY2 = SEQ(name='node-XY2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-22b')))
    _NodeOffsetPointXY_node_XY3 = SEQ(name='node-XY3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-24b')))
    _NodeOffsetPointXY_node_XY4 = SEQ(name='node-XY4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-26b')))
    _NodeOffsetPointXY_node_XY5 = SEQ(name='node-XY5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-28b')))
    _NodeOffsetPointXY_node_XY6 = SEQ(name='node-XY6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-32b')))
    _NodeOffsetPointXY_node_LatLon = SEQ(name='node-LatLon', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-LLmD-64b')))
    _NodeOffsetPointXY_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    __NodeOffsetPointXY_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___NodeOffsetPointXY_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____NodeOffsetPointXY_regional_regionId_tab_val_Type_0 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'NodeOffsetPointXY-addGrpB')))
    ___NodeOffsetPointXY_regional_regionId_tab._val = ASN1Set(rv=[dict([('Type', ____NodeOffsetPointXY_regional_regionId_tab_val_Type_0), ('id', 2)])], rr=[], ev=None, er=[])
    __NodeOffsetPointXY_regional_regionId._const_tab = ___NodeOffsetPointXY_regional_regionId_tab
    __NodeOffsetPointXY_regional_regionId._const_tab_at = None
    __NodeOffsetPointXY_regional_regionId._const_tab_id = 'id'
    __NodeOffsetPointXY_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __NodeOffsetPointXY_regional_regExtValue._const_tab = ___NodeOffsetPointXY_regional_regionId_tab
    __NodeOffsetPointXY_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __NodeOffsetPointXY_regional_regExtValue._const_tab_id = 'Type'
    _NodeOffsetPointXY_regional._cont = ASN1Dict([
        ('regionId', __NodeOffsetPointXY_regional_regionId),
        ('regExtValue', __NodeOffsetPointXY_regional_regExtValue),
        ])
    _NodeOffsetPointXY_regional._ext = None
    NodeOffsetPointXY._cont = ASN1Dict([
        ('node-XY1', _NodeOffsetPointXY_node_XY1),
        ('node-XY2', _NodeOffsetPointXY_node_XY2),
        ('node-XY3', _NodeOffsetPointXY_node_XY3),
        ('node-XY4', _NodeOffsetPointXY_node_XY4),
        ('node-XY5', _NodeOffsetPointXY_node_XY5),
        ('node-XY6', _NodeOffsetPointXY_node_XY6),
        ('node-LatLon', _NodeOffsetPointXY_node_LatLon),
        ('regional', _NodeOffsetPointXY_regional),
        ])
    NodeOffsetPointXY._ext = None
    
    #-----< NodeSetLL >-----#
    NodeSetLL = SEQ_OF(name='NodeSetLL', mode=MODE_TYPE)
    _NodeSetLL__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'NodeLL')))
    NodeSetLL._cont = _NodeSetLL__item_
    NodeSetLL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=63)], ev=None, er=[])
    
    #-----< NodeSetXY >-----#
    NodeSetXY = SEQ_OF(name='NodeSetXY', mode=MODE_TYPE)
    _NodeSetXY__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'NodeXY')))
    NodeSetXY._cont = _NodeSetXY__item_
    NodeSetXY._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=63)], ev=None, er=[])
    
    #-----< NodeXY >-----#
    NodeXY = SEQ(name='NodeXY', mode=MODE_TYPE)
    _NodeXY_delta = CHOICE(name='delta', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeOffsetPointXY')))
    _NodeXY_attributes = SEQ(name='attributes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'NodeAttributeSetXY')), opt=True)
    NodeXY._cont = ASN1Dict([
        ('delta', _NodeXY_delta),
        ('attributes', _NodeXY_attributes),
        ])
    NodeXY._ext = []
    
    #-----< ObstacleDetection >-----#
    ObstacleDetection = SEQ(name='ObstacleDetection', mode=MODE_TYPE)
    _ObstacleDetection_obDist = INT(name='obDist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ObstacleDistance')))
    _ObstacleDetection_obDirect = INT(name='obDirect', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ObstacleDirection')))
    _ObstacleDetection_description = INT(name='description', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')), opt=True)
    _ObstacleDetection_description._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=523, ub=541)], ev=None, er=[])
    _ObstacleDetection_locationDetails = ENUM(name='locationDetails', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'GenericLocations')), opt=True)
    _ObstacleDetection_dateTime = SEQ(name='dateTime', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDateTime')))
    _ObstacleDetection_vertEvent = BIT_STR(name='vertEvent', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VerticalAccelerationThreshold')), opt=True)
    ObstacleDetection._cont = ASN1Dict([
        ('obDist', _ObstacleDetection_obDist),
        ('obDirect', _ObstacleDetection_obDirect),
        ('description', _ObstacleDetection_description),
        ('locationDetails', _ObstacleDetection_locationDetails),
        ('dateTime', _ObstacleDetection_dateTime),
        ('vertEvent', _ObstacleDetection_vertEvent),
        ])
    ObstacleDetection._ext = []
    
    #-----< OffsetSystem >-----#
    OffsetSystem = SEQ(name='OffsetSystem', mode=MODE_TYPE)
    _OffsetSystem_scale = INT(name='scale', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Zoom')), opt=True)
    _OffsetSystem_offset = CHOICE(name='offset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __OffsetSystem_offset_xy = CHOICE(name='xy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeListXY')))
    __OffsetSystem_offset_ll = CHOICE(name='ll', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeListLL')))
    _OffsetSystem_offset._cont = ASN1Dict([
        ('xy', __OffsetSystem_offset_xy),
        ('ll', __OffsetSystem_offset_ll),
        ])
    _OffsetSystem_offset._ext = None
    OffsetSystem._cont = ASN1Dict([
        ('scale', _OffsetSystem_scale),
        ('offset', _OffsetSystem_offset),
        ])
    OffsetSystem._ext = None
    
    #-----< OverlayLaneList >-----#
    OverlayLaneList = SEQ_OF(name='OverlayLaneList', mode=MODE_TYPE)
    _OverlayLaneList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'LaneID')))
    OverlayLaneList._cont = _OverlayLaneList__item_
    OverlayLaneList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< PathHistory >-----#
    PathHistory = SEQ(name='PathHistory', mode=MODE_TYPE)
    _PathHistory_initialPosition = SEQ(name='initialPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FullPositionVector')), opt=True)
    _PathHistory_currGNSSstatus = BIT_STR(name='currGNSSstatus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GNSSstatus')), opt=True)
    _PathHistory_crumbData = SEQ_OF(name='crumbData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathHistoryPointList')))
    PathHistory._cont = ASN1Dict([
        ('initialPosition', _PathHistory_initialPosition),
        ('currGNSSstatus', _PathHistory_currGNSSstatus),
        ('crumbData', _PathHistory_crumbData),
        ])
    PathHistory._ext = []
    
    #-----< PathHistoryPointList >-----#
    PathHistoryPointList = SEQ_OF(name='PathHistoryPointList', mode=MODE_TYPE)
    _PathHistoryPointList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'PathHistoryPoint')))
    PathHistoryPointList._cont = _PathHistoryPointList__item_
    PathHistoryPointList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    
    #-----< PathHistoryPoint >-----#
    PathHistoryPoint = SEQ(name='PathHistoryPoint', mode=MODE_TYPE)
    _PathHistoryPoint_latOffset = INT(name='latOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B18')))
    _PathHistoryPoint_lonOffset = INT(name='lonOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B18')))
    _PathHistoryPoint_elevationOffset = INT(name='elevationOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B12')))
    _PathHistoryPoint_timeOffset = INT(name='timeOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeOffset')))
    _PathHistoryPoint_speed = INT(name='speed', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Speed')), opt=True)
    _PathHistoryPoint_posAccuracy = SEQ(name='posAccuracy', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionalAccuracy')), opt=True)
    _PathHistoryPoint_heading = INT(name='heading', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'CoarseHeading')), opt=True)
    PathHistoryPoint._cont = ASN1Dict([
        ('latOffset', _PathHistoryPoint_latOffset),
        ('lonOffset', _PathHistoryPoint_lonOffset),
        ('elevationOffset', _PathHistoryPoint_elevationOffset),
        ('timeOffset', _PathHistoryPoint_timeOffset),
        ('speed', _PathHistoryPoint_speed),
        ('posAccuracy', _PathHistoryPoint_posAccuracy),
        ('heading', _PathHistoryPoint_heading),
        ])
    PathHistoryPoint._ext = []
    
    #-----< PathPrediction >-----#
    PathPrediction = SEQ(name='PathPrediction', mode=MODE_TYPE)
    _PathPrediction_radiusOfCurve = INT(name='radiusOfCurve', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RadiusOfCurvature')))
    _PathPrediction_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Confidence')))
    PathPrediction._cont = ASN1Dict([
        ('radiusOfCurve', _PathPrediction_radiusOfCurve),
        ('confidence', _PathPrediction_confidence),
        ])
    PathPrediction._ext = []
    
    #-----< PivotPointDescription >-----#
    PivotPointDescription = SEQ(name='PivotPointDescription', mode=MODE_TYPE)
    _PivotPointDescription_pivotOffset = INT(name='pivotOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B11')))
    _PivotPointDescription_pivotAngle = INT(name='pivotAngle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Angle')))
    _PivotPointDescription_pivots = BOOL(name='pivots', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PivotingAllowed')))
    PivotPointDescription._cont = ASN1Dict([
        ('pivotOffset', _PivotPointDescription_pivotOffset),
        ('pivotAngle', _PivotPointDescription_pivotAngle),
        ('pivots', _PivotPointDescription_pivots),
        ])
    PivotPointDescription._ext = []
    
    #-----< Position3D >-----#
    Position3D = SEQ(name='Position3D', mode=MODE_TYPE)
    _Position3D_lat = INT(name='lat', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Latitude')))
    _Position3D_long = INT(name='long', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Longitude')))
    _Position3D_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Elevation')), opt=True)
    _Position3D_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Position3D_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___Position3D_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____Position3D_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____Position3D_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'Position3D-addGrpB')))
    _____Position3D_regional__item__regionId_tab_val_Type_1 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'Position3D-addGrpC')))
    ____Position3D_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____Position3D_regional__item__regionId_tab_val_Type_0), ('id', 2)]), dict([('Type', _____Position3D_regional__item__regionId_tab_val_Type_1), ('id', 3)])], rr=[], ev=None, er=[])
    ___Position3D_regional__item__regionId._const_tab = ____Position3D_regional__item__regionId_tab
    ___Position3D_regional__item__regionId._const_tab_at = None
    ___Position3D_regional__item__regionId._const_tab_id = 'id'
    ___Position3D_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___Position3D_regional__item__regExtValue._const_tab = ____Position3D_regional__item__regionId_tab
    ___Position3D_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___Position3D_regional__item__regExtValue._const_tab_id = 'Type'
    __Position3D_regional__item_._cont = ASN1Dict([
        ('regionId', ___Position3D_regional__item__regionId),
        ('regExtValue', ___Position3D_regional__item__regExtValue),
        ])
    __Position3D_regional__item_._ext = None
    _Position3D_regional._cont = __Position3D_regional__item_
    _Position3D_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    Position3D._cont = ASN1Dict([
        ('lat', _Position3D_lat),
        ('long', _Position3D_long),
        ('elevation', _Position3D_elevation),
        ('regional', _Position3D_regional),
        ])
    Position3D._ext = []
    
    #-----< PositionalAccuracy >-----#
    PositionalAccuracy = SEQ(name='PositionalAccuracy', mode=MODE_TYPE)
    _PositionalAccuracy_semiMajor = INT(name='semiMajor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SemiMajorAxisAccuracy')))
    _PositionalAccuracy_semiMinor = INT(name='semiMinor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SemiMinorAxisAccuracy')))
    _PositionalAccuracy_orientation = INT(name='orientation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SemiMajorAxisOrientation')))
    PositionalAccuracy._cont = ASN1Dict([
        ('semiMajor', _PositionalAccuracy_semiMajor),
        ('semiMinor', _PositionalAccuracy_semiMinor),
        ('orientation', _PositionalAccuracy_orientation),
        ])
    PositionalAccuracy._ext = None
    
    #-----< PositionConfidenceSet >-----#
    PositionConfidenceSet = SEQ(name='PositionConfidenceSet', mode=MODE_TYPE)
    _PositionConfidenceSet_pos = ENUM(name='pos', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PositionConfidence')))
    _PositionConfidenceSet_elevation = ENUM(name='elevation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ElevationConfidence')))
    PositionConfidenceSet._cont = ASN1Dict([
        ('pos', _PositionConfidenceSet_pos),
        ('elevation', _PositionConfidenceSet_elevation),
        ])
    PositionConfidenceSet._ext = None
    
    #-----< PreemptPriorityList >-----#
    PreemptPriorityList = SEQ_OF(name='PreemptPriorityList', mode=MODE_TYPE)
    _PreemptPriorityList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalControlZone')))
    PreemptPriorityList._cont = _PreemptPriorityList__item_
    PreemptPriorityList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SignalControlZone >-----#
    SignalControlZone = SEQ(name='SignalControlZone', mode=MODE_TYPE)
    _SignalControlZone_zone = SEQ(name='zone', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    __SignalControlZone_zone_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___SignalControlZone_zone_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___SignalControlZone_zone_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __SignalControlZone_zone_regionId._const_tab = ___SignalControlZone_zone_regionId_tab
    __SignalControlZone_zone_regionId._const_tab_at = None
    __SignalControlZone_zone_regionId._const_tab_id = 'id'
    __SignalControlZone_zone_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __SignalControlZone_zone_regExtValue._const_tab = ___SignalControlZone_zone_regionId_tab
    __SignalControlZone_zone_regExtValue._const_tab_at = ('..', 'regionId')
    __SignalControlZone_zone_regExtValue._const_tab_id = 'Type'
    _SignalControlZone_zone._cont = ASN1Dict([
        ('regionId', __SignalControlZone_zone_regionId),
        ('regExtValue', __SignalControlZone_zone_regExtValue),
        ])
    _SignalControlZone_zone._ext = None
    SignalControlZone._cont = ASN1Dict([
        ('zone', _SignalControlZone_zone),
        ])
    SignalControlZone._ext = []
    
    #-----< PrivilegedEvents >-----#
    PrivilegedEvents = SEQ(name='PrivilegedEvents', mode=MODE_TYPE)
    _PrivilegedEvents_sspRights = INT(name='sspRights', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _PrivilegedEvents_event = BIT_STR(name='event', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PrivilegedEventFlags')))
    PrivilegedEvents._cont = ASN1Dict([
        ('sspRights', _PrivilegedEvents_sspRights),
        ('event', _PrivilegedEvents_event),
        ])
    PrivilegedEvents._ext = []
    
    #-----< PropelledInformation >-----#
    PropelledInformation = CHOICE(name='PropelledInformation', mode=MODE_TYPE)
    _PropelledInformation_human = ENUM(name='human', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HumanPropelledType')))
    _PropelledInformation_animal = ENUM(name='animal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AnimalPropelledType')))
    _PropelledInformation_motor = ENUM(name='motor', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MotorizedPropelledType')))
    PropelledInformation._cont = ASN1Dict([
        ('human', _PropelledInformation_human),
        ('animal', _PropelledInformation_animal),
        ('motor', _PropelledInformation_motor),
        ])
    PropelledInformation._ext = []
    
    #-----< RegionList >-----#
    RegionList = SEQ_OF(name='RegionList', mode=MODE_TYPE)
    _RegionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionOffsets')))
    RegionList._cont = _RegionList__item_
    RegionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< RegionOffsets >-----#
    RegionOffsets = SEQ(name='RegionOffsets', mode=MODE_TYPE)
    _RegionOffsets_xOffset = INT(name='xOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B16')))
    _RegionOffsets_yOffset = INT(name='yOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B16')))
    _RegionOffsets_zOffset = INT(name='zOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'OffsetLL-B16')), opt=True)
    RegionOffsets._cont = ASN1Dict([
        ('xOffset', _RegionOffsets_xOffset),
        ('yOffset', _RegionOffsets_yOffset),
        ('zOffset', _RegionOffsets_zOffset),
        ])
    RegionOffsets._ext = None
    
    #-----< RegionPointSet >-----#
    RegionPointSet = SEQ(name='RegionPointSet', mode=MODE_TYPE)
    _RegionPointSet_anchor = SEQ(name='anchor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')), opt=True)
    _RegionPointSet_scale = INT(name='scale', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Zoom')), opt=True)
    _RegionPointSet_nodeList = SEQ_OF(name='nodeList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionList')))
    RegionPointSet._cont = ASN1Dict([
        ('anchor', _RegionPointSet_anchor),
        ('scale', _RegionPointSet_scale),
        ('nodeList', _RegionPointSet_nodeList),
        ])
    RegionPointSet._ext = []
    
    #-----< RegulatorySpeedLimit >-----#
    RegulatorySpeedLimit = SEQ(name='RegulatorySpeedLimit', mode=MODE_TYPE)
    _RegulatorySpeedLimit_type = ENUM(name='type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedLimitType')))
    _RegulatorySpeedLimit_speed = INT(name='speed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Velocity')))
    RegulatorySpeedLimit._cont = ASN1Dict([
        ('type', _RegulatorySpeedLimit_type),
        ('speed', _RegulatorySpeedLimit_speed),
        ])
    RegulatorySpeedLimit._ext = None
    
    #-----< RequestedItemList >-----#
    RequestedItemList = SEQ_OF(name='RequestedItemList', mode=MODE_TYPE)
    _RequestedItemList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RequestedItem')))
    RequestedItemList._cont = _RequestedItemList__item_
    RequestedItemList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< RequestorDescription >-----#
    RequestorDescription = SEQ(name='RequestorDescription', mode=MODE_TYPE)
    _RequestorDescription_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleID')))
    _RequestorDescription_type = SEQ(name='type', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestorType')), opt=True)
    _RequestorDescription_position = SEQ(name='position', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestorPositionVector')), opt=True)
    _RequestorDescription_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _RequestorDescription_routeName = STR_IA5(name='routeName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _RequestorDescription_transitStatus = BIT_STR(name='transitStatus', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TransitVehicleStatus')), opt=True)
    _RequestorDescription_transitOccupancy = ENUM(name='transitOccupancy', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TransitVehicleOccupancy')), opt=True)
    _RequestorDescription_transitSchedule = INT(name='transitSchedule', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DeltaTime')), opt=True)
    _RequestorDescription_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RequestorDescription_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___RequestorDescription_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____RequestorDescription_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____RequestorDescription_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___RequestorDescription_regional__item__regionId._const_tab = ____RequestorDescription_regional__item__regionId_tab
    ___RequestorDescription_regional__item__regionId._const_tab_at = None
    ___RequestorDescription_regional__item__regionId._const_tab_id = 'id'
    ___RequestorDescription_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___RequestorDescription_regional__item__regExtValue._const_tab = ____RequestorDescription_regional__item__regionId_tab
    ___RequestorDescription_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___RequestorDescription_regional__item__regExtValue._const_tab_id = 'Type'
    __RequestorDescription_regional__item_._cont = ASN1Dict([
        ('regionId', ___RequestorDescription_regional__item__regionId),
        ('regExtValue', ___RequestorDescription_regional__item__regExtValue),
        ])
    __RequestorDescription_regional__item_._ext = None
    _RequestorDescription_regional._cont = __RequestorDescription_regional__item_
    _RequestorDescription_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    RequestorDescription._cont = ASN1Dict([
        ('id', _RequestorDescription_id),
        ('type', _RequestorDescription_type),
        ('position', _RequestorDescription_position),
        ('name', _RequestorDescription_name),
        ('routeName', _RequestorDescription_routeName),
        ('transitStatus', _RequestorDescription_transitStatus),
        ('transitOccupancy', _RequestorDescription_transitOccupancy),
        ('transitSchedule', _RequestorDescription_transitSchedule),
        ('regional', _RequestorDescription_regional),
        ])
    RequestorDescription._ext = []
    
    #-----< RequestorPositionVector >-----#
    RequestorPositionVector = SEQ(name='RequestorPositionVector', mode=MODE_TYPE)
    _RequestorPositionVector_position = SEQ(name='position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')))
    _RequestorPositionVector_heading = INT(name='heading', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Angle')), opt=True)
    _RequestorPositionVector_speed = SEQ(name='speed', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TransmissionAndSpeed')), opt=True)
    RequestorPositionVector._cont = ASN1Dict([
        ('position', _RequestorPositionVector_position),
        ('heading', _RequestorPositionVector_heading),
        ('speed', _RequestorPositionVector_speed),
        ])
    RequestorPositionVector._ext = []
    
    #-----< RequestorType >-----#
    RequestorType = SEQ(name='RequestorType', mode=MODE_TYPE)
    _RequestorType_role = ENUM(name='role', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BasicVehicleRole')))
    _RequestorType_subrole = ENUM(name='subrole', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestSubRole')), opt=True)
    _RequestorType_request = ENUM(name='request', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestImportanceLevel')), opt=True)
    _RequestorType_iso3883 = INT(name='iso3883', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Iso3833VehicleType')), opt=True)
    _RequestorType_hpmsType = ENUM(name='hpmsType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleType')), opt=True)
    _RequestorType_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')), opt=True)
    __RequestorType_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___RequestorType_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___RequestorType_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __RequestorType_regional_regionId._const_tab = ___RequestorType_regional_regionId_tab
    __RequestorType_regional_regionId._const_tab_at = None
    __RequestorType_regional_regionId._const_tab_id = 'id'
    __RequestorType_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __RequestorType_regional_regExtValue._const_tab = ___RequestorType_regional_regionId_tab
    __RequestorType_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __RequestorType_regional_regExtValue._const_tab_id = 'Type'
    _RequestorType_regional._cont = ASN1Dict([
        ('regionId', __RequestorType_regional_regionId),
        ('regExtValue', __RequestorType_regional_regExtValue),
        ])
    _RequestorType_regional._ext = None
    RequestorType._cont = ASN1Dict([
        ('role', _RequestorType_role),
        ('subrole', _RequestorType_subrole),
        ('request', _RequestorType_request),
        ('iso3883', _RequestorType_iso3883),
        ('hpmsType', _RequestorType_hpmsType),
        ('regional', _RequestorType_regional),
        ])
    RequestorType._ext = []
    
    #-----< RestrictionClassAssignment >-----#
    RestrictionClassAssignment = SEQ(name='RestrictionClassAssignment', mode=MODE_TYPE)
    _RestrictionClassAssignment_id = INT(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RestrictionClassID')))
    _RestrictionClassAssignment_users = SEQ_OF(name='users', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RestrictionUserTypeList')))
    RestrictionClassAssignment._cont = ASN1Dict([
        ('id', _RestrictionClassAssignment_id),
        ('users', _RestrictionClassAssignment_users),
        ])
    RestrictionClassAssignment._ext = None
    
    #-----< RestrictionClassList >-----#
    RestrictionClassList = SEQ_OF(name='RestrictionClassList', mode=MODE_TYPE)
    _RestrictionClassList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RestrictionClassAssignment')))
    RestrictionClassList._cont = _RestrictionClassList__item_
    RestrictionClassList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=254)], ev=None, er=[])
    
    #-----< RestrictionUserTypeList >-----#
    RestrictionUserTypeList = SEQ_OF(name='RestrictionUserTypeList', mode=MODE_TYPE)
    _RestrictionUserTypeList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RestrictionUserType')))
    RestrictionUserTypeList._cont = _RestrictionUserTypeList__item_
    RestrictionUserTypeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< RestrictionUserType >-----#
    RestrictionUserType = CHOICE(name='RestrictionUserType', mode=MODE_TYPE)
    _RestrictionUserType_basicType = ENUM(name='basicType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RestrictionAppliesTo')))
    _RestrictionUserType_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RestrictionUserType_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___RestrictionUserType_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____RestrictionUserType_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _____RestrictionUserType_regional__item__regionId_tab_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'RestrictionUserType-addGrpC')))
    ____RestrictionUserType_regional__item__regionId_tab._val = ASN1Set(rv=[dict([('Type', _____RestrictionUserType_regional__item__regionId_tab_val_Type_0), ('id', 3)])], rr=[], ev=None, er=[])
    ___RestrictionUserType_regional__item__regionId._const_tab = ____RestrictionUserType_regional__item__regionId_tab
    ___RestrictionUserType_regional__item__regionId._const_tab_at = None
    ___RestrictionUserType_regional__item__regionId._const_tab_id = 'id'
    ___RestrictionUserType_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___RestrictionUserType_regional__item__regExtValue._const_tab = ____RestrictionUserType_regional__item__regionId_tab
    ___RestrictionUserType_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___RestrictionUserType_regional__item__regExtValue._const_tab_id = 'Type'
    __RestrictionUserType_regional__item_._cont = ASN1Dict([
        ('regionId', ___RestrictionUserType_regional__item__regionId),
        ('regExtValue', ___RestrictionUserType_regional__item__regExtValue),
        ])
    __RestrictionUserType_regional__item_._ext = None
    _RestrictionUserType_regional._cont = __RestrictionUserType_regional__item_
    _RestrictionUserType_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    RestrictionUserType._cont = ASN1Dict([
        ('basicType', _RestrictionUserType_basicType),
        ('regional', _RestrictionUserType_regional),
        ])
    RestrictionUserType._ext = []
    
    #-----< RoadLaneSetList >-----#
    RoadLaneSetList = SEQ_OF(name='RoadLaneSetList', mode=MODE_TYPE)
    _RoadLaneSetList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'GenericLane')))
    RoadLaneSetList._cont = _RoadLaneSetList__item_
    RoadLaneSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< RoadSegmentList >-----#
    RoadSegmentList = SEQ_OF(name='RoadSegmentList', mode=MODE_TYPE)
    _RoadSegmentList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RoadSegment')))
    RoadSegmentList._cont = _RoadSegmentList__item_
    RoadSegmentList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< RoadSegmentReferenceID >-----#
    RoadSegmentReferenceID = SEQ(name='RoadSegmentReferenceID', mode=MODE_TYPE)
    _RoadSegmentReferenceID_region = INT(name='region', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadRegulatorID')), opt=True)
    _RoadSegmentReferenceID_id = INT(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadSegmentID')))
    RoadSegmentReferenceID._cont = ASN1Dict([
        ('region', _RoadSegmentReferenceID_region),
        ('id', _RoadSegmentReferenceID_id),
        ])
    RoadSegmentReferenceID._ext = None
    
    #-----< RoadSegment >-----#
    RoadSegment = SEQ(name='RoadSegment', mode=MODE_TYPE)
    _RoadSegment_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _RoadSegment_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadSegmentReferenceID')))
    _RoadSegment_revision = INT(name='revision', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _RoadSegment_refPoint = SEQ(name='refPoint', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')))
    _RoadSegment_laneWidth = INT(name='laneWidth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneWidth')), opt=True)
    _RoadSegment_speedLimits = SEQ_OF(name='speedLimits', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedLimitList')), opt=True)
    _RoadSegment_roadLaneSet = SEQ_OF(name='roadLaneSet', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadLaneSetList')))
    _RoadSegment_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RoadSegment_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___RoadSegment_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____RoadSegment_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____RoadSegment_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___RoadSegment_regional__item__regionId._const_tab = ____RoadSegment_regional__item__regionId_tab
    ___RoadSegment_regional__item__regionId._const_tab_at = None
    ___RoadSegment_regional__item__regionId._const_tab_id = 'id'
    ___RoadSegment_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___RoadSegment_regional__item__regExtValue._const_tab = ____RoadSegment_regional__item__regionId_tab
    ___RoadSegment_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___RoadSegment_regional__item__regExtValue._const_tab_id = 'Type'
    __RoadSegment_regional__item_._cont = ASN1Dict([
        ('regionId', ___RoadSegment_regional__item__regionId),
        ('regExtValue', ___RoadSegment_regional__item__regExtValue),
        ])
    __RoadSegment_regional__item_._ext = None
    _RoadSegment_regional._cont = __RoadSegment_regional__item_
    _RoadSegment_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    RoadSegment._cont = ASN1Dict([
        ('name', _RoadSegment_name),
        ('id', _RoadSegment_id),
        ('revision', _RoadSegment_revision),
        ('refPoint', _RoadSegment_refPoint),
        ('laneWidth', _RoadSegment_laneWidth),
        ('speedLimits', _RoadSegment_speedLimits),
        ('roadLaneSet', _RoadSegment_roadLaneSet),
        ('regional', _RoadSegment_regional),
        ])
    RoadSegment._ext = []
    
    #-----< RoadSignID >-----#
    RoadSignID = SEQ(name='RoadSignID', mode=MODE_TYPE)
    _RoadSignID_position = SEQ(name='position', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')))
    _RoadSignID_viewAngle = BIT_STR(name='viewAngle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')))
    _RoadSignID_mutcdCode = ENUM(name='mutcdCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MUTCDCode')), opt=True)
    _RoadSignID_crc = OCT_STR(name='crc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCRC')), opt=True)
    RoadSignID._cont = ASN1Dict([
        ('position', _RoadSignID_position),
        ('viewAngle', _RoadSignID_viewAngle),
        ('mutcdCode', _RoadSignID_mutcdCode),
        ('crc', _RoadSignID_crc),
        ])
    RoadSignID._ext = None
    
    #-----< RTCMheader >-----#
    RTCMheader = SEQ(name='RTCMheader', mode=MODE_TYPE)
    _RTCMheader_status = BIT_STR(name='status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GNSSstatus')))
    _RTCMheader_offsetSet = SEQ(name='offsetSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AntennaOffsetSet')))
    RTCMheader._cont = ASN1Dict([
        ('status', _RTCMheader_status),
        ('offsetSet', _RTCMheader_offsetSet),
        ])
    RTCMheader._ext = None
    
    #-----< RTCMmessageList >-----#
    RTCMmessageList = SEQ_OF(name='RTCMmessageList', mode=MODE_TYPE)
    _RTCMmessageList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RTCMmessage')))
    RTCMmessageList._cont = _RTCMmessageList__item_
    RTCMmessageList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    #-----< RTCMPackage >-----#
    RTCMPackage = SEQ(name='RTCMPackage', mode=MODE_TYPE)
    _RTCMPackage_rtcmHeader = SEQ(name='rtcmHeader', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RTCMheader')), opt=True)
    _RTCMPackage_msgs = SEQ_OF(name='msgs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RTCMmessageList')))
    RTCMPackage._cont = ASN1Dict([
        ('rtcmHeader', _RTCMPackage_rtcmHeader),
        ('msgs', _RTCMPackage_msgs),
        ])
    RTCMPackage._ext = []
    
    #-----< Sample >-----#
    Sample = SEQ(name='Sample', mode=MODE_TYPE)
    _Sample_sampleStart = INT(name='sampleStart', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Sample_sampleStart._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _Sample_sampleEnd = INT(name='sampleEnd', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Sample_sampleEnd._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    Sample._cont = ASN1Dict([
        ('sampleStart', _Sample_sampleStart),
        ('sampleEnd', _Sample_sampleEnd),
        ])
    Sample._ext = None
    
    #-----< SegmentAttributeLLList >-----#
    SegmentAttributeLLList = SEQ_OF(name='SegmentAttributeLLList', mode=MODE_TYPE)
    _SegmentAttributeLLList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SegmentAttributeLL')))
    SegmentAttributeLLList._cont = _SegmentAttributeLLList__item_
    SegmentAttributeLLList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< SegmentAttributeXYList >-----#
    SegmentAttributeXYList = SEQ_OF(name='SegmentAttributeXYList', mode=MODE_TYPE)
    _SegmentAttributeXYList__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SegmentAttributeXY')))
    SegmentAttributeXYList._cont = _SegmentAttributeXYList__item_
    SegmentAttributeXYList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ShapePointSet >-----#
    ShapePointSet = SEQ(name='ShapePointSet', mode=MODE_TYPE)
    _ShapePointSet_anchor = SEQ(name='anchor', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Position3D')), opt=True)
    _ShapePointSet_laneWidth = INT(name='laneWidth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneWidth')), opt=True)
    _ShapePointSet_directionality = ENUM(name='directionality', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DirectionOfUse')), opt=True)
    _ShapePointSet_nodeList = CHOICE(name='nodeList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeListXY')))
    ShapePointSet._cont = ASN1Dict([
        ('anchor', _ShapePointSet_anchor),
        ('laneWidth', _ShapePointSet_laneWidth),
        ('directionality', _ShapePointSet_directionality),
        ('nodeList', _ShapePointSet_nodeList),
        ])
    ShapePointSet._ext = []
    
    #-----< SignalRequesterInfo >-----#
    SignalRequesterInfo = SEQ(name='SignalRequesterInfo', mode=MODE_TYPE)
    _SignalRequesterInfo_id = CHOICE(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleID')))
    _SignalRequesterInfo_request = INT(name='request', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestID')))
    _SignalRequesterInfo_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _SignalRequesterInfo_role = ENUM(name='role', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BasicVehicleRole')), opt=True)
    _SignalRequesterInfo_typeData = SEQ(name='typeData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestorType')), opt=True)
    SignalRequesterInfo._cont = ASN1Dict([
        ('id', _SignalRequesterInfo_id),
        ('request', _SignalRequesterInfo_request),
        ('sequenceNumber', _SignalRequesterInfo_sequenceNumber),
        ('role', _SignalRequesterInfo_role),
        ('typeData', _SignalRequesterInfo_typeData),
        ])
    SignalRequesterInfo._ext = []
    
    #-----< SignalRequestList >-----#
    SignalRequestList = SEQ_OF(name='SignalRequestList', mode=MODE_TYPE)
    _SignalRequestList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalRequestPackage')))
    SignalRequestList._cont = _SignalRequestList__item_
    SignalRequestList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SignalRequestPackage >-----#
    SignalRequestPackage = SEQ(name='SignalRequestPackage', mode=MODE_TYPE)
    _SignalRequestPackage_request = SEQ(name='request', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalRequest')))
    _SignalRequestPackage_minute = INT(name='minute', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _SignalRequestPackage_second = INT(name='second', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _SignalRequestPackage_duration = INT(name='duration', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _SignalRequestPackage_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SignalRequestPackage_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SignalRequestPackage_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SignalRequestPackage_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SignalRequestPackage_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SignalRequestPackage_regional__item__regionId._const_tab = ____SignalRequestPackage_regional__item__regionId_tab
    ___SignalRequestPackage_regional__item__regionId._const_tab_at = None
    ___SignalRequestPackage_regional__item__regionId._const_tab_id = 'id'
    ___SignalRequestPackage_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SignalRequestPackage_regional__item__regExtValue._const_tab = ____SignalRequestPackage_regional__item__regionId_tab
    ___SignalRequestPackage_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SignalRequestPackage_regional__item__regExtValue._const_tab_id = 'Type'
    __SignalRequestPackage_regional__item_._cont = ASN1Dict([
        ('regionId', ___SignalRequestPackage_regional__item__regionId),
        ('regExtValue', ___SignalRequestPackage_regional__item__regExtValue),
        ])
    __SignalRequestPackage_regional__item_._ext = None
    _SignalRequestPackage_regional._cont = __SignalRequestPackage_regional__item_
    _SignalRequestPackage_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SignalRequestPackage._cont = ASN1Dict([
        ('request', _SignalRequestPackage_request),
        ('minute', _SignalRequestPackage_minute),
        ('second', _SignalRequestPackage_second),
        ('duration', _SignalRequestPackage_duration),
        ('regional', _SignalRequestPackage_regional),
        ])
    SignalRequestPackage._ext = []
    
    #-----< SignalRequest >-----#
    SignalRequest = SEQ(name='SignalRequest', mode=MODE_TYPE)
    _SignalRequest_id = SEQ(name='id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionReferenceID')))
    _SignalRequest_requestID = INT(name='requestID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RequestID')))
    _SignalRequest_requestType = ENUM(name='requestType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PriorityRequestType')))
    _SignalRequest_inBoundLane = CHOICE(name='inBoundLane', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionAccessPoint')))
    _SignalRequest_outBoundLane = CHOICE(name='outBoundLane', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionAccessPoint')), opt=True)
    _SignalRequest_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SignalRequest_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SignalRequest_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SignalRequest_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SignalRequest_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SignalRequest_regional__item__regionId._const_tab = ____SignalRequest_regional__item__regionId_tab
    ___SignalRequest_regional__item__regionId._const_tab_at = None
    ___SignalRequest_regional__item__regionId._const_tab_id = 'id'
    ___SignalRequest_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SignalRequest_regional__item__regExtValue._const_tab = ____SignalRequest_regional__item__regionId_tab
    ___SignalRequest_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SignalRequest_regional__item__regExtValue._const_tab_id = 'Type'
    __SignalRequest_regional__item_._cont = ASN1Dict([
        ('regionId', ___SignalRequest_regional__item__regionId),
        ('regExtValue', ___SignalRequest_regional__item__regExtValue),
        ])
    __SignalRequest_regional__item_._ext = None
    _SignalRequest_regional._cont = __SignalRequest_regional__item_
    _SignalRequest_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SignalRequest._cont = ASN1Dict([
        ('id', _SignalRequest_id),
        ('requestID', _SignalRequest_requestID),
        ('requestType', _SignalRequest_requestType),
        ('inBoundLane', _SignalRequest_inBoundLane),
        ('outBoundLane', _SignalRequest_outBoundLane),
        ('regional', _SignalRequest_regional),
        ])
    SignalRequest._ext = []
    
    #-----< SignalStatusList >-----#
    SignalStatusList = SEQ_OF(name='SignalStatusList', mode=MODE_TYPE)
    _SignalStatusList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalStatus')))
    SignalStatusList._cont = _SignalStatusList__item_
    SignalStatusList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SignalStatusPackageList >-----#
    SignalStatusPackageList = SEQ_OF(name='SignalStatusPackageList', mode=MODE_TYPE)
    _SignalStatusPackageList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SignalStatusPackage')))
    SignalStatusPackageList._cont = _SignalStatusPackageList__item_
    SignalStatusPackageList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< SignalStatusPackage >-----#
    SignalStatusPackage = SEQ(name='SignalStatusPackage', mode=MODE_TYPE)
    _SignalStatusPackage_requester = SEQ(name='requester', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalRequesterInfo')), opt=True)
    _SignalStatusPackage_inboundOn = CHOICE(name='inboundOn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionAccessPoint')))
    _SignalStatusPackage_outboundOn = CHOICE(name='outboundOn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionAccessPoint')), opt=True)
    _SignalStatusPackage_minute = INT(name='minute', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')), opt=True)
    _SignalStatusPackage_second = INT(name='second', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _SignalStatusPackage_duration = INT(name='duration', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DSecond')), opt=True)
    _SignalStatusPackage_status = ENUM(name='status', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PrioritizationResponseStatus')))
    _SignalStatusPackage_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SignalStatusPackage_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SignalStatusPackage_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SignalStatusPackage_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SignalStatusPackage_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SignalStatusPackage_regional__item__regionId._const_tab = ____SignalStatusPackage_regional__item__regionId_tab
    ___SignalStatusPackage_regional__item__regionId._const_tab_at = None
    ___SignalStatusPackage_regional__item__regionId._const_tab_id = 'id'
    ___SignalStatusPackage_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SignalStatusPackage_regional__item__regExtValue._const_tab = ____SignalStatusPackage_regional__item__regionId_tab
    ___SignalStatusPackage_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SignalStatusPackage_regional__item__regExtValue._const_tab_id = 'Type'
    __SignalStatusPackage_regional__item_._cont = ASN1Dict([
        ('regionId', ___SignalStatusPackage_regional__item__regionId),
        ('regExtValue', ___SignalStatusPackage_regional__item__regExtValue),
        ])
    __SignalStatusPackage_regional__item_._ext = None
    _SignalStatusPackage_regional._cont = __SignalStatusPackage_regional__item_
    _SignalStatusPackage_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SignalStatusPackage._cont = ASN1Dict([
        ('requester', _SignalStatusPackage_requester),
        ('inboundOn', _SignalStatusPackage_inboundOn),
        ('outboundOn', _SignalStatusPackage_outboundOn),
        ('minute', _SignalStatusPackage_minute),
        ('second', _SignalStatusPackage_second),
        ('duration', _SignalStatusPackage_duration),
        ('status', _SignalStatusPackage_status),
        ('regional', _SignalStatusPackage_regional),
        ])
    SignalStatusPackage._ext = []
    
    #-----< SignalStatus >-----#
    SignalStatus = SEQ(name='SignalStatus', mode=MODE_TYPE)
    _SignalStatus_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MsgCount')))
    _SignalStatus_id = SEQ(name='id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IntersectionReferenceID')))
    _SignalStatus_sigStatus = SEQ_OF(name='sigStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalStatusPackageList')))
    _SignalStatus_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SignalStatus_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SignalStatus_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SignalStatus_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SignalStatus_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SignalStatus_regional__item__regionId._const_tab = ____SignalStatus_regional__item__regionId_tab
    ___SignalStatus_regional__item__regionId._const_tab_at = None
    ___SignalStatus_regional__item__regionId._const_tab_id = 'id'
    ___SignalStatus_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SignalStatus_regional__item__regExtValue._const_tab = ____SignalStatus_regional__item__regionId_tab
    ___SignalStatus_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SignalStatus_regional__item__regExtValue._const_tab_id = 'Type'
    __SignalStatus_regional__item_._cont = ASN1Dict([
        ('regionId', ___SignalStatus_regional__item__regionId),
        ('regExtValue', ___SignalStatus_regional__item__regExtValue),
        ])
    __SignalStatus_regional__item_._ext = None
    _SignalStatus_regional._cont = __SignalStatus_regional__item_
    _SignalStatus_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SignalStatus._cont = ASN1Dict([
        ('sequenceNumber', _SignalStatus_sequenceNumber),
        ('id', _SignalStatus_id),
        ('sigStatus', _SignalStatus_sigStatus),
        ('regional', _SignalStatus_regional),
        ])
    SignalStatus._ext = []
    
    #-----< SnapshotDistance >-----#
    SnapshotDistance = SEQ(name='SnapshotDistance', mode=MODE_TYPE)
    _SnapshotDistance_distance1 = INT(name='distance1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GrossDistance')))
    _SnapshotDistance_speed1 = INT(name='speed1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GrossSpeed')))
    _SnapshotDistance_distance2 = INT(name='distance2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GrossDistance')))
    _SnapshotDistance_speed2 = INT(name='speed2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GrossSpeed')))
    SnapshotDistance._cont = ASN1Dict([
        ('distance1', _SnapshotDistance_distance1),
        ('speed1', _SnapshotDistance_speed1),
        ('distance2', _SnapshotDistance_distance2),
        ('speed2', _SnapshotDistance_speed2),
        ])
    SnapshotDistance._ext = None
    
    #-----< Snapshot >-----#
    Snapshot = SEQ(name='Snapshot', mode=MODE_TYPE)
    _Snapshot_thePosition = SEQ(name='thePosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FullPositionVector')))
    _Snapshot_safetyExt = SEQ(name='safetyExt', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleSafetyExtensions')), opt=True)
    _Snapshot_dataSet = SEQ(name='dataSet', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleStatus')), opt=True)
    Snapshot._cont = ASN1Dict([
        ('thePosition', _Snapshot_thePosition),
        ('safetyExt', _Snapshot_safetyExt),
        ('dataSet', _Snapshot_dataSet),
        ])
    Snapshot._ext = []
    
    #-----< SnapshotTime >-----#
    SnapshotTime = SEQ(name='SnapshotTime', mode=MODE_TYPE)
    _SnapshotTime_speed1 = INT(name='speed1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GrossSpeed')))
    _SnapshotTime_time1 = INT(name='time1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SecondOfTime')))
    _SnapshotTime_speed2 = INT(name='speed2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GrossSpeed')))
    _SnapshotTime_time2 = INT(name='time2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SecondOfTime')))
    SnapshotTime._cont = ASN1Dict([
        ('speed1', _SnapshotTime_speed1),
        ('time1', _SnapshotTime_time1),
        ('speed2', _SnapshotTime_speed2),
        ('time2', _SnapshotTime_time2),
        ])
    SnapshotTime._ext = None
    
    #-----< SpecialVehicleExtensions >-----#
    SpecialVehicleExtensions = SEQ(name='SpecialVehicleExtensions', mode=MODE_TYPE)
    _SpecialVehicleExtensions_vehicleAlerts = SEQ(name='vehicleAlerts', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'EmergencyDetails')), opt=True)
    _SpecialVehicleExtensions_description = SEQ(name='description', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'EventDescription')), opt=True)
    _SpecialVehicleExtensions_trailers = SEQ(name='trailers', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerData')), opt=True)
    SpecialVehicleExtensions._cont = ASN1Dict([
        ('vehicleAlerts', _SpecialVehicleExtensions_vehicleAlerts),
        ('description', _SpecialVehicleExtensions_description),
        ('trailers', _SpecialVehicleExtensions_trailers),
        ])
    SpecialVehicleExtensions._ext = []
    
    #-----< SpeedandHeadingandThrottleConfidence >-----#
    SpeedandHeadingandThrottleConfidence = SEQ(name='SpeedandHeadingandThrottleConfidence', mode=MODE_TYPE)
    _SpeedandHeadingandThrottleConfidence_heading = ENUM(name='heading', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingConfidence')))
    _SpeedandHeadingandThrottleConfidence_speed = ENUM(name='speed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedConfidence')))
    _SpeedandHeadingandThrottleConfidence_throttle = ENUM(name='throttle', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ThrottleConfidence')))
    SpeedandHeadingandThrottleConfidence._cont = ASN1Dict([
        ('heading', _SpeedandHeadingandThrottleConfidence_heading),
        ('speed', _SpeedandHeadingandThrottleConfidence_speed),
        ('throttle', _SpeedandHeadingandThrottleConfidence_throttle),
        ])
    SpeedandHeadingandThrottleConfidence._ext = None
    
    #-----< SpeedLimitList >-----#
    SpeedLimitList = SEQ_OF(name='SpeedLimitList', mode=MODE_TYPE)
    _SpeedLimitList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegulatorySpeedLimit')))
    SpeedLimitList._cont = _SpeedLimitList__item_
    SpeedLimitList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=9)], ev=None, er=[])
    
    #-----< SpeedProfileMeasurementList >-----#
    SpeedProfileMeasurementList = SEQ_OF(name='SpeedProfileMeasurementList', mode=MODE_TYPE)
    _SpeedProfileMeasurementList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'SpeedProfileMeasurement')))
    SpeedProfileMeasurementList._cont = _SpeedProfileMeasurementList__item_
    SpeedProfileMeasurementList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< SpeedProfile >-----#
    SpeedProfile = SEQ(name='SpeedProfile', mode=MODE_TYPE)
    _SpeedProfile_speedReports = SEQ_OF(name='speedReports', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedProfileMeasurementList')))
    SpeedProfile._cont = ASN1Dict([
        ('speedReports', _SpeedProfile_speedReports),
        ])
    SpeedProfile._ext = []
    
    #-----< SupplementalVehicleExtensions >-----#
    SupplementalVehicleExtensions = SEQ(name='SupplementalVehicleExtensions', mode=MODE_TYPE)
    _SupplementalVehicleExtensions_classification = INT(name='classification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')), opt=True)
    _SupplementalVehicleExtensions_classDetails = SEQ(name='classDetails', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleClassification')), opt=True)
    _SupplementalVehicleExtensions_vehicleData = SEQ(name='vehicleData', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleData')), opt=True)
    _SupplementalVehicleExtensions_weatherReport = SEQ(name='weatherReport', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WeatherReport')), opt=True)
    _SupplementalVehicleExtensions_weatherProbe = SEQ(name='weatherProbe', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WeatherProbe')), opt=True)
    _SupplementalVehicleExtensions_obstacle = SEQ(name='obstacle', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ObstacleDetection')), opt=True)
    _SupplementalVehicleExtensions_status = SEQ(name='status', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DisabledVehicle')), opt=True)
    _SupplementalVehicleExtensions_speedProfile = SEQ(name='speedProfile', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedProfile')), opt=True)
    _SupplementalVehicleExtensions_theRTCM = SEQ(name='theRTCM', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RTCMPackage')), opt=True)
    _SupplementalVehicleExtensions_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SupplementalVehicleExtensions_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___SupplementalVehicleExtensions_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____SupplementalVehicleExtensions_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____SupplementalVehicleExtensions_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___SupplementalVehicleExtensions_regional__item__regionId._const_tab = ____SupplementalVehicleExtensions_regional__item__regionId_tab
    ___SupplementalVehicleExtensions_regional__item__regionId._const_tab_at = None
    ___SupplementalVehicleExtensions_regional__item__regionId._const_tab_id = 'id'
    ___SupplementalVehicleExtensions_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___SupplementalVehicleExtensions_regional__item__regExtValue._const_tab = ____SupplementalVehicleExtensions_regional__item__regionId_tab
    ___SupplementalVehicleExtensions_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___SupplementalVehicleExtensions_regional__item__regExtValue._const_tab_id = 'Type'
    __SupplementalVehicleExtensions_regional__item_._cont = ASN1Dict([
        ('regionId', ___SupplementalVehicleExtensions_regional__item__regionId),
        ('regExtValue', ___SupplementalVehicleExtensions_regional__item__regExtValue),
        ])
    __SupplementalVehicleExtensions_regional__item_._ext = None
    _SupplementalVehicleExtensions_regional._cont = __SupplementalVehicleExtensions_regional__item_
    _SupplementalVehicleExtensions_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SupplementalVehicleExtensions._cont = ASN1Dict([
        ('classification', _SupplementalVehicleExtensions_classification),
        ('classDetails', _SupplementalVehicleExtensions_classDetails),
        ('vehicleData', _SupplementalVehicleExtensions_vehicleData),
        ('weatherReport', _SupplementalVehicleExtensions_weatherReport),
        ('weatherProbe', _SupplementalVehicleExtensions_weatherProbe),
        ('obstacle', _SupplementalVehicleExtensions_obstacle),
        ('status', _SupplementalVehicleExtensions_status),
        ('speedProfile', _SupplementalVehicleExtensions_speedProfile),
        ('theRTCM', _SupplementalVehicleExtensions_theRTCM),
        ('regional', _SupplementalVehicleExtensions_regional),
        ])
    SupplementalVehicleExtensions._ext = []
    
    #-----< TimeChangeDetails >-----#
    TimeChangeDetails = SEQ(name='TimeChangeDetails', mode=MODE_TYPE)
    _TimeChangeDetails_startTime = INT(name='startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeMark')), opt=True)
    _TimeChangeDetails_minEndTime = INT(name='minEndTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeMark')))
    _TimeChangeDetails_maxEndTime = INT(name='maxEndTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeMark')), opt=True)
    _TimeChangeDetails_likelyTime = INT(name='likelyTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeMark')), opt=True)
    _TimeChangeDetails_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeIntervalConfidence')), opt=True)
    _TimeChangeDetails_nextTime = INT(name='nextTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeMark')), opt=True)
    TimeChangeDetails._cont = ASN1Dict([
        ('startTime', _TimeChangeDetails_startTime),
        ('minEndTime', _TimeChangeDetails_minEndTime),
        ('maxEndTime', _TimeChangeDetails_maxEndTime),
        ('likelyTime', _TimeChangeDetails_likelyTime),
        ('confidence', _TimeChangeDetails_confidence),
        ('nextTime', _TimeChangeDetails_nextTime),
        ])
    TimeChangeDetails._ext = None
    
    #-----< TrailerData >-----#
    TrailerData = SEQ(name='TrailerData', mode=MODE_TYPE)
    _TrailerData_sspRights = INT(name='sspRights', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _TrailerData_connection = SEQ(name='connection', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PivotPointDescription')))
    _TrailerData_units = SEQ_OF(name='units', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerUnitDescriptionList')))
    TrailerData._cont = ASN1Dict([
        ('sspRights', _TrailerData_sspRights),
        ('connection', _TrailerData_connection),
        ('units', _TrailerData_units),
        ])
    TrailerData._ext = []
    
    #-----< TrailerHistoryPointList >-----#
    TrailerHistoryPointList = SEQ_OF(name='TrailerHistoryPointList', mode=MODE_TYPE)
    _TrailerHistoryPointList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TrailerHistoryPoint')))
    TrailerHistoryPointList._cont = _TrailerHistoryPointList__item_
    TrailerHistoryPointList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    
    #-----< TrailerHistoryPoint >-----#
    TrailerHistoryPoint = SEQ(name='TrailerHistoryPoint', mode=MODE_TYPE)
    _TrailerHistoryPoint_pivotAngle = INT(name='pivotAngle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Angle')))
    _TrailerHistoryPoint_timeOffset = INT(name='timeOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeOffset')))
    _TrailerHistoryPoint_positionOffset = SEQ(name='positionOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-24b')))
    _TrailerHistoryPoint_elevationOffset = INT(name='elevationOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B07')), opt=True)
    _TrailerHistoryPoint_heading = INT(name='heading', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'CoarseHeading')), opt=True)
    TrailerHistoryPoint._cont = ASN1Dict([
        ('pivotAngle', _TrailerHistoryPoint_pivotAngle),
        ('timeOffset', _TrailerHistoryPoint_timeOffset),
        ('positionOffset', _TrailerHistoryPoint_positionOffset),
        ('elevationOffset', _TrailerHistoryPoint_elevationOffset),
        ('heading', _TrailerHistoryPoint_heading),
        ])
    TrailerHistoryPoint._ext = []
    
    #-----< TrailerUnitDescriptionList >-----#
    TrailerUnitDescriptionList = SEQ_OF(name='TrailerUnitDescriptionList', mode=MODE_TYPE)
    _TrailerUnitDescriptionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TrailerUnitDescription')))
    TrailerUnitDescriptionList._cont = _TrailerUnitDescriptionList__item_
    TrailerUnitDescriptionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TrailerUnitDescription >-----#
    TrailerUnitDescription = SEQ(name='TrailerUnitDescription', mode=MODE_TYPE)
    _TrailerUnitDescription_isDolly = BOOL(name='isDolly', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'IsDolly')))
    _TrailerUnitDescription_width = INT(name='width', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleWidth')))
    _TrailerUnitDescription_length = INT(name='length', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleLength')))
    _TrailerUnitDescription_height = INT(name='height', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleHeight')), opt=True)
    _TrailerUnitDescription_mass = INT(name='mass', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerMass')), opt=True)
    _TrailerUnitDescription_bumperHeights = SEQ(name='bumperHeights', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BumperHeights')), opt=True)
    _TrailerUnitDescription_centerOfGravity = INT(name='centerOfGravity', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleHeight')), opt=True)
    _TrailerUnitDescription_frontPivot = SEQ(name='frontPivot', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PivotPointDescription')))
    _TrailerUnitDescription_rearPivot = SEQ(name='rearPivot', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PivotPointDescription')), opt=True)
    _TrailerUnitDescription_rearWheelOffset = INT(name='rearWheelOffset', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Offset-B12')), opt=True)
    _TrailerUnitDescription_positionOffset = SEQ(name='positionOffset', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Node-XY-24b')))
    _TrailerUnitDescription_elevationOffset = INT(name='elevationOffset', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B07')), opt=True)
    _TrailerUnitDescription_crumbData = SEQ_OF(name='crumbData', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerHistoryPointList')), opt=True)
    TrailerUnitDescription._cont = ASN1Dict([
        ('isDolly', _TrailerUnitDescription_isDolly),
        ('width', _TrailerUnitDescription_width),
        ('length', _TrailerUnitDescription_length),
        ('height', _TrailerUnitDescription_height),
        ('mass', _TrailerUnitDescription_mass),
        ('bumperHeights', _TrailerUnitDescription_bumperHeights),
        ('centerOfGravity', _TrailerUnitDescription_centerOfGravity),
        ('frontPivot', _TrailerUnitDescription_frontPivot),
        ('rearPivot', _TrailerUnitDescription_rearPivot),
        ('rearWheelOffset', _TrailerUnitDescription_rearWheelOffset),
        ('positionOffset', _TrailerUnitDescription_positionOffset),
        ('elevationOffset', _TrailerUnitDescription_elevationOffset),
        ('crumbData', _TrailerUnitDescription_crumbData),
        ])
    TrailerUnitDescription._ext = []
    
    #-----< TransmissionAndSpeed >-----#
    TransmissionAndSpeed = SEQ(name='TransmissionAndSpeed', mode=MODE_TYPE)
    _TransmissionAndSpeed_transmisson = ENUM(name='transmisson', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TransmissionState')))
    _TransmissionAndSpeed_speed = INT(name='speed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Velocity')))
    TransmissionAndSpeed._cont = ASN1Dict([
        ('transmisson', _TransmissionAndSpeed_transmisson),
        ('speed', _TransmissionAndSpeed_speed),
        ])
    TransmissionAndSpeed._ext = None
    
    #-----< TravelerDataFrameList >-----#
    TravelerDataFrameList = SEQ_OF(name='TravelerDataFrameList', mode=MODE_TYPE)
    _TravelerDataFrameList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'TravelerDataFrame')))
    TravelerDataFrameList._cont = _TravelerDataFrameList__item_
    TravelerDataFrameList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< TravelerDataFrame >-----#
    TravelerDataFrame = SEQ(name='TravelerDataFrame', mode=MODE_TYPE)
    _TravelerDataFrame_sspTimRights = INT(name='sspTimRights', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _TravelerDataFrame_frameType = ENUM(name='frameType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TravelerInfoType')))
    _TravelerDataFrame_msgId = CHOICE(name='msgId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __TravelerDataFrame_msgId_furtherInfoID = OCT_STR(name='furtherInfoID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FurtherInfoID')))
    __TravelerDataFrame_msgId_roadSignID = SEQ(name='roadSignID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RoadSignID')))
    _TravelerDataFrame_msgId._cont = ASN1Dict([
        ('furtherInfoID', __TravelerDataFrame_msgId_furtherInfoID),
        ('roadSignID', __TravelerDataFrame_msgId_roadSignID),
        ])
    _TravelerDataFrame_msgId._ext = None
    _TravelerDataFrame_startYear = INT(name='startYear', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DYear')), opt=True)
    _TravelerDataFrame_startTime = INT(name='startTime', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinuteOfTheYear')))
    _TravelerDataFrame_duratonTime = INT(name='duratonTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'MinutesDuration')))
    _TravelerDataFrame_priority = INT(name='priority', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignPrority')))
    _TravelerDataFrame_sspLocationRights = INT(name='sspLocationRights', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _TravelerDataFrame_regions = SEQ_OF(name='regions', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TravelerDataFrame_regions__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'GeographicalPath')))
    _TravelerDataFrame_regions._cont = __TravelerDataFrame_regions__item_
    _TravelerDataFrame_regions._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _TravelerDataFrame_sspMsgRights1 = INT(name='sspMsgRights1', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _TravelerDataFrame_sspMsgRights2 = INT(name='sspMsgRights2', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SSPindex')))
    _TravelerDataFrame_content = CHOICE(name='content', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __TravelerDataFrame_content_advisory = SEQ_OF(name='advisory', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodesAndText')))
    __TravelerDataFrame_content_workZone = SEQ_OF(name='workZone', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WorkZone')))
    __TravelerDataFrame_content_genericSign = SEQ_OF(name='genericSign', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GenericSignage')))
    __TravelerDataFrame_content_speedLimit = SEQ_OF(name='speedLimit', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedLimit')))
    __TravelerDataFrame_content_exitService = SEQ_OF(name='exitService', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ExitService')))
    _TravelerDataFrame_content._cont = ASN1Dict([
        ('advisory', __TravelerDataFrame_content_advisory),
        ('workZone', __TravelerDataFrame_content_workZone),
        ('genericSign', __TravelerDataFrame_content_genericSign),
        ('speedLimit', __TravelerDataFrame_content_speedLimit),
        ('exitService', __TravelerDataFrame_content_exitService),
        ])
    _TravelerDataFrame_content._ext = None
    _TravelerDataFrame_url = STR_IA5(name='url', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'URL-Short')), opt=True)
    TravelerDataFrame._cont = ASN1Dict([
        ('sspTimRights', _TravelerDataFrame_sspTimRights),
        ('frameType', _TravelerDataFrame_frameType),
        ('msgId', _TravelerDataFrame_msgId),
        ('startYear', _TravelerDataFrame_startYear),
        ('startTime', _TravelerDataFrame_startTime),
        ('duratonTime', _TravelerDataFrame_duratonTime),
        ('priority', _TravelerDataFrame_priority),
        ('sspLocationRights', _TravelerDataFrame_sspLocationRights),
        ('regions', _TravelerDataFrame_regions),
        ('sspMsgRights1', _TravelerDataFrame_sspMsgRights1),
        ('sspMsgRights2', _TravelerDataFrame_sspMsgRights2),
        ('content', _TravelerDataFrame_content),
        ('url', _TravelerDataFrame_url),
        ])
    TravelerDataFrame._ext = []
    
    #-----< ValidRegion >-----#
    ValidRegion = SEQ(name='ValidRegion', mode=MODE_TYPE)
    _ValidRegion_direction = BIT_STR(name='direction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'HeadingSlice')))
    _ValidRegion_extent = ENUM(name='extent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Extent')), opt=True)
    _ValidRegion_area = CHOICE(name='area', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ValidRegion_area_shapePointSet = SEQ(name='shapePointSet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ShapePointSet')))
    __ValidRegion_area_circle = SEQ(name='circle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Circle')))
    __ValidRegion_area_regionPointSet = SEQ(name='regionPointSet', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionPointSet')))
    _ValidRegion_area._cont = ASN1Dict([
        ('shapePointSet', __ValidRegion_area_shapePointSet),
        ('circle', __ValidRegion_area_circle),
        ('regionPointSet', __ValidRegion_area_regionPointSet),
        ])
    _ValidRegion_area._ext = None
    ValidRegion._cont = ASN1Dict([
        ('direction', _ValidRegion_direction),
        ('extent', _ValidRegion_extent),
        ('area', _ValidRegion_area),
        ])
    ValidRegion._ext = None
    
    #-----< VehicleClassification >-----#
    VehicleClassification = SEQ(name='VehicleClassification', mode=MODE_TYPE)
    _VehicleClassification_keyType = INT(name='keyType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')), opt=True)
    _VehicleClassification_role = ENUM(name='role', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BasicVehicleRole')), opt=True)
    _VehicleClassification_iso3883 = INT(name='iso3883', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Iso3833VehicleType')), opt=True)
    _VehicleClassification_hpmsType = ENUM(name='hpmsType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleType')), opt=True)
    _VehicleClassification_vehicleType = ENUM(name='vehicleType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'VehicleGroupAffected')), opt=True)
    _VehicleClassification_responseEquip = ENUM(name='responseEquip', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'IncidentResponseEquipment')), opt=True)
    _VehicleClassification_responderType = ENUM(name='responderType', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ResponderGroupAffected')), opt=True)
    _VehicleClassification_fuelType = INT(name='fuelType', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FuelType')), opt=True)
    _VehicleClassification_regional = SEQ_OF(name='regional', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VehicleClassification_regional__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    ___VehicleClassification_regional__item__regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ____VehicleClassification_regional__item__regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ____VehicleClassification_regional__item__regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    ___VehicleClassification_regional__item__regionId._const_tab = ____VehicleClassification_regional__item__regionId_tab
    ___VehicleClassification_regional__item__regionId._const_tab_at = None
    ___VehicleClassification_regional__item__regionId._const_tab_id = 'id'
    ___VehicleClassification_regional__item__regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    ___VehicleClassification_regional__item__regExtValue._const_tab = ____VehicleClassification_regional__item__regionId_tab
    ___VehicleClassification_regional__item__regExtValue._const_tab_at = ('..', 'regionId')
    ___VehicleClassification_regional__item__regExtValue._const_tab_id = 'Type'
    __VehicleClassification_regional__item_._cont = ASN1Dict([
        ('regionId', ___VehicleClassification_regional__item__regionId),
        ('regExtValue', ___VehicleClassification_regional__item__regExtValue),
        ])
    __VehicleClassification_regional__item_._ext = None
    _VehicleClassification_regional._cont = __VehicleClassification_regional__item_
    _VehicleClassification_regional._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    VehicleClassification._cont = ASN1Dict([
        ('keyType', _VehicleClassification_keyType),
        ('role', _VehicleClassification_role),
        ('iso3883', _VehicleClassification_iso3883),
        ('hpmsType', _VehicleClassification_hpmsType),
        ('vehicleType', _VehicleClassification_vehicleType),
        ('responseEquip', _VehicleClassification_responseEquip),
        ('responderType', _VehicleClassification_responderType),
        ('fuelType', _VehicleClassification_fuelType),
        ('regional', _VehicleClassification_regional),
        ])
    VehicleClassification._ext = []
    
    #-----< VehicleData >-----#
    VehicleData = SEQ(name='VehicleData', mode=MODE_TYPE)
    _VehicleData_height = INT(name='height', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleHeight')), opt=True)
    _VehicleData_bumpers = SEQ(name='bumpers', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BumperHeights')), opt=True)
    _VehicleData_mass = INT(name='mass', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleMass')), opt=True)
    _VehicleData_trailerWeight = INT(name='trailerWeight', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerWeight')), opt=True)
    VehicleData._cont = ASN1Dict([
        ('height', _VehicleData_height),
        ('bumpers', _VehicleData_bumpers),
        ('mass', _VehicleData_mass),
        ('trailerWeight', _VehicleData_trailerWeight),
        ])
    VehicleData._ext = []
    
    #-----< VehicleIdent >-----#
    VehicleIdent = SEQ(name='VehicleIdent', mode=MODE_TYPE)
    _VehicleIdent_name = STR_IA5(name='name', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DescriptiveName')), opt=True)
    _VehicleIdent_vin = OCT_STR(name='vin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VINstring')), opt=True)
    _VehicleIdent_ownerCode = STR_IA5(name='ownerCode', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VehicleIdent_ownerCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _VehicleIdent_id = CHOICE(name='id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleID')), opt=True)
    _VehicleIdent_vehicleType = ENUM(name='vehicleType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleType')), opt=True)
    _VehicleIdent_vehicleClass = CHOICE(name='vehicleClass', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __VehicleIdent_vehicleClass_vGroup = ENUM(name='vGroup', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'VehicleGroupAffected')))
    __VehicleIdent_vehicleClass_rGroup = ENUM(name='rGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ResponderGroupAffected')))
    __VehicleIdent_vehicleClass_rEquip = ENUM(name='rEquip', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'IncidentResponseEquipment')))
    _VehicleIdent_vehicleClass._cont = ASN1Dict([
        ('vGroup', __VehicleIdent_vehicleClass_vGroup),
        ('rGroup', __VehicleIdent_vehicleClass_rGroup),
        ('rEquip', __VehicleIdent_vehicleClass_rEquip),
        ])
    _VehicleIdent_vehicleClass._ext = None
    VehicleIdent._cont = ASN1Dict([
        ('name', _VehicleIdent_name),
        ('vin', _VehicleIdent_vin),
        ('ownerCode', _VehicleIdent_ownerCode),
        ('id', _VehicleIdent_id),
        ('vehicleType', _VehicleIdent_vehicleType),
        ('vehicleClass', _VehicleIdent_vehicleClass),
        ])
    VehicleIdent._ext = []
    
    #-----< VehicleID >-----#
    VehicleID = CHOICE(name='VehicleID', mode=MODE_TYPE)
    _VehicleID_entityID = OCT_STR(name='entityID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TemporaryID')))
    _VehicleID_stationID = INT(name='stationID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'StationID')))
    VehicleID._cont = ASN1Dict([
        ('entityID', _VehicleID_entityID),
        ('stationID', _VehicleID_stationID),
        ])
    VehicleID._ext = None
    
    #-----< VehicleSafetyExtensions >-----#
    VehicleSafetyExtensions = SEQ(name='VehicleSafetyExtensions', mode=MODE_TYPE)
    _VehicleSafetyExtensions_events = BIT_STR(name='events', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleEventFlags')), opt=True)
    _VehicleSafetyExtensions_pathHistory = SEQ(name='pathHistory', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathHistory')), opt=True)
    _VehicleSafetyExtensions_pathPrediction = SEQ(name='pathPrediction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PathPrediction')), opt=True)
    _VehicleSafetyExtensions_lights = BIT_STR(name='lights', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ExteriorLights')), opt=True)
    VehicleSafetyExtensions._cont = ASN1Dict([
        ('events', _VehicleSafetyExtensions_events),
        ('pathHistory', _VehicleSafetyExtensions_pathHistory),
        ('pathPrediction', _VehicleSafetyExtensions_pathPrediction),
        ('lights', _VehicleSafetyExtensions_lights),
        ])
    VehicleSafetyExtensions._ext = []
    
    #-----< VehicleSize >-----#
    VehicleSize = SEQ(name='VehicleSize', mode=MODE_TYPE)
    _VehicleSize_width = INT(name='width', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleWidth')))
    _VehicleSize_length = INT(name='length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleLength')))
    VehicleSize._cont = ASN1Dict([
        ('width', _VehicleSize_width),
        ('length', _VehicleSize_length),
        ])
    VehicleSize._ext = None
    
    #-----< VehicleStatusRequest >-----#
    VehicleStatusRequest = SEQ(name='VehicleStatusRequest', mode=MODE_TYPE)
    _VehicleStatusRequest_dataType = ENUM(name='dataType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleStatusDeviceTypeTag')))
    _VehicleStatusRequest_subType = INT(name='subType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VehicleStatusRequest_subType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _VehicleStatusRequest_sendOnLessThenValue = INT(name='sendOnLessThenValue', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VehicleStatusRequest_sendOnLessThenValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    _VehicleStatusRequest_sendOnMoreThenValue = INT(name='sendOnMoreThenValue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _VehicleStatusRequest_sendOnMoreThenValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    _VehicleStatusRequest_sendAll = BOOL(name='sendAll', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    VehicleStatusRequest._cont = ASN1Dict([
        ('dataType', _VehicleStatusRequest_dataType),
        ('subType', _VehicleStatusRequest_subType),
        ('sendOnLessThenValue', _VehicleStatusRequest_sendOnLessThenValue),
        ('sendOnMoreThenValue', _VehicleStatusRequest_sendOnMoreThenValue),
        ('sendAll', _VehicleStatusRequest_sendAll),
        ])
    VehicleStatusRequest._ext = []
    
    #-----< VehicleStatusRequestList >-----#
    VehicleStatusRequestList = SEQ_OF(name='VehicleStatusRequestList', mode=MODE_TYPE)
    _VehicleStatusRequestList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'VehicleStatusRequest')))
    VehicleStatusRequestList._cont = _VehicleStatusRequestList__item_
    VehicleStatusRequestList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< VehicleStatus >-----#
    VehicleStatus = SEQ(name='VehicleStatus', mode=MODE_TYPE)
    _VehicleStatus_lights = BIT_STR(name='lights', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ExteriorLights')), opt=True)
    _VehicleStatus_lightBar = ENUM(name='lightBar', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LightbarInUse')), opt=True)
    _VehicleStatus_wipers = SEQ(name='wipers', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WiperSet')), opt=True)
    _VehicleStatus_brakeStatus = SEQ(name='brakeStatus', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BrakeSystemStatus')), opt=True)
    _VehicleStatus_brakePressure = ENUM(name='brakePressure', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BrakeAppliedPressure')), opt=True)
    _VehicleStatus_roadFriction = INT(name='roadFriction', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'CoefficientOfFriction')), opt=True)
    _VehicleStatus_sunData = INT(name='sunData', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SunSensor')), opt=True)
    _VehicleStatus_rainData = ENUM(name='rainData', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RainSensor')), opt=True)
    _VehicleStatus_airTemp = INT(name='airTemp', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AmbientAirTemperature')), opt=True)
    _VehicleStatus_airPres = INT(name='airPres', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AmbientAirPressure')), opt=True)
    _VehicleStatus_steering = SEQ(name='steering', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VehicleStatus_steering_angle = INT(name='angle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringWheelAngle')))
    __VehicleStatus_steering_confidence = ENUM(name='confidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringWheelAngleConfidence')), opt=True)
    __VehicleStatus_steering_rate = INT(name='rate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SteeringWheelAngleRateOfChange')), opt=True)
    __VehicleStatus_steering_wheels = INT(name='wheels', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DrivingWheelAngle')), opt=True)
    _VehicleStatus_steering._cont = ASN1Dict([
        ('angle', __VehicleStatus_steering_angle),
        ('confidence', __VehicleStatus_steering_confidence),
        ('rate', __VehicleStatus_steering_rate),
        ('wheels', __VehicleStatus_steering_wheels),
        ])
    _VehicleStatus_steering._ext = None
    _VehicleStatus_accelSets = SEQ(name='accelSets', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VehicleStatus_accelSets_accel4way = SEQ(name='accel4way', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AccelerationSet4Way')), opt=True)
    __VehicleStatus_accelSets_vertAccelThres = BIT_STR(name='vertAccelThres', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VerticalAccelerationThreshold')), opt=True)
    __VehicleStatus_accelSets_yawRateCon = ENUM(name='yawRateCon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'YawRateConfidence')), opt=True)
    __VehicleStatus_accelSets_hozAccelCon = ENUM(name='hozAccelCon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AccelerationConfidence')), opt=True)
    __VehicleStatus_accelSets_confidenceSet = SEQ(name='confidenceSet', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ConfidenceSet')), opt=True)
    _VehicleStatus_accelSets._cont = ASN1Dict([
        ('accel4way', __VehicleStatus_accelSets_accel4way),
        ('vertAccelThres', __VehicleStatus_accelSets_vertAccelThres),
        ('yawRateCon', __VehicleStatus_accelSets_yawRateCon),
        ('hozAccelCon', __VehicleStatus_accelSets_hozAccelCon),
        ('confidenceSet', __VehicleStatus_accelSets_confidenceSet),
        ])
    _VehicleStatus_accelSets._ext = None
    _VehicleStatus_object = SEQ(name='object', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VehicleStatus_object_obDist = INT(name='obDist', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ObstacleDistance')))
    __VehicleStatus_object_obDirect = INT(name='obDirect', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Angle')))
    __VehicleStatus_object_dateTime = SEQ(name='dateTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'DDateTime')))
    _VehicleStatus_object._cont = ASN1Dict([
        ('obDist', __VehicleStatus_object_obDist),
        ('obDirect', __VehicleStatus_object_obDirect),
        ('dateTime', __VehicleStatus_object_dateTime),
        ])
    _VehicleStatus_object._ext = None
    _VehicleStatus_fullPos = SEQ(name='fullPos', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'FullPositionVector')), opt=True)
    _VehicleStatus_throttlePos = INT(name='throttlePos', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'ThrottlePosition')), opt=True)
    _VehicleStatus_speedHeadC = SEQ(name='speedHeadC', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedandHeadingandThrottleConfidence')), opt=True)
    _VehicleStatus_speedC = ENUM(name='speedC', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SpeedConfidence')), opt=True)
    _VehicleStatus_vehicleData = SEQ(name='vehicleData', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VehicleStatus_vehicleData_height = INT(name='height', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleHeight')))
    __VehicleStatus_vehicleData_bumpers = SEQ(name='bumpers', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'BumperHeights')))
    __VehicleStatus_vehicleData_mass = INT(name='mass', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleMass')))
    __VehicleStatus_vehicleData_trailerWeight = INT(name='trailerWeight', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TrailerWeight')))
    __VehicleStatus_vehicleData_type = ENUM(name='type', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleType')))
    _VehicleStatus_vehicleData._cont = ASN1Dict([
        ('height', __VehicleStatus_vehicleData_height),
        ('bumpers', __VehicleStatus_vehicleData_bumpers),
        ('mass', __VehicleStatus_vehicleData_mass),
        ('trailerWeight', __VehicleStatus_vehicleData_trailerWeight),
        ('type', __VehicleStatus_vehicleData_type),
        ])
    _VehicleStatus_vehicleData._ext = None
    _VehicleStatus_vehicleIdent = SEQ(name='vehicleIdent', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VehicleIdent')), opt=True)
    _VehicleStatus_j1939data = SEQ(name='j1939data', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'J1939data')), opt=True)
    _VehicleStatus_weatherReport = SEQ(name='weatherReport', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __VehicleStatus_weatherReport_isRaining = ENUM(name='isRaining', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssPrecipYesNo')))
    __VehicleStatus_weatherReport_rainRate = INT(name='rainRate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssPrecipRate')), opt=True)
    __VehicleStatus_weatherReport_precipSituation = ENUM(name='precipSituation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssPrecipSituation')), opt=True)
    __VehicleStatus_weatherReport_solarRadiation = INT(name='solarRadiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssSolarRadiation')), opt=True)
    __VehicleStatus_weatherReport_friction = INT(name='friction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssMobileFriction')), opt=True)
    _VehicleStatus_weatherReport._cont = ASN1Dict([
        ('isRaining', __VehicleStatus_weatherReport_isRaining),
        ('rainRate', __VehicleStatus_weatherReport_rainRate),
        ('precipSituation', __VehicleStatus_weatherReport_precipSituation),
        ('solarRadiation', __VehicleStatus_weatherReport_solarRadiation),
        ('friction', __VehicleStatus_weatherReport_friction),
        ])
    _VehicleStatus_weatherReport._ext = None
    _VehicleStatus_gnssStatus = BIT_STR(name='gnssStatus', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'GNSSstatus')), opt=True)
    VehicleStatus._cont = ASN1Dict([
        ('lights', _VehicleStatus_lights),
        ('lightBar', _VehicleStatus_lightBar),
        ('wipers', _VehicleStatus_wipers),
        ('brakeStatus', _VehicleStatus_brakeStatus),
        ('brakePressure', _VehicleStatus_brakePressure),
        ('roadFriction', _VehicleStatus_roadFriction),
        ('sunData', _VehicleStatus_sunData),
        ('rainData', _VehicleStatus_rainData),
        ('airTemp', _VehicleStatus_airTemp),
        ('airPres', _VehicleStatus_airPres),
        ('steering', _VehicleStatus_steering),
        ('accelSets', _VehicleStatus_accelSets),
        ('object', _VehicleStatus_object),
        ('fullPos', _VehicleStatus_fullPos),
        ('throttlePos', _VehicleStatus_throttlePos),
        ('speedHeadC', _VehicleStatus_speedHeadC),
        ('speedC', _VehicleStatus_speedC),
        ('vehicleData', _VehicleStatus_vehicleData),
        ('vehicleIdent', _VehicleStatus_vehicleIdent),
        ('j1939data', _VehicleStatus_j1939data),
        ('weatherReport', _VehicleStatus_weatherReport),
        ('gnssStatus', _VehicleStatus_gnssStatus),
        ])
    VehicleStatus._ext = []
    
    #-----< VerticalOffset >-----#
    VerticalOffset = CHOICE(name='VerticalOffset', mode=MODE_TYPE)
    _VerticalOffset_offset1 = INT(name='offset1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B07')))
    _VerticalOffset_offset2 = INT(name='offset2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B08')))
    _VerticalOffset_offset3 = INT(name='offset3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B09')))
    _VerticalOffset_offset4 = INT(name='offset4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B10')))
    _VerticalOffset_offset5 = INT(name='offset5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B11')))
    _VerticalOffset_offset6 = INT(name='offset6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'VertOffset-B12')))
    _VerticalOffset_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'Elevation')))
    _VerticalOffset_regional = SEQ(name='regional', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'RegionalExtension')))
    __VerticalOffset_regional_regionId = INT(name='regionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['id']))
    ___VerticalOffset_regional_regionId_tab = CLASS(name='_tab_REG-EXT-ID-AND-TYPE', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    ___VerticalOffset_regional_regionId_tab._val = ASN1Set(rv=[], rr=[], ev=None, er=[])
    __VerticalOffset_regional_regionId._const_tab = ___VerticalOffset_regional_regionId_tab
    __VerticalOffset_regional_regionId._const_tab_at = None
    __VerticalOffset_regional_regionId._const_tab_id = 'id'
    __VerticalOffset_regional_regExtValue = OPEN(name='regExtValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefClassField(('DSRC', 'REG-EXT-ID-AND-TYPE'), ['Type']))
    __VerticalOffset_regional_regExtValue._const_tab = ___VerticalOffset_regional_regionId_tab
    __VerticalOffset_regional_regExtValue._const_tab_at = ('..', 'regionId')
    __VerticalOffset_regional_regExtValue._const_tab_id = 'Type'
    _VerticalOffset_regional._cont = ASN1Dict([
        ('regionId', __VerticalOffset_regional_regionId),
        ('regExtValue', __VerticalOffset_regional_regExtValue),
        ])
    _VerticalOffset_regional._ext = None
    VerticalOffset._cont = ASN1Dict([
        ('offset1', _VerticalOffset_offset1),
        ('offset2', _VerticalOffset_offset2),
        ('offset3', _VerticalOffset_offset3),
        ('offset4', _VerticalOffset_offset4),
        ('offset5', _VerticalOffset_offset5),
        ('offset6', _VerticalOffset_offset6),
        ('elevation', _VerticalOffset_elevation),
        ('regional', _VerticalOffset_regional),
        ])
    VerticalOffset._ext = None
    
    #-----< WeatherProbe >-----#
    WeatherProbe = SEQ(name='WeatherProbe', mode=MODE_TYPE)
    _WeatherProbe_airTemp = INT(name='airTemp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AmbientAirTemperature')), opt=True)
    _WeatherProbe_airPressure = INT(name='airPressure', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'AmbientAirPressure')), opt=True)
    _WeatherProbe_rainRates = SEQ(name='rainRates', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WiperSet')), opt=True)
    WeatherProbe._cont = ASN1Dict([
        ('airTemp', _WeatherProbe_airTemp),
        ('airPressure', _WeatherProbe_airPressure),
        ('rainRates', _WeatherProbe_rainRates),
        ])
    WeatherProbe._ext = []
    
    #-----< WeatherReport >-----#
    WeatherReport = SEQ(name='WeatherReport', mode=MODE_TYPE)
    _WeatherReport_isRaining = ENUM(name='isRaining', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssPrecipYesNo')))
    _WeatherReport_rainRate = INT(name='rainRate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssPrecipRate')), opt=True)
    _WeatherReport_precipSituation = ENUM(name='precipSituation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssPrecipSituation')), opt=True)
    _WeatherReport_solarRadiation = INT(name='solarRadiation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssSolarRadiation')), opt=True)
    _WeatherReport_friction = INT(name='friction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NTCIP', 'EssMobileFriction')), opt=True)
    _WeatherReport_roadFriction = INT(name='roadFriction', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'CoefficientOfFriction')), opt=True)
    WeatherReport._cont = ASN1Dict([
        ('isRaining', _WeatherReport_isRaining),
        ('rainRate', _WeatherReport_rainRate),
        ('precipSituation', _WeatherReport_precipSituation),
        ('solarRadiation', _WeatherReport_solarRadiation),
        ('friction', _WeatherReport_friction),
        ('roadFriction', _WeatherReport_roadFriction),
        ])
    WeatherReport._ext = []
    
    #-----< WiperSet >-----#
    WiperSet = SEQ(name='WiperSet', mode=MODE_TYPE)
    _WiperSet_statusFront = ENUM(name='statusFront', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WiperStatus')))
    _WiperSet_rateFront = INT(name='rateFront', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WiperRate')))
    _WiperSet_statusRear = ENUM(name='statusRear', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WiperStatus')), opt=True)
    _WiperSet_rateRear = INT(name='rateRear', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'WiperRate')), opt=True)
    WiperSet._cont = ASN1Dict([
        ('statusFront', _WiperSet_statusFront),
        ('rateFront', _WiperSet_rateFront),
        ('statusRear', _WiperSet_statusRear),
        ('rateRear', _WiperSet_rateRear),
        ])
    WiperSet._ext = None
    
    #-----< Acceleration >-----#
    Acceleration = INT(name='Acceleration', mode=MODE_TYPE)
    Acceleration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2000, ub=2001)], ev=None, er=[])
    
    #-----< AccelerationConfidence >-----#
    AccelerationConfidence = ENUM(name='AccelerationConfidence', mode=MODE_TYPE)
    AccelerationConfidence._cont = ASN1Dict([('unavailable', 0), ('accl-100-00', 1), ('accl-010-00', 2), ('accl-005-00', 3), ('accl-001-00', 4), ('accl-000-10', 5), ('accl-000-05', 6), ('accl-000-01', 7)])
    AccelerationConfidence._ext = None
    
    #-----< AdvisorySpeedType >-----#
    AdvisorySpeedType = ENUM(name='AdvisorySpeedType', mode=MODE_TYPE)
    AdvisorySpeedType._cont = ASN1Dict([('none', 0), ('greenwave', 1), ('ecoDrive', 2), ('transit', 3)])
    AdvisorySpeedType._ext = []
    
    #-----< AllowedManeuvers >-----#
    AllowedManeuvers = BIT_STR(name='AllowedManeuvers', mode=MODE_TYPE)
    AllowedManeuvers._cont = ASN1Dict([('maneuverStraightAllowed', 0), ('maneuverLeftAllowed', 1), ('maneuverRightAllowed', 2), ('maneuverUTurnAllowed', 3), ('maneuverLeftTurnOnRedAllowed', 4), ('maneuverRightTurnOnRedAllowed', 5), ('maneuverLaneChangeAllowed', 6), ('maneuverNoStoppingAllowed', 7), ('yieldAllwaysRequired', 8), ('goWithHalt', 9), ('caution', 10), ('reserved1', 11)])
    AllowedManeuvers._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    
    #-----< AmbientAirPressure >-----#
    AmbientAirPressure = INT(name='AmbientAirPressure', mode=MODE_TYPE)
    AmbientAirPressure._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AmbientAirTemperature >-----#
    AmbientAirTemperature = INT(name='AmbientAirTemperature', mode=MODE_TYPE)
    AmbientAirTemperature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=191)], ev=None, er=[])
    
    #-----< Angle >-----#
    Angle = INT(name='Angle', mode=MODE_TYPE)
    Angle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=28800)], ev=None, er=[])
    
    #-----< AnimalPropelledType >-----#
    AnimalPropelledType = ENUM(name='AnimalPropelledType', mode=MODE_TYPE)
    AnimalPropelledType._cont = ASN1Dict([('unavailable', 0), ('otherTypes', 1), ('animalMounted', 2), ('animalDrawnCarriage', 3)])
    AnimalPropelledType._ext = []
    
    #-----< AnimalType >-----#
    AnimalType = ENUM(name='AnimalType', mode=MODE_TYPE)
    AnimalType._cont = ASN1Dict([('unavailable', 0), ('serviceUse', 1), ('pet', 2), ('farm', 3)])
    AnimalType._ext = []
    
    #-----< AntiLockBrakeStatus >-----#
    AntiLockBrakeStatus = ENUM(name='AntiLockBrakeStatus', mode=MODE_TYPE)
    AntiLockBrakeStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('engaged', 3)])
    AntiLockBrakeStatus._ext = None
    
    #-----< ApproachID >-----#
    ApproachID = INT(name='ApproachID', mode=MODE_TYPE)
    ApproachID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< Attachment >-----#
    Attachment = ENUM(name='Attachment', mode=MODE_TYPE)
    Attachment._cont = ASN1Dict([('unavailable', 0), ('stroller', 1), ('bicycleTrailer', 2), ('cart', 3), ('wheelchair', 4), ('otherWalkAssistAttachments', 5), ('pet', 6)])
    Attachment._ext = []
    
    #-----< AttachmentRadius >-----#
    AttachmentRadius = INT(name='AttachmentRadius', mode=MODE_TYPE)
    AttachmentRadius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=200)], ev=None, er=[])
    
    #-----< AuxiliaryBrakeStatus >-----#
    AuxiliaryBrakeStatus = ENUM(name='AuxiliaryBrakeStatus', mode=MODE_TYPE)
    AuxiliaryBrakeStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('reserved', 3)])
    AuxiliaryBrakeStatus._ext = None
    
    #-----< BasicVehicleClass >-----#
    BasicVehicleClass = INT(name='BasicVehicleClass', mode=MODE_TYPE)
    BasicVehicleClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< unknownVehicleClass >-----#
    unknownVehicleClass = INT(name='unknownVehicleClass', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    unknownVehicleClass._val = 0
    
    #-----< specialVehicleClass >-----#
    specialVehicleClass = INT(name='specialVehicleClass', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    specialVehicleClass._val = 1
    
    #-----< passenger-Vehicle-TypeUnknown >-----#
    passenger_Vehicle_TypeUnknown = INT(name='passenger-Vehicle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    passenger_Vehicle_TypeUnknown._val = 10
    
    #-----< passenger-Vehicle-TypeOther >-----#
    passenger_Vehicle_TypeOther = INT(name='passenger-Vehicle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    passenger_Vehicle_TypeOther._val = 11
    
    #-----< lightTruck-Vehicle-TypeUnknown >-----#
    lightTruck_Vehicle_TypeUnknown = INT(name='lightTruck-Vehicle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    lightTruck_Vehicle_TypeUnknown._val = 20
    
    #-----< lightTruck-Vehicle-TypeOther >-----#
    lightTruck_Vehicle_TypeOther = INT(name='lightTruck-Vehicle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    lightTruck_Vehicle_TypeOther._val = 21
    
    #-----< truck-Vehicle-TypeUnknown >-----#
    truck_Vehicle_TypeUnknown = INT(name='truck-Vehicle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_Vehicle_TypeUnknown._val = 25
    
    #-----< truck-Vehicle-TypeOther >-----#
    truck_Vehicle_TypeOther = INT(name='truck-Vehicle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_Vehicle_TypeOther._val = 26
    
    #-----< truck-axleCnt2 >-----#
    truck_axleCnt2 = INT(name='truck-axleCnt2', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt2._val = 27
    
    #-----< truck-axleCnt3 >-----#
    truck_axleCnt3 = INT(name='truck-axleCnt3', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt3._val = 28
    
    #-----< truck-axleCnt4 >-----#
    truck_axleCnt4 = INT(name='truck-axleCnt4', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt4._val = 29
    
    #-----< truck-axleCnt4Trailer >-----#
    truck_axleCnt4Trailer = INT(name='truck-axleCnt4Trailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt4Trailer._val = 30
    
    #-----< truck-axleCnt5Trailer >-----#
    truck_axleCnt5Trailer = INT(name='truck-axleCnt5Trailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt5Trailer._val = 31
    
    #-----< truck-axleCnt6Trailer >-----#
    truck_axleCnt6Trailer = INT(name='truck-axleCnt6Trailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt6Trailer._val = 32
    
    #-----< truck-axleCnt5MultiTrailer >-----#
    truck_axleCnt5MultiTrailer = INT(name='truck-axleCnt5MultiTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt5MultiTrailer._val = 33
    
    #-----< truck-axleCnt6MultiTrailer >-----#
    truck_axleCnt6MultiTrailer = INT(name='truck-axleCnt6MultiTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt6MultiTrailer._val = 34
    
    #-----< truck-axleCnt7MultiTrailer >-----#
    truck_axleCnt7MultiTrailer = INT(name='truck-axleCnt7MultiTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    truck_axleCnt7MultiTrailer._val = 35
    
    #-----< motorcycle-TypeUnknown >-----#
    motorcycle_TypeUnknown = INT(name='motorcycle-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_TypeUnknown._val = 40
    
    #-----< motorcycle-TypeOther >-----#
    motorcycle_TypeOther = INT(name='motorcycle-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_TypeOther._val = 41
    
    #-----< motorcycle-Cruiser-Standard >-----#
    motorcycle_Cruiser_Standard = INT(name='motorcycle-Cruiser-Standard', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_Cruiser_Standard._val = 42
    
    #-----< motorcycle-SportUnclad >-----#
    motorcycle_SportUnclad = INT(name='motorcycle-SportUnclad', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_SportUnclad._val = 43
    
    #-----< motorcycle-SportTouring >-----#
    motorcycle_SportTouring = INT(name='motorcycle-SportTouring', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_SportTouring._val = 44
    
    #-----< motorcycle-SuperSport >-----#
    motorcycle_SuperSport = INT(name='motorcycle-SuperSport', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_SuperSport._val = 45
    
    #-----< motorcycle-Touring >-----#
    motorcycle_Touring = INT(name='motorcycle-Touring', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_Touring._val = 46
    
    #-----< motorcycle-Trike >-----#
    motorcycle_Trike = INT(name='motorcycle-Trike', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_Trike._val = 47
    
    #-----< motorcycle-wPassengers >-----#
    motorcycle_wPassengers = INT(name='motorcycle-wPassengers', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    motorcycle_wPassengers._val = 48
    
    #-----< transit-TypeUnknown >-----#
    transit_TypeUnknown = INT(name='transit-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_TypeUnknown._val = 50
    
    #-----< transit-TypeOther >-----#
    transit_TypeOther = INT(name='transit-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_TypeOther._val = 51
    
    #-----< transit-BRT >-----#
    transit_BRT = INT(name='transit-BRT', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_BRT._val = 52
    
    #-----< transit-ExpressBus >-----#
    transit_ExpressBus = INT(name='transit-ExpressBus', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_ExpressBus._val = 53
    
    #-----< transit-LocalBus >-----#
    transit_LocalBus = INT(name='transit-LocalBus', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_LocalBus._val = 54
    
    #-----< transit-SchoolBus >-----#
    transit_SchoolBus = INT(name='transit-SchoolBus', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_SchoolBus._val = 55
    
    #-----< transit-FixedGuideway >-----#
    transit_FixedGuideway = INT(name='transit-FixedGuideway', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_FixedGuideway._val = 56
    
    #-----< transit-Paratransit >-----#
    transit_Paratransit = INT(name='transit-Paratransit', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_Paratransit._val = 57
    
    #-----< transit-Paratransit-Ambulance >-----#
    transit_Paratransit_Ambulance = INT(name='transit-Paratransit-Ambulance', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    transit_Paratransit_Ambulance._val = 58
    
    #-----< emergency-TypeUnknown >-----#
    emergency_TypeUnknown = INT(name='emergency-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_TypeUnknown._val = 60
    
    #-----< emergency-TypeOther >-----#
    emergency_TypeOther = INT(name='emergency-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_TypeOther._val = 61
    
    #-----< emergency-Fire-Light-Vehicle >-----#
    emergency_Fire_Light_Vehicle = INT(name='emergency-Fire-Light-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Fire_Light_Vehicle._val = 62
    
    #-----< emergency-Fire-Heavy-Vehicle >-----#
    emergency_Fire_Heavy_Vehicle = INT(name='emergency-Fire-Heavy-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Fire_Heavy_Vehicle._val = 63
    
    #-----< emergency-Fire-Paramedic-Vehicle >-----#
    emergency_Fire_Paramedic_Vehicle = INT(name='emergency-Fire-Paramedic-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Fire_Paramedic_Vehicle._val = 64
    
    #-----< emergency-Fire-Ambulance-Vehicle >-----#
    emergency_Fire_Ambulance_Vehicle = INT(name='emergency-Fire-Ambulance-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Fire_Ambulance_Vehicle._val = 65
    
    #-----< emergency-Police-Light-Vehicle >-----#
    emergency_Police_Light_Vehicle = INT(name='emergency-Police-Light-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Police_Light_Vehicle._val = 66
    
    #-----< emergency-Police-Heavy-Vehicle >-----#
    emergency_Police_Heavy_Vehicle = INT(name='emergency-Police-Heavy-Vehicle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Police_Heavy_Vehicle._val = 67
    
    #-----< emergency-Other-Responder >-----#
    emergency_Other_Responder = INT(name='emergency-Other-Responder', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Other_Responder._val = 68
    
    #-----< emergency-Other-Ambulance >-----#
    emergency_Other_Ambulance = INT(name='emergency-Other-Ambulance', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    emergency_Other_Ambulance._val = 69
    
    #-----< otherTraveler-TypeUnknown >-----#
    otherTraveler_TypeUnknown = INT(name='otherTraveler-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_TypeUnknown._val = 80
    
    #-----< otherTraveler-TypeOther >-----#
    otherTraveler_TypeOther = INT(name='otherTraveler-TypeOther', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_TypeOther._val = 81
    
    #-----< otherTraveler-Pedestrian >-----#
    otherTraveler_Pedestrian = INT(name='otherTraveler-Pedestrian', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_Pedestrian._val = 82
    
    #-----< otherTraveler-Visually-Disabled >-----#
    otherTraveler_Visually_Disabled = INT(name='otherTraveler-Visually-Disabled', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_Visually_Disabled._val = 83
    
    #-----< otherTraveler-Physically-Disabled >-----#
    otherTraveler_Physically_Disabled = INT(name='otherTraveler-Physically-Disabled', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_Physically_Disabled._val = 84
    
    #-----< otherTraveler-Bicycle >-----#
    otherTraveler_Bicycle = INT(name='otherTraveler-Bicycle', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_Bicycle._val = 85
    
    #-----< otherTraveler-Vulnerable-Roadworker >-----#
    otherTraveler_Vulnerable_Roadworker = INT(name='otherTraveler-Vulnerable-Roadworker', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    otherTraveler_Vulnerable_Roadworker._val = 86
    
    #-----< infrastructure-TypeUnknown >-----#
    infrastructure_TypeUnknown = INT(name='infrastructure-TypeUnknown', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    infrastructure_TypeUnknown._val = 90
    
    #-----< infrastructure-Fixed >-----#
    infrastructure_Fixed = INT(name='infrastructure-Fixed', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    infrastructure_Fixed._val = 91
    
    #-----< infrastructure-Movable >-----#
    infrastructure_Movable = INT(name='infrastructure-Movable', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    infrastructure_Movable._val = 92
    
    #-----< equipped-CargoTrailer >-----#
    equipped_CargoTrailer = INT(name='equipped-CargoTrailer', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'BasicVehicleClass')))
    equipped_CargoTrailer._val = 93
    
    #-----< BasicVehicleRole >-----#
    BasicVehicleRole = ENUM(name='BasicVehicleRole', mode=MODE_TYPE)
    BasicVehicleRole._cont = ASN1Dict([('basicVehicle', 0), ('publicTransport', 1), ('specialTransport', 2), ('dangerousGoods', 3), ('roadWork', 4), ('roadRescue', 5), ('emergency', 6), ('safetyCar', 7), ('none-unknown', 8), ('truck', 9), ('motorcycle', 10), ('roadSideSource', 11), ('police', 12), ('fire', 13), ('ambulance', 14), ('dot', 15), ('transit', 16), ('slowMoving', 17), ('stopNgo', 18), ('cyclist', 19), ('pedestrian', 20), ('nonMotorized', 21), ('military', 22)])
    BasicVehicleRole._ext = []
    
    #-----< BrakeAppliedPressure >-----#
    BrakeAppliedPressure = ENUM(name='BrakeAppliedPressure', mode=MODE_TYPE)
    BrakeAppliedPressure._cont = ASN1Dict([('unavailable', 0), ('minPressure', 1), ('bkLvl-2', 2), ('bkLvl-3', 3), ('bkLvl-4', 4), ('bkLvl-5', 5), ('bkLvl-6', 6), ('bkLvl-7', 7), ('bkLvl-8', 8), ('bkLvl-9', 9), ('bkLvl-10', 10), ('bkLvl-11', 11), ('bkLvl-12', 12), ('bkLvl-13', 13), ('bkLvl-14', 14), ('maxPressure', 15)])
    BrakeAppliedPressure._ext = None
    
    #-----< BrakeAppliedStatus >-----#
    BrakeAppliedStatus = BIT_STR(name='BrakeAppliedStatus', mode=MODE_TYPE)
    BrakeAppliedStatus._cont = ASN1Dict([('unavailable', 0), ('leftFront', 1), ('leftRear', 2), ('rightFront', 3), ('rightRear', 4)])
    BrakeAppliedStatus._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< BrakeBoostApplied >-----#
    BrakeBoostApplied = ENUM(name='BrakeBoostApplied', mode=MODE_TYPE)
    BrakeBoostApplied._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2)])
    BrakeBoostApplied._ext = None
    
    #-----< BumperHeight >-----#
    BumperHeight = INT(name='BumperHeight', mode=MODE_TYPE)
    BumperHeight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< CoarseHeading >-----#
    CoarseHeading = INT(name='CoarseHeading', mode=MODE_TYPE)
    CoarseHeading._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=240)], ev=None, er=[])
    
    #-----< CodeWord >-----#
    CodeWord = OCT_STR(name='CodeWord', mode=MODE_TYPE)
    CodeWord._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< CoefficientOfFriction >-----#
    CoefficientOfFriction = INT(name='CoefficientOfFriction', mode=MODE_TYPE)
    CoefficientOfFriction._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=50)], ev=None, er=[])
    
    #-----< Confidence >-----#
    Confidence = INT(name='Confidence', mode=MODE_TYPE)
    Confidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=200)], ev=None, er=[])
    
    #-----< Count >-----#
    Count = INT(name='Count', mode=MODE_TYPE)
    Count._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    
    #-----< DDay >-----#
    DDay = INT(name='DDay', mode=MODE_TYPE)
    DDay._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< DeltaAngle >-----#
    DeltaAngle = INT(name='DeltaAngle', mode=MODE_TYPE)
    DeltaAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-150, ub=150)], ev=None, er=[])
    
    #-----< DeltaTime >-----#
    DeltaTime = INT(name='DeltaTime', mode=MODE_TYPE)
    DeltaTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-122, ub=121)], ev=None, er=[])
    
    #-----< DescriptiveName >-----#
    DescriptiveName = STR_IA5(name='DescriptiveName', mode=MODE_TYPE)
    DescriptiveName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< DHour >-----#
    DHour = INT(name='DHour', mode=MODE_TYPE)
    DHour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< DirectionOfUse >-----#
    DirectionOfUse = ENUM(name='DirectionOfUse', mode=MODE_TYPE)
    DirectionOfUse._cont = ASN1Dict([('unavailable', 0), ('forward', 1), ('reverse', 2), ('both', 3)])
    DirectionOfUse._ext = None
    
    #-----< DistanceUnits >-----#
    DistanceUnits = ENUM(name='DistanceUnits', mode=MODE_TYPE)
    DistanceUnits._cont = ASN1Dict([('centimeter', 0), ('cm2-5', 1), ('decimeter', 2), ('meter', 3), ('kilometer', 4), ('foot', 5), ('yard', 6), ('mile', 7)])
    DistanceUnits._ext = None
    
    #-----< DMinute >-----#
    DMinute = INT(name='DMinute', mode=MODE_TYPE)
    DMinute._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=60)], ev=None, er=[])
    
    #-----< DMonth >-----#
    DMonth = INT(name='DMonth', mode=MODE_TYPE)
    DMonth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=12)], ev=None, er=[])
    
    #-----< DOffset >-----#
    DOffset = INT(name='DOffset', mode=MODE_TYPE)
    DOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-840, ub=840)], ev=None, er=[])
    
    #-----< DrivenLineOffsetLg >-----#
    DrivenLineOffsetLg = INT(name='DrivenLineOffsetLg', mode=MODE_TYPE)
    DrivenLineOffsetLg._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    
    #-----< DrivenLineOffsetSm >-----#
    DrivenLineOffsetSm = INT(name='DrivenLineOffsetSm', mode=MODE_TYPE)
    DrivenLineOffsetSm._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2047, ub=2047)], ev=None, er=[])
    
    #-----< DrivingWheelAngle >-----#
    DrivingWheelAngle = INT(name='DrivingWheelAngle', mode=MODE_TYPE)
    DrivingWheelAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    
    #-----< DSecond >-----#
    DSecond = INT(name='DSecond', mode=MODE_TYPE)
    DSecond._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< DSRCmsgID >-----#
    DSRCmsgID = INT(name='DSRCmsgID', mode=MODE_TYPE)
    DSRCmsgID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< reservedMessageId-D >-----#
    reservedMessageId_D = INT(name='reservedMessageId-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    reservedMessageId_D._val = 0
    
    #-----< alaCarteMessage-D >-----#
    alaCarteMessage_D = INT(name='alaCarteMessage-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    alaCarteMessage_D._val = 1
    
    #-----< basicSafetyMessage-D >-----#
    basicSafetyMessage_D = INT(name='basicSafetyMessage-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    basicSafetyMessage_D._val = 2
    
    #-----< basicSafetyMessageVerbose-D >-----#
    basicSafetyMessageVerbose_D = INT(name='basicSafetyMessageVerbose-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    basicSafetyMessageVerbose_D._val = 3
    
    #-----< commonSafetyRequest-D >-----#
    commonSafetyRequest_D = INT(name='commonSafetyRequest-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    commonSafetyRequest_D._val = 4
    
    #-----< emergencyVehicleAlert-D >-----#
    emergencyVehicleAlert_D = INT(name='emergencyVehicleAlert-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    emergencyVehicleAlert_D._val = 5
    
    #-----< intersectionCollision-D >-----#
    intersectionCollision_D = INT(name='intersectionCollision-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    intersectionCollision_D._val = 6
    
    #-----< mapData-D >-----#
    mapData_D = INT(name='mapData-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    mapData_D._val = 7
    
    #-----< nmeaCorrections-D >-----#
    nmeaCorrections_D = INT(name='nmeaCorrections-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    nmeaCorrections_D._val = 8
    
    #-----< probeDataManagement-D >-----#
    probeDataManagement_D = INT(name='probeDataManagement-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    probeDataManagement_D._val = 9
    
    #-----< probeVehicleData-D >-----#
    probeVehicleData_D = INT(name='probeVehicleData-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    probeVehicleData_D._val = 10
    
    #-----< roadSideAlert-D >-----#
    roadSideAlert_D = INT(name='roadSideAlert-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    roadSideAlert_D._val = 11
    
    #-----< rtcmCorrections-D >-----#
    rtcmCorrections_D = INT(name='rtcmCorrections-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    rtcmCorrections_D._val = 12
    
    #-----< signalPhaseAndTimingMessage-D >-----#
    signalPhaseAndTimingMessage_D = INT(name='signalPhaseAndTimingMessage-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    signalPhaseAndTimingMessage_D._val = 13
    
    #-----< signalRequestMessage-D >-----#
    signalRequestMessage_D = INT(name='signalRequestMessage-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    signalRequestMessage_D._val = 14
    
    #-----< signalStatusMessage-D >-----#
    signalStatusMessage_D = INT(name='signalStatusMessage-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    signalStatusMessage_D._val = 15
    
    #-----< travelerInformation-D >-----#
    travelerInformation_D = INT(name='travelerInformation-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    travelerInformation_D._val = 16
    
    #-----< uperFrame-D >-----#
    uperFrame_D = INT(name='uperFrame-D', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    uperFrame_D._val = 17
    
    #-----< mapData >-----#
    mapData = INT(name='mapData', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    mapData._val = 18
    
    #-----< signalPhaseAndTimingMessage >-----#
    signalPhaseAndTimingMessage = INT(name='signalPhaseAndTimingMessage', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    signalPhaseAndTimingMessage._val = 19
    
    #-----< basicSafetyMessage >-----#
    basicSafetyMessage = INT(name='basicSafetyMessage', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    basicSafetyMessage._val = 20
    
    #-----< commonSafetyRequest >-----#
    commonSafetyRequest = INT(name='commonSafetyRequest', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    commonSafetyRequest._val = 21
    
    #-----< emergencyVehicleAlert >-----#
    emergencyVehicleAlert = INT(name='emergencyVehicleAlert', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    emergencyVehicleAlert._val = 22
    
    #-----< intersectionCollision >-----#
    intersectionCollision = INT(name='intersectionCollision', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    intersectionCollision._val = 23
    
    #-----< nmeaCorrections >-----#
    nmeaCorrections = INT(name='nmeaCorrections', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    nmeaCorrections._val = 24
    
    #-----< probeDataManagement >-----#
    probeDataManagement = INT(name='probeDataManagement', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    probeDataManagement._val = 25
    
    #-----< probeVehicleData >-----#
    probeVehicleData = INT(name='probeVehicleData', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    probeVehicleData._val = 26
    
    #-----< roadSideAlert >-----#
    roadSideAlert = INT(name='roadSideAlert', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    roadSideAlert._val = 27
    
    #-----< rtcmCorrections >-----#
    rtcmCorrections = INT(name='rtcmCorrections', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    rtcmCorrections._val = 28
    
    #-----< signalRequestMessage >-----#
    signalRequestMessage = INT(name='signalRequestMessage', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    signalRequestMessage._val = 29
    
    #-----< signalStatusMessage >-----#
    signalStatusMessage = INT(name='signalStatusMessage', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    signalStatusMessage._val = 30
    
    #-----< travelerInformation >-----#
    travelerInformation = INT(name='travelerInformation', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    travelerInformation._val = 31
    
    #-----< personalSafetyMessage >-----#
    personalSafetyMessage = INT(name='personalSafetyMessage', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    personalSafetyMessage._val = 32
    
    #-----< testMessage00 >-----#
    testMessage00 = INT(name='testMessage00', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage00._val = 240
    
    #-----< testMessage01 >-----#
    testMessage01 = INT(name='testMessage01', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage01._val = 241
    
    #-----< testMessage02 >-----#
    testMessage02 = INT(name='testMessage02', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage02._val = 242
    
    #-----< testMessage03 >-----#
    testMessage03 = INT(name='testMessage03', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage03._val = 243
    
    #-----< testMessage04 >-----#
    testMessage04 = INT(name='testMessage04', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage04._val = 244
    
    #-----< testMessage05 >-----#
    testMessage05 = INT(name='testMessage05', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage05._val = 245
    
    #-----< testMessage06 >-----#
    testMessage06 = INT(name='testMessage06', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage06._val = 246
    
    #-----< testMessage07 >-----#
    testMessage07 = INT(name='testMessage07', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage07._val = 247
    
    #-----< testMessage08 >-----#
    testMessage08 = INT(name='testMessage08', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage08._val = 248
    
    #-----< testMessage09 >-----#
    testMessage09 = INT(name='testMessage09', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage09._val = 249
    
    #-----< testMessage10 >-----#
    testMessage10 = INT(name='testMessage10', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage10._val = 250
    
    #-----< testMessage11 >-----#
    testMessage11 = INT(name='testMessage11', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage11._val = 251
    
    #-----< testMessage12 >-----#
    testMessage12 = INT(name='testMessage12', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage12._val = 252
    
    #-----< testMessage13 >-----#
    testMessage13 = INT(name='testMessage13', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage13._val = 253
    
    #-----< testMessage14 >-----#
    testMessage14 = INT(name='testMessage14', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage14._val = 254
    
    #-----< testMessage15 >-----#
    testMessage15 = INT(name='testMessage15', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'DSRCmsgID')))
    testMessage15._val = 255
    
    #-----< Duration >-----#
    Duration = INT(name='Duration', mode=MODE_TYPE)
    Duration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3600)], ev=None, er=[])
    
    #-----< DYear >-----#
    DYear = INT(name='DYear', mode=MODE_TYPE)
    DYear._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< ElevationConfidence >-----#
    ElevationConfidence = ENUM(name='ElevationConfidence', mode=MODE_TYPE)
    ElevationConfidence._cont = ASN1Dict([('unavailable', 0), ('elev-500-00', 1), ('elev-200-00', 2), ('elev-100-00', 3), ('elev-050-00', 4), ('elev-020-00', 5), ('elev-010-00', 6), ('elev-005-00', 7), ('elev-002-00', 8), ('elev-001-00', 9), ('elev-000-50', 10), ('elev-000-20', 11), ('elev-000-10', 12), ('elev-000-05', 13), ('elev-000-02', 14), ('elev-000-01', 15)])
    ElevationConfidence._ext = None
    
    #-----< Elevation >-----#
    Elevation = INT(name='Elevation', mode=MODE_TYPE)
    Elevation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=61439)], ev=None, er=[])
    
    #-----< Extent >-----#
    Extent = ENUM(name='Extent', mode=MODE_TYPE)
    Extent._cont = ASN1Dict([('useInstantlyOnly', 0), ('useFor3meters', 1), ('useFor10meters', 2), ('useFor50meters', 3), ('useFor100meters', 4), ('useFor500meters', 5), ('useFor1000meters', 6), ('useFor5000meters', 7), ('useFor10000meters', 8), ('useFor50000meters', 9), ('useFor100000meters', 10), ('useFor500000meters', 11), ('useFor1000000meters', 12), ('useFor5000000meters', 13), ('useFor10000000meters', 14), ('forever', 15)])
    Extent._ext = None
    
    #-----< ExteriorLights >-----#
    ExteriorLights = BIT_STR(name='ExteriorLights', mode=MODE_TYPE)
    ExteriorLights._cont = ASN1Dict([('lowBeamHeadlightsOn', 0), ('highBeamHeadlightsOn', 1), ('leftTurnSignalOn', 2), ('rightTurnSignalOn', 3), ('hazardSignalOn', 4), ('automaticLightControlOn', 5), ('daytimeRunningLightsOn', 6), ('fogLightOn', 7), ('parkingLightsOn', 8)])
    ExteriorLights._const_sz = ASN1Set(rv=[9], rr=[], ev=[], er=[])
    
    #-----< FuelType >-----#
    FuelType = INT(name='FuelType', mode=MODE_TYPE)
    FuelType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< unknownFuel >-----#
    unknownFuel = INT(name='unknownFuel', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    unknownFuel._val = 0
    
    #-----< gasoline >-----#
    gasoline = INT(name='gasoline', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    gasoline._val = 1
    
    #-----< ethanol >-----#
    ethanol = INT(name='ethanol', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    ethanol._val = 2
    
    #-----< diesel >-----#
    diesel = INT(name='diesel', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    diesel._val = 3
    
    #-----< electric >-----#
    electric = INT(name='electric', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    electric._val = 4
    
    #-----< hybrid >-----#
    hybrid = INT(name='hybrid', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    hybrid._val = 5
    
    #-----< hydrogen >-----#
    hydrogen = INT(name='hydrogen', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    hydrogen._val = 6
    
    #-----< natGasLiquid >-----#
    natGasLiquid = INT(name='natGasLiquid', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    natGasLiquid._val = 7
    
    #-----< natGasComp >-----#
    natGasComp = INT(name='natGasComp', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    natGasComp._val = 8
    
    #-----< propane >-----#
    propane = INT(name='propane', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'FuelType')))
    propane._val = 9
    
    #-----< FurtherInfoID >-----#
    FurtherInfoID = OCT_STR(name='FurtherInfoID', mode=MODE_TYPE)
    FurtherInfoID._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< GNSSstatus >-----#
    GNSSstatus = BIT_STR(name='GNSSstatus', mode=MODE_TYPE)
    GNSSstatus._cont = ASN1Dict([('unavailable', 0), ('isHealthy', 1), ('isMonitored', 2), ('baseStationType', 3), ('aPDOPofUnder5', 4), ('inViewOfUnder5', 5), ('localCorrectionsPresent', 6), ('networkCorrectionsPresent', 7)])
    GNSSstatus._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< GrossDistance >-----#
    GrossDistance = INT(name='GrossDistance', mode=MODE_TYPE)
    GrossDistance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< GrossSpeed >-----#
    GrossSpeed = INT(name='GrossSpeed', mode=MODE_TYPE)
    GrossSpeed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< HeadingConfidence >-----#
    HeadingConfidence = ENUM(name='HeadingConfidence', mode=MODE_TYPE)
    HeadingConfidence._cont = ASN1Dict([('unavailable', 0), ('prec10deg', 1), ('prec05deg', 2), ('prec01deg', 3), ('prec0-1deg', 4), ('prec0-05deg', 5), ('prec0-01deg', 6), ('prec0-0125deg', 7)])
    HeadingConfidence._ext = None
    
    #-----< Heading >-----#
    Heading = INT(name='Heading', mode=MODE_TYPE)
    Heading._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=28800)], ev=None, er=[])
    
    #-----< HeadingSlice >-----#
    HeadingSlice = BIT_STR(name='HeadingSlice', mode=MODE_TYPE)
    HeadingSlice._cont = ASN1Dict([('from000-0to022-5degrees', 0), ('from022-5to045-0degrees', 1), ('from045-0to067-5degrees', 2), ('from067-5to090-0degrees', 3), ('from090-0to112-5degrees', 4), ('from112-5to135-0degrees', 5), ('from135-0to157-5degrees', 6), ('from157-5to180-0degrees', 7), ('from180-0to202-5degrees', 8), ('from202-5to225-0degrees', 9), ('from225-0to247-5degrees', 10), ('from247-5to270-0degrees', 11), ('from270-0to292-5degrees', 12), ('from292-5to315-0degrees', 13), ('from315-0to337-5degrees', 14), ('from337-5to360-0degrees', 15)])
    HeadingSlice._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< IntersectionID >-----#
    IntersectionID = INT(name='IntersectionID', mode=MODE_TYPE)
    IntersectionID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< IntersectionStatusObject >-----#
    IntersectionStatusObject = BIT_STR(name='IntersectionStatusObject', mode=MODE_TYPE)
    IntersectionStatusObject._cont = ASN1Dict([('manualControlIsEnabled', 0), ('stopTimeIsActivated', 1), ('failureFlash', 2), ('preemptIsActive', 3), ('signalPriorityIsActive', 4), ('fixedTimeOperation', 5), ('trafficDependentOperation', 6), ('standbyOperation', 7), ('failureMode', 8), ('off', 9), ('recentMAPmessageUpdate', 10), ('recentChangeInMAPassignedLanesIDsUsed', 11), ('noValidMAPisAvailableAtThisTime', 12), ('noValidSPATisAvailableAtThisTime', 13)])
    IntersectionStatusObject._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< IsDolly >-----#
    IsDolly = BOOL(name='IsDolly', mode=MODE_TYPE)
    
    #-----< Iso3833VehicleType >-----#
    Iso3833VehicleType = INT(name='Iso3833VehicleType', mode=MODE_TYPE)
    Iso3833VehicleType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    
    #-----< ITIStextPhrase >-----#
    ITIStextPhrase = STR_IA5(name='ITIStextPhrase', mode=MODE_TYPE)
    ITIStextPhrase._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< AxleLocation >-----#
    AxleLocation = INT(name='AxleLocation', mode=MODE_TYPE)
    AxleLocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AxleWeight >-----#
    AxleWeight = INT(name='AxleWeight', mode=MODE_TYPE)
    AxleWeight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64255)], ev=None, er=[])
    
    #-----< CargoWeight >-----#
    CargoWeight = INT(name='CargoWeight', mode=MODE_TYPE)
    CargoWeight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64255)], ev=None, er=[])
    
    #-----< DriveAxleLiftAirPressure >-----#
    DriveAxleLiftAirPressure = INT(name='DriveAxleLiftAirPressure', mode=MODE_TYPE)
    DriveAxleLiftAirPressure._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1000)], ev=None, er=[])
    
    #-----< DriveAxleLocation >-----#
    DriveAxleLocation = INT(name='DriveAxleLocation', mode=MODE_TYPE)
    DriveAxleLocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DriveAxleLubePressure >-----#
    DriveAxleLubePressure = INT(name='DriveAxleLubePressure', mode=MODE_TYPE)
    DriveAxleLubePressure._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=250)], ev=None, er=[])
    
    #-----< DriveAxleTemperature >-----#
    DriveAxleTemperature = INT(name='DriveAxleTemperature', mode=MODE_TYPE)
    DriveAxleTemperature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-40, ub=210)], ev=None, er=[])
    
    #-----< SteeringAxleLubePressure >-----#
    SteeringAxleLubePressure = INT(name='SteeringAxleLubePressure', mode=MODE_TYPE)
    SteeringAxleLubePressure._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=250)], ev=None, er=[])
    
    #-----< SteeringAxleTemperature >-----#
    SteeringAxleTemperature = INT(name='SteeringAxleTemperature', mode=MODE_TYPE)
    SteeringAxleTemperature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-40, ub=210)], ev=None, er=[])
    
    #-----< TireLeakageRate >-----#
    TireLeakageRate = INT(name='TireLeakageRate', mode=MODE_TYPE)
    TireLeakageRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64255)], ev=None, er=[])
    
    #-----< TireLocation >-----#
    TireLocation = INT(name='TireLocation', mode=MODE_TYPE)
    TireLocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TirePressureThresholdDetection >-----#
    TirePressureThresholdDetection = ENUM(name='TirePressureThresholdDetection', mode=MODE_TYPE)
    TirePressureThresholdDetection._cont = ASN1Dict([('noData', 0), ('overPressure', 1), ('noWarningPressure', 2), ('underPressure', 3), ('extremeUnderPressure', 4), ('undefined', 5), ('errorIndicator', 6), ('notAvailable', 7)])
    TirePressureThresholdDetection._ext = None
    
    #-----< TirePressure >-----#
    TirePressure = INT(name='TirePressure', mode=MODE_TYPE)
    TirePressure._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=250)], ev=None, er=[])
    
    #-----< TireTemp >-----#
    TireTemp = INT(name='TireTemp', mode=MODE_TYPE)
    TireTemp._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8736, ub=55519)], ev=None, er=[])
    
    #-----< TrailerWeight >-----#
    TrailerWeight = INT(name='TrailerWeight', mode=MODE_TYPE)
    TrailerWeight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64255)], ev=None, er=[])
    
    #-----< WheelEndElectFault >-----#
    WheelEndElectFault = ENUM(name='WheelEndElectFault', mode=MODE_TYPE)
    WheelEndElectFault._cont = ASN1Dict([('isOk', 0), ('isNotDefined', 1), ('isError', 2), ('isNotSupported', 3)])
    WheelEndElectFault._ext = None
    
    #-----< WheelSensorStatus >-----#
    WheelSensorStatus = ENUM(name='WheelSensorStatus', mode=MODE_TYPE)
    WheelSensorStatus._cont = ASN1Dict([('off', 0), ('on', 1), ('notDefined', 2), ('notSupported', 3)])
    WheelSensorStatus._ext = None
    
    #-----< LaneAttributes-Barrier >-----#
    LaneAttributes_Barrier = BIT_STR(name='LaneAttributes-Barrier', mode=MODE_TYPE)
    LaneAttributes_Barrier._cont = ASN1Dict([('median-RevocableLane', 0), ('median', 1), ('whiteLineHashing', 2), ('stripedLines', 3), ('doubleStripedLines', 4), ('trafficCones', 5), ('constructionBarrier', 6), ('trafficChannels', 7), ('lowCurbs', 8), ('highCurbs', 9)])
    LaneAttributes_Barrier._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Bike >-----#
    LaneAttributes_Bike = BIT_STR(name='LaneAttributes-Bike', mode=MODE_TYPE)
    LaneAttributes_Bike._cont = ASN1Dict([('bikeRevocableLane', 0), ('pedestrianUseAllowed', 1), ('isBikeFlyOverLane', 2), ('fixedCycleTime', 3), ('biDirectionalCycleTimes', 4), ('isolatedByBarrier', 5), ('unsignalizedSegmentsPresent', 6)])
    LaneAttributes_Bike._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Crosswalk >-----#
    LaneAttributes_Crosswalk = BIT_STR(name='LaneAttributes-Crosswalk', mode=MODE_TYPE)
    LaneAttributes_Crosswalk._cont = ASN1Dict([('crosswalkRevocableLane', 0), ('bicyleUseAllowed', 1), ('isXwalkFlyOverLane', 2), ('fixedCycleTime', 3), ('biDirectionalCycleTimes', 4), ('hasPushToWalkButton', 5), ('audioSupport', 6), ('rfSignalRequestPresent', 7), ('unsignalizedSegmentsPresent', 8)])
    LaneAttributes_Crosswalk._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Parking >-----#
    LaneAttributes_Parking = BIT_STR(name='LaneAttributes-Parking', mode=MODE_TYPE)
    LaneAttributes_Parking._cont = ASN1Dict([('parkingRevocableLane', 0), ('parallelParkingInUse', 1), ('headInParkingInUse', 2), ('doNotParkZone', 3), ('parkingForBusUse', 4), ('parkingForTaxiUse', 5), ('noPublicParkingUse', 6)])
    LaneAttributes_Parking._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Sidewalk >-----#
    LaneAttributes_Sidewalk = BIT_STR(name='LaneAttributes-Sidewalk', mode=MODE_TYPE)
    LaneAttributes_Sidewalk._cont = ASN1Dict([('sidewalk-RevocableLane', 0), ('bicyleUseAllowed', 1), ('isSidewalkFlyOverLane', 2), ('walkBikes', 3)])
    LaneAttributes_Sidewalk._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Striping >-----#
    LaneAttributes_Striping = BIT_STR(name='LaneAttributes-Striping', mode=MODE_TYPE)
    LaneAttributes_Striping._cont = ASN1Dict([('stripeToConnectingLanesRevocableLane', 0), ('stripeDrawOnLeft', 1), ('stripeDrawOnRight', 2), ('stripeToConnectingLanesLeft', 3), ('stripeToConnectingLanesRight', 4), ('stripeToConnectingLanesAhead', 5)])
    LaneAttributes_Striping._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-TrackedVehicle >-----#
    LaneAttributes_TrackedVehicle = BIT_STR(name='LaneAttributes-TrackedVehicle', mode=MODE_TYPE)
    LaneAttributes_TrackedVehicle._cont = ASN1Dict([('spec-RevocableLane', 0), ('spec-commuterRailRoadTrack', 1), ('spec-lightRailRoadTrack', 2), ('spec-heavyRailRoadTrack', 3), ('spec-otherRailType', 4)])
    LaneAttributes_TrackedVehicle._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< LaneAttributes-Vehicle >-----#
    LaneAttributes_Vehicle = BIT_STR(name='LaneAttributes-Vehicle', mode=MODE_TYPE)
    LaneAttributes_Vehicle._cont = ASN1Dict([('isVehicleRevocableLane', 0), ('isVehicleFlyOverLane', 1), ('hovLaneUseOnly', 2), ('restrictedToBusUse', 3), ('restrictedToTaxiUse', 4), ('restrictedFromPublicUse', 5), ('hasIRbeaconCoverage', 6), ('permissionOnRequest', 7)])
    LaneAttributes_Vehicle._const_sz = ASN1Set(rv=[8], rr=[], ev=[], er=[])
    
    #-----< LaneConnectionID >-----#
    LaneConnectionID = INT(name='LaneConnectionID', mode=MODE_TYPE)
    LaneConnectionID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< LaneDirection >-----#
    LaneDirection = BIT_STR(name='LaneDirection', mode=MODE_TYPE)
    LaneDirection._cont = ASN1Dict([('ingressPath', 0), ('egressPath', 1)])
    LaneDirection._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< LaneID >-----#
    LaneID = INT(name='LaneID', mode=MODE_TYPE)
    LaneID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< LaneSharing >-----#
    LaneSharing = BIT_STR(name='LaneSharing', mode=MODE_TYPE)
    LaneSharing._cont = ASN1Dict([('overlappingLaneDescriptionProvided', 0), ('multipleLanesTreatedAsOneLane', 1), ('otherNonMotorizedTrafficTypes', 2), ('individualMotorizedVehicleTraffic', 3), ('busVehicleTraffic', 4), ('taxiVehicleTraffic', 5), ('pedestriansTraffic', 6), ('cyclistVehicleTraffic', 7), ('trackedVehicleTraffic', 8), ('pedestrianTraffic', 9)])
    LaneSharing._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< LaneWidth >-----#
    LaneWidth = INT(name='LaneWidth', mode=MODE_TYPE)
    LaneWidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< Latitude >-----#
    Latitude = INT(name='Latitude', mode=MODE_TYPE)
    Latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-900000000, ub=900000001)], ev=None, er=[])
    
    #-----< LayerID >-----#
    LayerID = INT(name='LayerID', mode=MODE_TYPE)
    LayerID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    
    #-----< LayerType >-----#
    LayerType = ENUM(name='LayerType', mode=MODE_TYPE)
    LayerType._cont = ASN1Dict([('none', 0), ('mixedContent', 1), ('generalMapData', 2), ('intersectionData', 3), ('curveData', 4), ('roadwaySectionData', 5), ('parkingAreaData', 6), ('sharedLaneData', 7)])
    LayerType._ext = []
    
    #-----< LightbarInUse >-----#
    LightbarInUse = ENUM(name='LightbarInUse', mode=MODE_TYPE)
    LightbarInUse._cont = ASN1Dict([('unavailable', 0), ('notInUse', 1), ('inUse', 2), ('yellowCautionLights', 3), ('schooldBusLights', 4), ('arrowSignsActive', 5), ('slowMovingVehicle', 6), ('freqStops', 7)])
    LightbarInUse._ext = None
    
    #-----< Longitude >-----#
    Longitude = INT(name='Longitude', mode=MODE_TYPE)
    Longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1799999999, ub=1800000001)], ev=None, er=[])
    
    #-----< Location-quality >-----#
    Location_quality = ENUM(name='Location-quality', mode=MODE_TYPE)
    Location_quality._cont = ASN1Dict([('loc-qual-bt1m', 0), ('loc-qual-bt5m', 1), ('loc-qual-bt12m', 2), ('loc-qual-bt50m', 3), ('loc-qual-bt125m', 4), ('loc-qual-bt500m', 5), ('loc-qual-bt1250m', 6), ('loc-qual-unknown', 7)])
    Location_quality._ext = None
    
    #-----< Location-tech >-----#
    Location_tech = ENUM(name='Location-tech', mode=MODE_TYPE)
    Location_tech._cont = ASN1Dict([('loc-tech-unknown', 0), ('loc-tech-GNSS', 1), ('loc-tech-DGPS', 2), ('loc-tech-RTK', 3), ('loc-tech-PPP', 4), ('loc-tech-drGPS', 5), ('loc-tech-drDGPS', 6), ('loc-tech-dr', 7), ('loc-tech-nav', 8), ('loc-tech-fault', 9)])
    Location_tech._ext = []
    
    #-----< MergeDivergeNodeAngle >-----#
    MergeDivergeNodeAngle = INT(name='MergeDivergeNodeAngle', mode=MODE_TYPE)
    MergeDivergeNodeAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-180, ub=180)], ev=None, er=[])
    
    #-----< MessageBLOB >-----#
    MessageBLOB = OCT_STR(name='MessageBLOB', mode=MODE_TYPE)
    MessageBLOB._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=10, ub=2000)], ev=None, er=[])
    
    #-----< MinuteOfTheYear >-----#
    MinuteOfTheYear = INT(name='MinuteOfTheYear', mode=MODE_TYPE)
    MinuteOfTheYear._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=527040)], ev=None, er=[])
    
    #-----< MinutesDuration >-----#
    MinutesDuration = INT(name='MinutesDuration', mode=MODE_TYPE)
    MinutesDuration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32000)], ev=None, er=[])
    
    #-----< MotorizedPropelledType >-----#
    MotorizedPropelledType = ENUM(name='MotorizedPropelledType', mode=MODE_TYPE)
    MotorizedPropelledType._cont = ASN1Dict([('unavailable', 0), ('otherTypes', 1), ('wheelChair', 2), ('bicycle', 3), ('scooter', 4), ('selfBalancingDevice', 5)])
    MotorizedPropelledType._ext = []
    
    #-----< MovementPhaseState >-----#
    MovementPhaseState = ENUM(name='MovementPhaseState', mode=MODE_TYPE)
    MovementPhaseState._cont = ASN1Dict([('unavailable', 0), ('dark', 1), ('stop-Then-Proceed', 2), ('stop-And-Remain', 3), ('pre-Movement', 4), ('permissive-Movement-Allowed', 5), ('protected-Movement-Allowed', 6), ('permissive-clearance', 7), ('protected-clearance', 8), ('caution-Conflicting-Traffic', 9)])
    MovementPhaseState._ext = None
    
    #-----< MsgCount >-----#
    MsgCount = INT(name='MsgCount', mode=MODE_TYPE)
    MsgCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< MsgCRC >-----#
    MsgCRC = OCT_STR(name='MsgCRC', mode=MODE_TYPE)
    MsgCRC._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< MultiVehicleResponse >-----#
    MultiVehicleResponse = ENUM(name='MultiVehicleResponse', mode=MODE_TYPE)
    MultiVehicleResponse._cont = ASN1Dict([('unavailable', 0), ('singleVehicle', 1), ('multiVehicle', 2), ('reserved', 3)])
    MultiVehicleResponse._ext = None
    
    #-----< MUTCDCode >-----#
    MUTCDCode = ENUM(name='MUTCDCode', mode=MODE_TYPE)
    MUTCDCode._cont = ASN1Dict([('none', 0), ('regulatory', 1), ('warning', 2), ('maintenance', 3), ('motoristService', 4), ('guide', 5), ('rec', 6)])
    MUTCDCode._ext = []
    
    #-----< NMEA-MsgType >-----#
    NMEA_MsgType = INT(name='NMEA-MsgType', mode=MODE_TYPE)
    NMEA_MsgType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< NMEA-Payload >-----#
    NMEA_Payload = OCT_STR(name='NMEA-Payload', mode=MODE_TYPE)
    NMEA_Payload._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1023)], ev=None, er=[])
    
    #-----< NMEA-Revision >-----#
    NMEA_Revision = ENUM(name='NMEA-Revision', mode=MODE_TYPE)
    NMEA_Revision._cont = ASN1Dict([('unknown', 0), ('reserved', 1), ('rev1', 2), ('rev2', 3), ('rev3', 4), ('rev4', 5), ('rev5', 6)])
    NMEA_Revision._ext = []
    
    #-----< NodeAttributeLL >-----#
    NodeAttributeLL = ENUM(name='NodeAttributeLL', mode=MODE_TYPE)
    NodeAttributeLL._cont = ASN1Dict([('reserved', 0), ('stopLine', 1), ('roundedCapStyleA', 2), ('roundedCapStyleB', 3), ('mergePoint', 4), ('divergePoint', 5), ('downstreamStopLine', 6), ('downstreamStartNode', 7), ('closedToTraffic', 8), ('safeIsland', 9), ('curbPresentAtStepOff', 10), ('hydrantPresent', 11)])
    NodeAttributeLL._ext = []
    
    #-----< NodeAttributeXY >-----#
    NodeAttributeXY = ENUM(name='NodeAttributeXY', mode=MODE_TYPE)
    NodeAttributeXY._cont = ASN1Dict([('reserved', 0), ('stopLine', 1), ('roundedCapStyleA', 2), ('roundedCapStyleB', 3), ('mergePoint', 4), ('divergePoint', 5), ('downstreamStopLine', 6), ('downstreamStartNode', 7), ('closedToTraffic', 8), ('safeIsland', 9), ('curbPresentAtStepOff', 10), ('hydrantPresent', 11)])
    NodeAttributeXY._ext = []
    
    #-----< NumberOfParticipantsInCluster >-----#
    NumberOfParticipantsInCluster = ENUM(name='NumberOfParticipantsInCluster', mode=MODE_TYPE)
    NumberOfParticipantsInCluster._cont = ASN1Dict([('unavailable', 0), ('small', 1), ('medium', 2), ('large', 3)])
    NumberOfParticipantsInCluster._ext = []
    
    #-----< ObjectCount >-----#
    ObjectCount = INT(name='ObjectCount', mode=MODE_TYPE)
    ObjectCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< ObstacleDirection >-----#
    ObstacleDirection = INT(name='ObstacleDirection', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'Angle')))
    
    #-----< ObstacleDistance >-----#
    ObstacleDistance = INT(name='ObstacleDistance', mode=MODE_TYPE)
    ObstacleDistance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< Offset-B09 >-----#
    Offset_B09 = INT(name='Offset-B09', mode=MODE_TYPE)
    Offset_B09._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-256, ub=255)], ev=None, er=[])
    
    #-----< Offset-B10 >-----#
    Offset_B10 = INT(name='Offset-B10', mode=MODE_TYPE)
    Offset_B10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    
    #-----< Offset-B11 >-----#
    Offset_B11 = INT(name='Offset-B11', mode=MODE_TYPE)
    Offset_B11._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    
    #-----< Offset-B12 >-----#
    Offset_B12 = INT(name='Offset-B12', mode=MODE_TYPE)
    Offset_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    
    #-----< Offset-B13 >-----#
    Offset_B13 = INT(name='Offset-B13', mode=MODE_TYPE)
    Offset_B13._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-4096, ub=4095)], ev=None, er=[])
    
    #-----< Offset-B14 >-----#
    Offset_B14 = INT(name='Offset-B14', mode=MODE_TYPE)
    Offset_B14._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    
    #-----< Offset-B16 >-----#
    Offset_B16 = INT(name='Offset-B16', mode=MODE_TYPE)
    Offset_B16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    
    #-----< OffsetLL-B12 >-----#
    OffsetLL_B12 = INT(name='OffsetLL-B12', mode=MODE_TYPE)
    OffsetLL_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    
    #-----< OffsetLL-B14 >-----#
    OffsetLL_B14 = INT(name='OffsetLL-B14', mode=MODE_TYPE)
    OffsetLL_B14._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8192, ub=8191)], ev=None, er=[])
    
    #-----< OffsetLL-B16 >-----#
    OffsetLL_B16 = INT(name='OffsetLL-B16', mode=MODE_TYPE)
    OffsetLL_B16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    
    #-----< OffsetLL-B18 >-----#
    OffsetLL_B18 = INT(name='OffsetLL-B18', mode=MODE_TYPE)
    OffsetLL_B18._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131072, ub=131071)], ev=None, er=[])
    
    #-----< OffsetLL-B22 >-----#
    OffsetLL_B22 = INT(name='OffsetLL-B22', mode=MODE_TYPE)
    OffsetLL_B22._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2097152, ub=2097151)], ev=None, er=[])
    
    #-----< OffsetLL-B24 >-----#
    OffsetLL_B24 = INT(name='OffsetLL-B24', mode=MODE_TYPE)
    OffsetLL_B24._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8388608, ub=8388607)], ev=None, er=[])
    
    #-----< PayloadData >-----#
    PayloadData = OCT_STR(name='PayloadData', mode=MODE_TYPE)
    PayloadData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2048)], ev=None, er=[])
    
    #-----< PedestrianBicycleDetect >-----#
    PedestrianBicycleDetect = BOOL(name='PedestrianBicycleDetect', mode=MODE_TYPE)
    
    #-----< HumanPropelledType >-----#
    HumanPropelledType = ENUM(name='HumanPropelledType', mode=MODE_TYPE)
    HumanPropelledType._cont = ASN1Dict([('unavailable', 0), ('otherTypes', 1), ('onFoot', 2), ('skateboard', 3), ('pushOrKickScooter', 4), ('wheelchair', 5)])
    HumanPropelledType._ext = []
    
    #-----< PersonalAssistive >-----#
    PersonalAssistive = BIT_STR(name='PersonalAssistive', mode=MODE_TYPE)
    PersonalAssistive._cont = ASN1Dict([('unavailable', 0), ('otherType', 1), ('vision', 2), ('hearing', 3), ('movement', 4), ('cognition', 5)])
    PersonalAssistive._const_sz = ASN1Set(rv=[6], rr=[], ev=[], er=[])
    
    #-----< PersonalClusterRadius >-----#
    PersonalClusterRadius = INT(name='PersonalClusterRadius', mode=MODE_TYPE)
    PersonalClusterRadius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=100)], ev=None, er=[])
    
    #-----< PersonalCrossingInProgress >-----#
    PersonalCrossingInProgress = BOOL(name='PersonalCrossingInProgress', mode=MODE_TYPE)
    
    #-----< PersonalCrossingRequest >-----#
    PersonalCrossingRequest = BOOL(name='PersonalCrossingRequest', mode=MODE_TYPE)
    
    #-----< PersonalDeviceUsageState >-----#
    PersonalDeviceUsageState = BIT_STR(name='PersonalDeviceUsageState', mode=MODE_TYPE)
    PersonalDeviceUsageState._cont = ASN1Dict([('unavailable', 0), ('other', 1), ('idle', 2), ('listeningToAudio', 3), ('typing', 4), ('calling', 5), ('playingGames', 6), ('reading', 7), ('viewing', 8)])
    PersonalDeviceUsageState._const_sz = ASN1Set(rv=[9], rr=[], ev=[], er=[])
    
    #-----< PersonalDeviceUserType >-----#
    PersonalDeviceUserType = ENUM(name='PersonalDeviceUserType', mode=MODE_TYPE)
    PersonalDeviceUserType._cont = ASN1Dict([('unavailable', 0), ('aPEDESTRIAN', 1), ('aPEDALCYCLIST', 2), ('aPUBLICSAFETYWORKER', 3), ('anANIMAL', 4)])
    PersonalDeviceUserType._ext = []
    
    #-----< PivotingAllowed >-----#
    PivotingAllowed = BOOL(name='PivotingAllowed', mode=MODE_TYPE)
    
    #-----< PositionConfidence >-----#
    PositionConfidence = ENUM(name='PositionConfidence', mode=MODE_TYPE)
    PositionConfidence._cont = ASN1Dict([('unavailable', 0), ('a500m', 1), ('a200m', 2), ('a100m', 3), ('a50m', 4), ('a20m', 5), ('a10m', 6), ('a5m', 7), ('a2m', 8), ('a1m', 9), ('a50cm', 10), ('a20cm', 11), ('a10cm', 12), ('a5cm', 13), ('a2cm', 14), ('a1cm', 15)])
    PositionConfidence._ext = None
    
    #-----< PrioritizationResponseStatus >-----#
    PrioritizationResponseStatus = ENUM(name='PrioritizationResponseStatus', mode=MODE_TYPE)
    PrioritizationResponseStatus._cont = ASN1Dict([('unknown', 0), ('requested', 1), ('processing', 2), ('watchOtherTraffic', 3), ('granted', 4), ('rejected', 5), ('maxPresence', 6), ('reserviceLocked', 7)])
    PrioritizationResponseStatus._ext = []
    
    #-----< Priority >-----#
    Priority = OCT_STR(name='Priority', mode=MODE_TYPE)
    Priority._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< PriorityRequestType >-----#
    PriorityRequestType = ENUM(name='PriorityRequestType', mode=MODE_TYPE)
    PriorityRequestType._cont = ASN1Dict([('priorityRequestTypeReserved', 0), ('priorityRequest', 1), ('priorityRequestUpdate', 2), ('priorityCancellation', 3)])
    PriorityRequestType._ext = []
    
    #-----< PrivilegedEventFlags >-----#
    PrivilegedEventFlags = BIT_STR(name='PrivilegedEventFlags', mode=MODE_TYPE)
    PrivilegedEventFlags._cont = ASN1Dict([('peUnavailable', 0), ('peEmergencyResponse', 1), ('peEmergencyLightsActive', 2), ('peEmergencySoundActive', 3), ('peNonEmergencyLightsActive', 4), ('peNonEmergencySoundActive', 5)])
    PrivilegedEventFlags._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< ProbeSegmentNumber >-----#
    ProbeSegmentNumber = INT(name='ProbeSegmentNumber', mode=MODE_TYPE)
    ProbeSegmentNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< PublicSafetyAndRoadWorkerActivity >-----#
    PublicSafetyAndRoadWorkerActivity = BIT_STR(name='PublicSafetyAndRoadWorkerActivity', mode=MODE_TYPE)
    PublicSafetyAndRoadWorkerActivity._cont = ASN1Dict([('unavailable', 0), ('workingOnRoad', 1), ('settingUpClosures', 2), ('respondingToEvents', 3), ('directingTraffic', 4), ('otherActivities', 5)])
    PublicSafetyAndRoadWorkerActivity._const_sz = ASN1Set(rv=[6], rr=[], ev=[], er=[])
    
    #-----< PublicSafetyDirectingTrafficSubType >-----#
    PublicSafetyDirectingTrafficSubType = BIT_STR(name='PublicSafetyDirectingTrafficSubType', mode=MODE_TYPE)
    PublicSafetyDirectingTrafficSubType._cont = ASN1Dict([('unavailable', 0), ('policeAndTrafficOfficers', 1), ('trafficControlPersons', 2), ('railroadCrossingGuards', 3), ('civilDefenseNationalGuardMilitaryPolice', 4), ('emergencyOrganizationPersonnel', 5), ('highwayServiceVehiclePersonnel', 6)])
    PublicSafetyDirectingTrafficSubType._const_sz = ASN1Set(rv=[7], rr=[], ev=[], er=[])
    
    #-----< PublicSafetyEventResponderWorkerType >-----#
    PublicSafetyEventResponderWorkerType = ENUM(name='PublicSafetyEventResponderWorkerType', mode=MODE_TYPE)
    PublicSafetyEventResponderWorkerType._cont = ASN1Dict([('unavailable', 0), ('towOperater', 1), ('fireAndEMSWorker', 2), ('aDOTWorker', 3), ('lawEnforcement', 4), ('hazmatResponder', 5), ('animalControlWorker', 6), ('otherPersonnel', 7)])
    PublicSafetyEventResponderWorkerType._ext = []
    
    #-----< RadiusOfCurvature >-----#
    RadiusOfCurvature = INT(name='RadiusOfCurvature', mode=MODE_TYPE)
    RadiusOfCurvature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    
    #-----< Radius-B12 >-----#
    Radius_B12 = INT(name='Radius-B12', mode=MODE_TYPE)
    Radius_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< RainSensor >-----#
    RainSensor = ENUM(name='RainSensor', mode=MODE_TYPE)
    RainSensor._cont = ASN1Dict([('none', 0), ('lightMist', 1), ('heavyMist', 2), ('lightRainOrDrizzle', 3), ('rain', 4), ('moderateRain', 5), ('heavyRain', 6), ('heavyDownpour', 7)])
    RainSensor._ext = None
    
    #-----< RegionId >-----#
    RegionId = INT(name='RegionId', mode=MODE_TYPE)
    RegionId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< noRegion >-----#
    noRegion = INT(name='noRegion', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'RegionId')))
    noRegion._val = 0
    
    #-----< addGrpA >-----#
    addGrpA = INT(name='addGrpA', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'RegionId')))
    addGrpA._val = 1
    
    #-----< addGrpB >-----#
    addGrpB = INT(name='addGrpB', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'RegionId')))
    addGrpB._val = 2
    
    #-----< addGrpC >-----#
    addGrpC = INT(name='addGrpC', mode=MODE_VALUE, typeref=ASN1RefType(('DSRC', 'RegionId')))
    addGrpC._val = 3
    
    #-----< RequestedItem >-----#
    RequestedItem = ENUM(name='RequestedItem', mode=MODE_TYPE)
    RequestedItem._cont = ASN1Dict([('reserved', 0), ('itemA', 1), ('itemB', 2), ('itemC', 3), ('itemD', 4), ('itemE', 5), ('itemF', 6), ('itemG', 7), ('itemI', 8), ('itemJ', 9), ('itemK', 10), ('itemL', 11), ('itemM', 12), ('itemN', 13), ('itemO', 14), ('itemP', 15), ('itemQ', 16)])
    RequestedItem._ext = []
    
    #-----< RequestID >-----#
    RequestID = INT(name='RequestID', mode=MODE_TYPE)
    RequestID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RequestImportanceLevel >-----#
    RequestImportanceLevel = ENUM(name='RequestImportanceLevel', mode=MODE_TYPE)
    RequestImportanceLevel._cont = ASN1Dict([('requestImportanceLevelUnKnown', 0), ('requestImportanceLevel1', 1), ('requestImportanceLevel2', 2), ('requestImportanceLevel3', 3), ('requestImportanceLevel4', 4), ('requestImportanceLevel5', 5), ('requestImportanceLevel6', 6), ('requestImportanceLevel7', 7), ('requestImportanceLevel8', 8), ('requestImportanceLevel9', 9), ('requestImportanceLevel10', 10), ('requestImportanceLevel11', 11), ('requestImportanceLevel12', 12), ('requestImportanceLevel13', 13), ('requestImportanceLevel14', 14), ('requestImportanceReserved', 15)])
    RequestImportanceLevel._ext = None
    
    #-----< RequestSubRole >-----#
    RequestSubRole = ENUM(name='RequestSubRole', mode=MODE_TYPE)
    RequestSubRole._cont = ASN1Dict([('requestSubRoleUnKnown', 0), ('requestSubRole1', 1), ('requestSubRole2', 2), ('requestSubRole3', 3), ('requestSubRole4', 4), ('requestSubRole5', 5), ('requestSubRole6', 6), ('requestSubRole7', 7), ('requestSubRole8', 8), ('requestSubRole9', 9), ('requestSubRole10', 10), ('requestSubRole11', 11), ('requestSubRole12', 12), ('requestSubRole13', 13), ('requestSubRole14', 14), ('requestSubRoleReserved', 15)])
    RequestSubRole._ext = None
    
    #-----< ResponseType >-----#
    ResponseType = ENUM(name='ResponseType', mode=MODE_TYPE)
    ResponseType._cont = ASN1Dict([('notInUseOrNotEquipped', 0), ('emergency', 1), ('nonEmergency', 2), ('pursuit', 3), ('stationary', 4), ('slowMoving', 5), ('stopAndGoMovement', 6)])
    ResponseType._ext = []
    
    #-----< RestrictionAppliesTo >-----#
    RestrictionAppliesTo = ENUM(name='RestrictionAppliesTo', mode=MODE_TYPE)
    RestrictionAppliesTo._cont = ASN1Dict([('none', 0), ('equippedTransit', 1), ('equippedTaxis', 2), ('equippedOther', 3), ('emissionCompliant', 4), ('equippedBicycle', 5), ('weightCompliant', 6), ('heightCompliant', 7), ('pedestrians', 8), ('slowMovingPersons', 9), ('wheelchairUsers', 10), ('visualDisabilities', 11), ('audioDisabilities', 12), ('otherUnknownDisabilities', 13)])
    RestrictionAppliesTo._ext = []
    
    #-----< RestrictionClassID >-----#
    RestrictionClassID = INT(name='RestrictionClassID', mode=MODE_TYPE)
    RestrictionClassID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RoadRegulatorID >-----#
    RoadRegulatorID = INT(name='RoadRegulatorID', mode=MODE_TYPE)
    RoadRegulatorID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< RoadSegmentID >-----#
    RoadSegmentID = INT(name='RoadSegmentID', mode=MODE_TYPE)
    RoadSegmentID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< RoadwayCrownAngle >-----#
    RoadwayCrownAngle = INT(name='RoadwayCrownAngle', mode=MODE_TYPE)
    RoadwayCrownAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    
    #-----< RTCM-Revision >-----#
    RTCM_Revision = ENUM(name='RTCM-Revision', mode=MODE_TYPE)
    RTCM_Revision._cont = ASN1Dict([('unknown', 0), ('rtcmRev2', 1), ('rtcmRev3', 2), ('reserved', 3)])
    RTCM_Revision._ext = []
    
    #-----< RTCMmessage >-----#
    RTCMmessage = OCT_STR(name='RTCMmessage', mode=MODE_TYPE)
    RTCMmessage._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1023)], ev=None, er=[])
    
    #-----< Scale-B12 >-----#
    Scale_B12 = INT(name='Scale-B12', mode=MODE_TYPE)
    Scale_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    
    #-----< SecondOfTime >-----#
    SecondOfTime = INT(name='SecondOfTime', mode=MODE_TYPE)
    SecondOfTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=61)], ev=None, er=[])
    
    #-----< SegmentAttributeLL >-----#
    SegmentAttributeLL = ENUM(name='SegmentAttributeLL', mode=MODE_TYPE)
    SegmentAttributeLL._cont = ASN1Dict([('reserved', 0), ('doNotBlock', 1), ('whiteLine', 2), ('mergingLaneLeft', 3), ('mergingLaneRight', 4), ('curbOnLeft', 5), ('curbOnRight', 6), ('loadingzoneOnLeft', 7), ('loadingzoneOnRight', 8), ('turnOutPointOnLeft', 9), ('turnOutPointOnRight', 10), ('adjacentParkingOnLeft', 11), ('adjacentParkingOnRight', 12), ('adjacentBikeLaneOnLeft', 13), ('adjacentBikeLaneOnRight', 14), ('sharedBikeLane', 15), ('bikeBoxInFront', 16), ('transitStopOnLeft', 17), ('transitStopOnRight', 18), ('transitStopInLane', 19), ('sharedWithTrackedVehicle', 20), ('safeIsland', 21), ('lowCurbsPresent', 22), ('rumbleStripPresent', 23), ('audibleSignalingPresent', 24), ('adaptiveTimingPresent', 25), ('rfSignalRequestPresent', 26), ('partialCurbIntrusion', 27), ('taperToLeft', 28), ('taperToRight', 29), ('taperToCenterLine', 30), ('parallelParking', 31), ('headInParking', 32), ('freeParking', 33), ('timeRestrictionsOnParking', 34), ('costToPark', 35), ('midBlockCurbPresent', 36), ('unEvenPavementPresent', 37)])
    SegmentAttributeLL._ext = []
    
    #-----< SegmentAttributeXY >-----#
    SegmentAttributeXY = ENUM(name='SegmentAttributeXY', mode=MODE_TYPE)
    SegmentAttributeXY._cont = ASN1Dict([('reserved', 0), ('doNotBlock', 1), ('whiteLine', 2), ('mergingLaneLeft', 3), ('mergingLaneRight', 4), ('curbOnLeft', 5), ('curbOnRight', 6), ('loadingzoneOnLeft', 7), ('loadingzoneOnRight', 8), ('turnOutPointOnLeft', 9), ('turnOutPointOnRight', 10), ('adjacentParkingOnLeft', 11), ('adjacentParkingOnRight', 12), ('adjacentBikeLaneOnLeft', 13), ('adjacentBikeLaneOnRight', 14), ('sharedBikeLane', 15), ('bikeBoxInFront', 16), ('transitStopOnLeft', 17), ('transitStopOnRight', 18), ('transitStopInLane', 19), ('sharedWithTrackedVehicle', 20), ('safeIsland', 21), ('lowCurbsPresent', 22), ('rumbleStripPresent', 23), ('audibleSignalingPresent', 24), ('adaptiveTimingPresent', 25), ('rfSignalRequestPresent', 26), ('partialCurbIntrusion', 27), ('taperToLeft', 28), ('taperToRight', 29), ('taperToCenterLine', 30), ('parallelParking', 31), ('headInParking', 32), ('freeParking', 33), ('timeRestrictionsOnParking', 34), ('costToPark', 35), ('midBlockCurbPresent', 36), ('unEvenPavementPresent', 37)])
    SegmentAttributeXY._ext = []
    
    #-----< SemiMajorAxisAccuracy >-----#
    SemiMajorAxisAccuracy = INT(name='SemiMajorAxisAccuracy', mode=MODE_TYPE)
    SemiMajorAxisAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SemiMajorAxisOrientation >-----#
    SemiMajorAxisOrientation = INT(name='SemiMajorAxisOrientation', mode=MODE_TYPE)
    SemiMajorAxisOrientation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< SemiMinorAxisAccuracy >-----#
    SemiMinorAxisAccuracy = INT(name='SemiMinorAxisAccuracy', mode=MODE_TYPE)
    SemiMinorAxisAccuracy._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SignalGroupID >-----#
    SignalGroupID = INT(name='SignalGroupID', mode=MODE_TYPE)
    SignalGroupID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SignalReqScheme >-----#
    SignalReqScheme = OCT_STR(name='SignalReqScheme', mode=MODE_TYPE)
    SignalReqScheme._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< SignPrority >-----#
    SignPrority = INT(name='SignPrority', mode=MODE_TYPE)
    SignPrority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< SirenInUse >-----#
    SirenInUse = ENUM(name='SirenInUse', mode=MODE_TYPE)
    SirenInUse._cont = ASN1Dict([('unavailable', 0), ('notInUse', 1), ('inUse', 2), ('reserved', 3)])
    SirenInUse._ext = None
    
    #-----< SpeedAdvice >-----#
    SpeedAdvice = INT(name='SpeedAdvice', mode=MODE_TYPE)
    SpeedAdvice._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=500)], ev=None, er=[])
    
    #-----< SpeedConfidence >-----#
    SpeedConfidence = ENUM(name='SpeedConfidence', mode=MODE_TYPE)
    SpeedConfidence._cont = ASN1Dict([('unavailable', 0), ('prec100ms', 1), ('prec10ms', 2), ('prec5ms', 3), ('prec1ms', 4), ('prec0-1ms', 5), ('prec0-05ms', 6), ('prec0-01ms', 7)])
    SpeedConfidence._ext = None
    
    #-----< SpeedLimitType >-----#
    SpeedLimitType = ENUM(name='SpeedLimitType', mode=MODE_TYPE)
    SpeedLimitType._cont = ASN1Dict([('unknown', 0), ('maxSpeedInSchoolZone', 1), ('maxSpeedInSchoolZoneWhenChildrenArePresent', 2), ('maxSpeedInConstructionZone', 3), ('vehicleMinSpeed', 4), ('vehicleMaxSpeed', 5), ('vehicleNightMaxSpeed', 6), ('truckMinSpeed', 7), ('truckMaxSpeed', 8), ('truckNightMaxSpeed', 9), ('vehiclesWithTrailersMinSpeed', 10), ('vehiclesWithTrailersMaxSpeed', 11), ('vehiclesWithTrailersNightMaxSpeed', 12)])
    SpeedLimitType._ext = []
    
    #-----< SpeedProfileMeasurement >-----#
    SpeedProfileMeasurement = INT(name='SpeedProfileMeasurement', mode=MODE_TYPE, typeref=ASN1RefType(('DSRC', 'GrossSpeed')))
    
    #-----< Speed >-----#
    Speed = INT(name='Speed', mode=MODE_TYPE)
    Speed._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    
    #-----< SSPindex >-----#
    SSPindex = INT(name='SSPindex', mode=MODE_TYPE)
    SSPindex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< StabilityControlStatus >-----#
    StabilityControlStatus = ENUM(name='StabilityControlStatus', mode=MODE_TYPE)
    StabilityControlStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('engaged', 3)])
    StabilityControlStatus._ext = None
    
    #-----< StationID >-----#
    StationID = INT(name='StationID', mode=MODE_TYPE)
    StationID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< SteeringWheelAngleConfidence >-----#
    SteeringWheelAngleConfidence = ENUM(name='SteeringWheelAngleConfidence', mode=MODE_TYPE)
    SteeringWheelAngleConfidence._cont = ASN1Dict([('unavailable', 0), ('prec2deg', 1), ('prec1deg', 2), ('prec0-02deg', 3)])
    SteeringWheelAngleConfidence._ext = None
    
    #-----< SteeringWheelAngleRateOfChange >-----#
    SteeringWheelAngleRateOfChange = INT(name='SteeringWheelAngleRateOfChange', mode=MODE_TYPE)
    SteeringWheelAngleRateOfChange._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    
    #-----< SteeringWheelAngle >-----#
    SteeringWheelAngle = INT(name='SteeringWheelAngle', mode=MODE_TYPE)
    SteeringWheelAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-126, ub=127)], ev=None, er=[])
    
    #-----< SunSensor >-----#
    SunSensor = INT(name='SunSensor', mode=MODE_TYPE)
    SunSensor._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1000)], ev=None, er=[])
    
    #-----< TemporaryID >-----#
    TemporaryID = OCT_STR(name='TemporaryID', mode=MODE_TYPE)
    TemporaryID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< TermDistance >-----#
    TermDistance = INT(name='TermDistance', mode=MODE_TYPE)
    TermDistance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30000)], ev=None, er=[])
    
    #-----< TermTime >-----#
    TermTime = INT(name='TermTime', mode=MODE_TYPE)
    TermTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1800)], ev=None, er=[])
    
    #-----< ThrottleConfidence >-----#
    ThrottleConfidence = ENUM(name='ThrottleConfidence', mode=MODE_TYPE)
    ThrottleConfidence._cont = ASN1Dict([('unavailable', 0), ('prec10percent', 1), ('prec1percent', 2), ('prec0-5percent', 3)])
    ThrottleConfidence._ext = None
    
    #-----< ThrottlePosition >-----#
    ThrottlePosition = INT(name='ThrottlePosition', mode=MODE_TYPE)
    ThrottlePosition._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=200)], ev=None, er=[])
    
    #-----< TimeConfidence >-----#
    TimeConfidence = ENUM(name='TimeConfidence', mode=MODE_TYPE)
    TimeConfidence._cont = ASN1Dict([('unavailable', 0), ('time-100-000', 1), ('time-050-000', 2), ('time-020-000', 3), ('time-010-000', 4), ('time-002-000', 5), ('time-001-000', 6), ('time-000-500', 7), ('time-000-200', 8), ('time-000-100', 9), ('time-000-050', 10), ('time-000-020', 11), ('time-000-010', 12), ('time-000-005', 13), ('time-000-002', 14), ('time-000-001', 15), ('time-000-000-5', 16), ('time-000-000-2', 17), ('time-000-000-1', 18), ('time-000-000-05', 19), ('time-000-000-02', 20), ('time-000-000-01', 21), ('time-000-000-005', 22), ('time-000-000-002', 23), ('time-000-000-001', 24), ('time-000-000-000-5', 25), ('time-000-000-000-2', 26), ('time-000-000-000-1', 27), ('time-000-000-000-05', 28), ('time-000-000-000-02', 29), ('time-000-000-000-01', 30), ('time-000-000-000-005', 31), ('time-000-000-000-002', 32), ('time-000-000-000-001', 33), ('time-000-000-000-000-5', 34), ('time-000-000-000-000-2', 35), ('time-000-000-000-000-1', 36), ('time-000-000-000-000-05', 37), ('time-000-000-000-000-02', 38), ('time-000-000-000-000-01', 39)])
    TimeConfidence._ext = None
    
    #-----< TimeIntervalConfidence >-----#
    TimeIntervalConfidence = INT(name='TimeIntervalConfidence', mode=MODE_TYPE)
    TimeIntervalConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< TimeMark >-----#
    TimeMark = INT(name='TimeMark', mode=MODE_TYPE)
    TimeMark._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=36001)], ev=None, er=[])
    
    #-----< TimeOffset >-----#
    TimeOffset = INT(name='TimeOffset', mode=MODE_TYPE)
    TimeOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65535)], ev=None, er=[])
    
    #-----< TractionControlStatus >-----#
    TractionControlStatus = ENUM(name='TractionControlStatus', mode=MODE_TYPE)
    TractionControlStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('on', 2), ('engaged', 3)])
    TractionControlStatus._ext = None
    
    #-----< TrailerMass >-----#
    TrailerMass = INT(name='TrailerMass', mode=MODE_TYPE)
    TrailerMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TransitStatus >-----#
    TransitStatus = BIT_STR(name='TransitStatus', mode=MODE_TYPE)
    TransitStatus._cont = ASN1Dict([('none', 0), ('anADAuse', 1), ('aBikeLoad', 2), ('doorOpen', 3), ('occM', 4), ('occL', 5)])
    TransitStatus._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< TransitVehicleOccupancy >-----#
    TransitVehicleOccupancy = ENUM(name='TransitVehicleOccupancy', mode=MODE_TYPE)
    TransitVehicleOccupancy._cont = ASN1Dict([('occupancyUnknown', 0), ('occupancyEmpty', 1), ('occupancyVeryLow', 2), ('occupancyLow', 3), ('occupancyMed', 4), ('occupancyHigh', 5), ('occupancyNearlyFull', 6), ('occupancyFull', 7)])
    TransitVehicleOccupancy._ext = None
    
    #-----< TransitVehicleStatus >-----#
    TransitVehicleStatus = BIT_STR(name='TransitVehicleStatus', mode=MODE_TYPE)
    TransitVehicleStatus._cont = ASN1Dict([('loading', 0), ('anADAuse', 1), ('aBikeLoad', 2), ('doorOpen', 3), ('charging', 4), ('atStopLine', 5)])
    TransitVehicleStatus._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< TransmissionState >-----#
    TransmissionState = ENUM(name='TransmissionState', mode=MODE_TYPE)
    TransmissionState._cont = ASN1Dict([('neutral', 0), ('park', 1), ('forwardGears', 2), ('reverseGears', 3), ('reserved1', 4), ('reserved2', 5), ('reserved3', 6), ('unavailable', 7)])
    TransmissionState._ext = None
    
    #-----< TravelerInfoType >-----#
    TravelerInfoType = ENUM(name='TravelerInfoType', mode=MODE_TYPE)
    TravelerInfoType._cont = ASN1Dict([('unknown', 0), ('advisory', 1), ('roadSignage', 2), ('commercialSignage', 3)])
    TravelerInfoType._ext = []
    
    #-----< UniqueMSGID >-----#
    UniqueMSGID = OCT_STR(name='UniqueMSGID', mode=MODE_TYPE)
    UniqueMSGID._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    
    #-----< URL-Base >-----#
    URL_Base = STR_IA5(name='URL-Base', mode=MODE_TYPE)
    URL_Base._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=45)], ev=None, er=[])
    
    #-----< URL-Link >-----#
    URL_Link = STR_IA5(name='URL-Link', mode=MODE_TYPE)
    URL_Link._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< URL-Short >-----#
    URL_Short = STR_IA5(name='URL-Short', mode=MODE_TYPE)
    URL_Short._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    
    #-----< UserSizeAndBehaviour >-----#
    UserSizeAndBehaviour = BIT_STR(name='UserSizeAndBehaviour', mode=MODE_TYPE)
    UserSizeAndBehaviour._cont = ASN1Dict([('unavailable', 0), ('smallStature', 1), ('largeStature', 2), ('erraticMoving', 3), ('slowMoving', 4)])
    UserSizeAndBehaviour._const_sz = ASN1Set(rv=[5], rr=[], ev=[], er=[])
    
    #-----< VehicleEventFlags >-----#
    VehicleEventFlags = BIT_STR(name='VehicleEventFlags', mode=MODE_TYPE)
    VehicleEventFlags._cont = ASN1Dict([('eventHazardLights', 0), ('eventStopLineViolation', 1), ('eventABSactivated', 2), ('eventTractionControlLoss', 3), ('eventStabilityControlactivated', 4), ('eventHazardousMaterials', 5), ('eventReserved1', 6), ('eventHardBraking', 7), ('eventLightsChanged', 8), ('eventWipersChanged', 9), ('eventFlatTire', 10), ('eventDisabledVehicle', 11), ('eventAirBagDeployment', 12)])
    VehicleEventFlags._const_sz = ASN1Set(rv=[13], rr=[], ev=[], er=[])
    
    #-----< VehicleHeight >-----#
    VehicleHeight = INT(name='VehicleHeight', mode=MODE_TYPE)
    VehicleHeight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< VehicleLength >-----#
    VehicleLength = INT(name='VehicleLength', mode=MODE_TYPE)
    VehicleLength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< VehicleMass >-----#
    VehicleMass = INT(name='VehicleMass', mode=MODE_TYPE)
    VehicleMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< VehicleStatusDeviceTypeTag >-----#
    VehicleStatusDeviceTypeTag = ENUM(name='VehicleStatusDeviceTypeTag', mode=MODE_TYPE)
    VehicleStatusDeviceTypeTag._cont = ASN1Dict([('unknown', 0), ('lights', 1), ('wipers', 2), ('brakes', 3), ('stab', 4), ('trac', 5), ('abs', 6), ('sunS', 7), ('rainS', 8), ('airTemp', 9), ('steering', 10), ('vertAccelThres', 11), ('vertAccel', 12), ('hozAccelLong', 13), ('hozAccelLat', 14), ('hozAccelCon', 15), ('accel4way', 16), ('confidenceSet', 17), ('obDist', 18), ('obDirect', 19), ('yaw', 20), ('yawRateCon', 21), ('dateTime', 22), ('fullPos', 23), ('position2D', 24), ('position3D', 25), ('vehicle', 26), ('speedHeadC', 27), ('speedC', 28)])
    VehicleStatusDeviceTypeTag._ext = []
    
    #-----< VehicleType >-----#
    VehicleType = ENUM(name='VehicleType', mode=MODE_TYPE)
    VehicleType._cont = ASN1Dict([('none', 0), ('unknown', 1), ('special', 2), ('moto', 3), ('car', 4), ('carOther', 5), ('bus', 6), ('axleCnt2', 7), ('axleCnt3', 8), ('axleCnt4', 9), ('axleCnt4Trailer', 10), ('axleCnt5Trailer', 11), ('axleCnt6Trailer', 12), ('axleCnt5MultiTrailer', 13), ('axleCnt6MultiTrailer', 14), ('axleCnt7MultiTrailer', 15)])
    VehicleType._ext = []
    
    #-----< VehicleWidth >-----#
    VehicleWidth = INT(name='VehicleWidth', mode=MODE_TYPE)
    VehicleWidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< Velocity >-----#
    Velocity = INT(name='Velocity', mode=MODE_TYPE)
    Velocity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8191)], ev=None, er=[])
    
    #-----< VerticalAccelerationThreshold >-----#
    VerticalAccelerationThreshold = BIT_STR(name='VerticalAccelerationThreshold', mode=MODE_TYPE)
    VerticalAccelerationThreshold._cont = ASN1Dict([('notEquipped', 0), ('leftFront', 1), ('leftRear', 2), ('rightFront', 3), ('rightRear', 4)])
    VerticalAccelerationThreshold._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    
    #-----< VerticalAcceleration >-----#
    VerticalAcceleration = INT(name='VerticalAcceleration', mode=MODE_TYPE)
    VerticalAcceleration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-127, ub=127)], ev=None, er=[])
    
    #-----< VertOffset-B07 >-----#
    VertOffset_B07 = INT(name='VertOffset-B07', mode=MODE_TYPE)
    VertOffset_B07._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64, ub=63)], ev=None, er=[])
    
    #-----< VertOffset-B08 >-----#
    VertOffset_B08 = INT(name='VertOffset-B08', mode=MODE_TYPE)
    VertOffset_B08._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-128, ub=127)], ev=None, er=[])
    
    #-----< VertOffset-B09 >-----#
    VertOffset_B09 = INT(name='VertOffset-B09', mode=MODE_TYPE)
    VertOffset_B09._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-256, ub=255)], ev=None, er=[])
    
    #-----< VertOffset-B10 >-----#
    VertOffset_B10 = INT(name='VertOffset-B10', mode=MODE_TYPE)
    VertOffset_B10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-512, ub=511)], ev=None, er=[])
    
    #-----< VertOffset-B11 >-----#
    VertOffset_B11 = INT(name='VertOffset-B11', mode=MODE_TYPE)
    VertOffset_B11._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1024, ub=1023)], ev=None, er=[])
    
    #-----< VertOffset-B12 >-----#
    VertOffset_B12 = INT(name='VertOffset-B12', mode=MODE_TYPE)
    VertOffset_B12._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-2048, ub=2047)], ev=None, er=[])
    
    #-----< VINstring >-----#
    VINstring = OCT_STR(name='VINstring', mode=MODE_TYPE)
    VINstring._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=17)], ev=None, er=[])
    
    #-----< WaitOnStopline >-----#
    WaitOnStopline = BOOL(name='WaitOnStopline', mode=MODE_TYPE)
    
    #-----< WiperRate >-----#
    WiperRate = INT(name='WiperRate', mode=MODE_TYPE)
    WiperRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< WiperStatus >-----#
    WiperStatus = ENUM(name='WiperStatus', mode=MODE_TYPE)
    WiperStatus._cont = ASN1Dict([('unavailable', 0), ('off', 1), ('intermittent', 2), ('low', 3), ('high', 4), ('washerInUse', 5), ('automaticPresent', 6)])
    WiperStatus._ext = []
    
    #-----< YawRateConfidence >-----#
    YawRateConfidence = ENUM(name='YawRateConfidence', mode=MODE_TYPE)
    YawRateConfidence._cont = ASN1Dict([('unavailable', 0), ('degSec-100-00', 1), ('degSec-010-00', 2), ('degSec-005-00', 3), ('degSec-001-00', 4), ('degSec-000-10', 5), ('degSec-000-05', 6), ('degSec-000-01', 7)])
    YawRateConfidence._ext = None
    
    #-----< YawRate >-----#
    YawRate = INT(name='YawRate', mode=MODE_TYPE)
    YawRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32767, ub=32767)], ev=None, er=[])
    
    #-----< ZoneLength >-----#
    ZoneLength = INT(name='ZoneLength', mode=MODE_TYPE)
    ZoneLength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10000)], ev=None, er=[])
    
    #-----< Zoom >-----#
    Zoom = INT(name='Zoom', mode=MODE_TYPE)
    Zoom._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    _all_ = [
        __MessageFrame_messageId_tab,
        ___MessageFrame_messageId_tab_val_Type_0,
        ___MessageFrame_messageId_tab_val_Type_1,
        ___MessageFrame_messageId_tab_val_Type_2,
        ___MessageFrame_messageId_tab_val_Type_3,
        ___MessageFrame_messageId_tab_val_Type_4,
        ___MessageFrame_messageId_tab_val_Type_5,
        ___MessageFrame_messageId_tab_val_Type_6,
        ___MessageFrame_messageId_tab_val_Type_7,
        ___MessageFrame_messageId_tab_val_Type_8,
        ___MessageFrame_messageId_tab_val_Type_9,
        ___MessageFrame_messageId_tab_val_Type_10,
        ___MessageFrame_messageId_tab_val_Type_11,
        ___MessageFrame_messageId_tab_val_Type_12,
        ___MessageFrame_messageId_tab_val_Type_13,
        ___MessageFrame_messageId_tab_val_Type_14,
        ___MessageFrame_messageId_tab_val_Type_15,
        ___MessageFrame_messageId_tab_val_Type_16,
        ___MessageFrame_messageId_tab_val_Type_17,
        ___MessageFrame_messageId_tab_val_Type_18,
        ___MessageFrame_messageId_tab_val_Type_19,
        ___MessageFrame_messageId_tab_val_Type_20,
        ___MessageFrame_messageId_tab_val_Type_21,
        ___MessageFrame_messageId_tab_val_Type_22,
        ___MessageFrame_messageId_tab_val_Type_23,
        ___MessageFrame_messageId_tab_val_Type_24,
        ___MessageFrame_messageId_tab_val_Type_25,
        ___MessageFrame_messageId_tab_val_Type_26,
        ___MessageFrame_messageId_tab_val_Type_27,
        ___MessageFrame_messageId_tab_val_Type_28,
        ___MessageFrame_messageId_tab_val_Type_29,
        ___MessageFrame_messageId_tab_val_Type_30,
        _MessageFrame_messageId,
        _MessageFrame_value,
        MessageFrame,
        _MESSAGE_ID_AND_TYPE_id,
        _MESSAGE_ID_AND_TYPE_Type,
        MESSAGE_ID_AND_TYPE,
        MessageTypes,
        _MessageTypes_val_Type_0,
        _MessageTypes_val_Type_1,
        _MessageTypes_val_Type_2,
        _MessageTypes_val_Type_3,
        _MessageTypes_val_Type_4,
        _MessageTypes_val_Type_5,
        _MessageTypes_val_Type_6,
        _MessageTypes_val_Type_7,
        _MessageTypes_val_Type_8,
        _MessageTypes_val_Type_9,
        _MessageTypes_val_Type_10,
        _MessageTypes_val_Type_11,
        _MessageTypes_val_Type_12,
        _MessageTypes_val_Type_13,
        _MessageTypes_val_Type_14,
        _MessageTypes_val_Type_15,
        _MessageTypes_val_Type_16,
        _MessageTypes_val_Type_17,
        _MessageTypes_val_Type_18,
        _MessageTypes_val_Type_19,
        _MessageTypes_val_Type_20,
        _MessageTypes_val_Type_21,
        _MessageTypes_val_Type_22,
        _MessageTypes_val_Type_23,
        _MessageTypes_val_Type_24,
        _MessageTypes_val_Type_25,
        _MessageTypes_val_Type_26,
        _MessageTypes_val_Type_27,
        _MessageTypes_val_Type_28,
        _MessageTypes_val_Type_29,
        _MessageTypes_val_Type_30,
        _REG_EXT_ID_AND_TYPE_id,
        _REG_EXT_ID_AND_TYPE_Type,
        REG_EXT_ID_AND_TYPE,
        _BasicSafetyMessage_coreData,
        ____BasicSafetyMessage_partII__item__partII_Id_tab,
        _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_0,
        _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_1,
        _____BasicSafetyMessage_partII__item__partII_Id_tab_val_Type_2,
        ___BasicSafetyMessage_partII__item__partII_Id,
        ___BasicSafetyMessage_partII__item__partII_Value,
        __BasicSafetyMessage_partII__item_,
        _BasicSafetyMessage_partII,
        ____BasicSafetyMessage_regional__item__regionId_tab,
        ___BasicSafetyMessage_regional__item__regionId,
        ___BasicSafetyMessage_regional__item__regExtValue,
        __BasicSafetyMessage_regional__item_,
        _BasicSafetyMessage_regional,
        BasicSafetyMessage,
        _PARTII_EXT_ID_AND_TYPE_id,
        _PARTII_EXT_ID_AND_TYPE_Type,
        PARTII_EXT_ID_AND_TYPE,
        PartII_Id,
        vehicleSafetyExt,
        specialVehicleExt,
        supplementalVehicleExt,
        BSMpartIIExtension,
        _BSMpartIIExtension_val_Type_0,
        _BSMpartIIExtension_val_Type_1,
        _BSMpartIIExtension_val_Type_2,
        _CommonSafetyRequest_timeStamp,
        _CommonSafetyRequest_msgCnt,
        _CommonSafetyRequest_id,
        _CommonSafetyRequest_requests,
        ____CommonSafetyRequest_regional__item__regionId_tab,
        ___CommonSafetyRequest_regional__item__regionId,
        ___CommonSafetyRequest_regional__item__regExtValue,
        __CommonSafetyRequest_regional__item_,
        _CommonSafetyRequest_regional,
        CommonSafetyRequest,
        _EmergencyVehicleAlert_timeStamp,
        _EmergencyVehicleAlert_id,
        _EmergencyVehicleAlert_rsaMsg,
        _EmergencyVehicleAlert_responseType,
        _EmergencyVehicleAlert_details,
        _EmergencyVehicleAlert_mass,
        _EmergencyVehicleAlert_basicType,
        _EmergencyVehicleAlert_vehicleType,
        _EmergencyVehicleAlert_responseEquip,
        _EmergencyVehicleAlert_responderType,
        ____EmergencyVehicleAlert_regional__item__regionId_tab,
        ___EmergencyVehicleAlert_regional__item__regionId,
        ___EmergencyVehicleAlert_regional__item__regExtValue,
        __EmergencyVehicleAlert_regional__item_,
        _EmergencyVehicleAlert_regional,
        EmergencyVehicleAlert,
        _IntersectionCollision_msgCnt,
        _IntersectionCollision_id,
        _IntersectionCollision_timeStamp,
        _IntersectionCollision_partOne,
        _IntersectionCollision_path,
        _IntersectionCollision_pathPrediction,
        _IntersectionCollision_intersectionID,
        _IntersectionCollision_laneNumber,
        _IntersectionCollision_eventFlag,
        ____IntersectionCollision_regional__item__regionId_tab,
        ___IntersectionCollision_regional__item__regionId,
        ___IntersectionCollision_regional__item__regExtValue,
        __IntersectionCollision_regional__item_,
        _IntersectionCollision_regional,
        IntersectionCollision,
        _MapData_timeStamp,
        _MapData_msgIssueRevision,
        _MapData_layerType,
        _MapData_layerID,
        _MapData_intersections,
        _MapData_roadSegments,
        _MapData_dataParameters,
        _MapData_restrictionList,
        ____MapData_regional__item__regionId_tab,
        _____MapData_regional__item__regionId_tab_val_Type_0,
        ___MapData_regional__item__regionId,
        ___MapData_regional__item__regExtValue,
        __MapData_regional__item_,
        _MapData_regional,
        MapData,
        _NMEAcorrections_timeStamp,
        _NMEAcorrections_rev,
        _NMEAcorrections_msg,
        _NMEAcorrections_wdCount,
        _NMEAcorrections_payload,
        ____NMEAcorrections_regional__item__regionId_tab,
        ___NMEAcorrections_regional__item__regionId,
        ___NMEAcorrections_regional__item__regExtValue,
        __NMEAcorrections_regional__item_,
        _NMEAcorrections_regional,
        NMEAcorrections,
        _PersonalSafetyMessage_basicType,
        _PersonalSafetyMessage_secMark,
        _PersonalSafetyMessage_msgCnt,
        _PersonalSafetyMessage_id,
        _PersonalSafetyMessage_position,
        _PersonalSafetyMessage_accuracy,
        _PersonalSafetyMessage_speed,
        _PersonalSafetyMessage_heading,
        _PersonalSafetyMessage_accelSet,
        _PersonalSafetyMessage_pathHistory,
        _PersonalSafetyMessage_pathPrediction,
        _PersonalSafetyMessage_propulsion,
        _PersonalSafetyMessage_useState,
        _PersonalSafetyMessage_crossRequest,
        _PersonalSafetyMessage_crossState,
        _PersonalSafetyMessage_clusterSize,
        _PersonalSafetyMessage_clusterRadius,
        _PersonalSafetyMessage_eventResponderType,
        _PersonalSafetyMessage_activityType,
        _PersonalSafetyMessage_activitySubType,
        _PersonalSafetyMessage_assistType,
        _PersonalSafetyMessage_sizing,
        _PersonalSafetyMessage_attachment,
        _PersonalSafetyMessage_attachmentRadius,
        _PersonalSafetyMessage_animalType,
        ____PersonalSafetyMessage_regional__item__regionId_tab,
        ___PersonalSafetyMessage_regional__item__regionId,
        ___PersonalSafetyMessage_regional__item__regExtValue,
        __PersonalSafetyMessage_regional__item_,
        _PersonalSafetyMessage_regional,
        PersonalSafetyMessage,
        _ProbeDataManagement_timeStamp,
        _ProbeDataManagement_sample,
        _ProbeDataManagement_directions,
        __ProbeDataManagement_term_termtime,
        __ProbeDataManagement_term_termDistance,
        _ProbeDataManagement_term,
        __ProbeDataManagement_snapshot_snapshotTime,
        __ProbeDataManagement_snapshot_snapshotDistance,
        _ProbeDataManagement_snapshot,
        _ProbeDataManagement_txInterval,
        _ProbeDataManagement_dataElements,
        ____ProbeDataManagement_regional__item__regionId_tab,
        ___ProbeDataManagement_regional__item__regionId,
        ___ProbeDataManagement_regional__item__regExtValue,
        __ProbeDataManagement_regional__item_,
        _ProbeDataManagement_regional,
        ProbeDataManagement,
        _ProbeVehicleData_timeStamp,
        _ProbeVehicleData_segNum,
        _ProbeVehicleData_probeID,
        _ProbeVehicleData_startVector,
        _ProbeVehicleData_vehicleType,
        __ProbeVehicleData_snapshots__item_,
        _ProbeVehicleData_snapshots,
        ____ProbeVehicleData_regional__item__regionId_tab,
        ___ProbeVehicleData_regional__item__regionId,
        ___ProbeVehicleData_regional__item__regExtValue,
        __ProbeVehicleData_regional__item_,
        _ProbeVehicleData_regional,
        ProbeVehicleData,
        _RoadSideAlert_msgCnt,
        _RoadSideAlert_timeStamp,
        _RoadSideAlert_typeEvent,
        __RoadSideAlert_description__item_,
        _RoadSideAlert_description,
        _RoadSideAlert_priority,
        _RoadSideAlert_heading,
        _RoadSideAlert_extent,
        _RoadSideAlert_position,
        _RoadSideAlert_furtherInfoID,
        ____RoadSideAlert_regional__item__regionId_tab,
        ___RoadSideAlert_regional__item__regionId,
        ___RoadSideAlert_regional__item__regExtValue,
        __RoadSideAlert_regional__item_,
        _RoadSideAlert_regional,
        RoadSideAlert,
        _RTCMcorrections_msgCnt,
        _RTCMcorrections_rev,
        _RTCMcorrections_timeStamp,
        _RTCMcorrections_anchorPoint,
        _RTCMcorrections_rtcmHeader,
        _RTCMcorrections_msgs,
        ____RTCMcorrections_regional__item__regionId_tab,
        ___RTCMcorrections_regional__item__regionId,
        ___RTCMcorrections_regional__item__regExtValue,
        __RTCMcorrections_regional__item_,
        _RTCMcorrections_regional,
        RTCMcorrections,
        _SPAT_timeStamp,
        _SPAT_name,
        _SPAT_intersections,
        ____SPAT_regional__item__regionId_tab,
        ___SPAT_regional__item__regionId,
        ___SPAT_regional__item__regExtValue,
        __SPAT_regional__item_,
        _SPAT_regional,
        SPAT,
        _SignalRequestMessage_timeStamp,
        _SignalRequestMessage_second,
        _SignalRequestMessage_sequenceNumber,
        _SignalRequestMessage_requests,
        _SignalRequestMessage_requestor,
        ____SignalRequestMessage_regional__item__regionId_tab,
        ___SignalRequestMessage_regional__item__regionId,
        ___SignalRequestMessage_regional__item__regExtValue,
        __SignalRequestMessage_regional__item_,
        _SignalRequestMessage_regional,
        SignalRequestMessage,
        _SignalStatusMessage_timeStamp,
        _SignalStatusMessage_second,
        _SignalStatusMessage_sequenceNumber,
        _SignalStatusMessage_status,
        ____SignalStatusMessage_regional__item__regionId_tab,
        ___SignalStatusMessage_regional__item__regionId,
        ___SignalStatusMessage_regional__item__regExtValue,
        __SignalStatusMessage_regional__item_,
        _SignalStatusMessage_regional,
        SignalStatusMessage,
        _TravelerInformation_msgCnt,
        _TravelerInformation_timeStamp,
        _TravelerInformation_packetID,
        _TravelerInformation_urlB,
        _TravelerInformation_dataFrames,
        ____TravelerInformation_regional__item__regionId_tab,
        ___TravelerInformation_regional__item__regionId,
        ___TravelerInformation_regional__item__regExtValue,
        __TravelerInformation_regional__item_,
        _TravelerInformation_regional,
        TravelerInformation,
        _TestMessage00_header,
        ___TestMessage00_regional_regionId_tab,
        __TestMessage00_regional_regionId,
        __TestMessage00_regional_regExtValue,
        _TestMessage00_regional,
        TestMessage00,
        _TestMessage01_header,
        ___TestMessage01_regional_regionId_tab,
        __TestMessage01_regional_regionId,
        __TestMessage01_regional_regExtValue,
        _TestMessage01_regional,
        TestMessage01,
        _TestMessage02_header,
        ___TestMessage02_regional_regionId_tab,
        __TestMessage02_regional_regionId,
        __TestMessage02_regional_regExtValue,
        _TestMessage02_regional,
        TestMessage02,
        _TestMessage03_header,
        ___TestMessage03_regional_regionId_tab,
        __TestMessage03_regional_regionId,
        __TestMessage03_regional_regExtValue,
        _TestMessage03_regional,
        TestMessage03,
        _TestMessage04_header,
        ___TestMessage04_regional_regionId_tab,
        __TestMessage04_regional_regionId,
        __TestMessage04_regional_regExtValue,
        _TestMessage04_regional,
        TestMessage04,
        _TestMessage05_header,
        ___TestMessage05_regional_regionId_tab,
        __TestMessage05_regional_regionId,
        __TestMessage05_regional_regExtValue,
        _TestMessage05_regional,
        TestMessage05,
        _TestMessage06_header,
        ___TestMessage06_regional_regionId_tab,
        __TestMessage06_regional_regionId,
        __TestMessage06_regional_regExtValue,
        _TestMessage06_regional,
        TestMessage06,
        _TestMessage07_header,
        ___TestMessage07_regional_regionId_tab,
        __TestMessage07_regional_regionId,
        __TestMessage07_regional_regExtValue,
        _TestMessage07_regional,
        TestMessage07,
        _TestMessage08_header,
        ___TestMessage08_regional_regionId_tab,
        __TestMessage08_regional_regionId,
        __TestMessage08_regional_regExtValue,
        _TestMessage08_regional,
        TestMessage08,
        _TestMessage09_header,
        ___TestMessage09_regional_regionId_tab,
        __TestMessage09_regional_regionId,
        __TestMessage09_regional_regExtValue,
        _TestMessage09_regional,
        TestMessage09,
        _TestMessage10_header,
        ___TestMessage10_regional_regionId_tab,
        __TestMessage10_regional_regionId,
        __TestMessage10_regional_regExtValue,
        _TestMessage10_regional,
        TestMessage10,
        _TestMessage11_header,
        ___TestMessage11_regional_regionId_tab,
        __TestMessage11_regional_regionId,
        __TestMessage11_regional_regExtValue,
        _TestMessage11_regional,
        TestMessage11,
        _TestMessage12_header,
        ___TestMessage12_regional_regionId_tab,
        __TestMessage12_regional_regionId,
        __TestMessage12_regional_regExtValue,
        _TestMessage12_regional,
        TestMessage12,
        _TestMessage13_header,
        ___TestMessage13_regional_regionId_tab,
        __TestMessage13_regional_regionId,
        __TestMessage13_regional_regExtValue,
        _TestMessage13_regional,
        TestMessage13,
        _TestMessage14_header,
        ___TestMessage14_regional_regionId_tab,
        __TestMessage14_regional_regionId,
        __TestMessage14_regional_regExtValue,
        _TestMessage14_regional,
        TestMessage14,
        _TestMessage15_header,
        ___TestMessage15_regional_regionId_tab,
        __TestMessage15_regional_regionId,
        __TestMessage15_regional_regExtValue,
        _TestMessage15_regional,
        TestMessage15,
        _AccelerationSet4Way_long,
        _AccelerationSet4Way_lat,
        _AccelerationSet4Way_vert,
        _AccelerationSet4Way_yaw,
        AccelerationSet4Way,
        _AccelSteerYawRateConfidence_yawRate,
        _AccelSteerYawRateConfidence_acceleration,
        _AccelSteerYawRateConfidence_steeringWheelAngle,
        AccelSteerYawRateConfidence,
        _AdvisorySpeed_type,
        _AdvisorySpeed_speed,
        _AdvisorySpeed_confidence,
        _AdvisorySpeed_distance,
        _AdvisorySpeed_class_,
        ____AdvisorySpeed_regional__item__regionId_tab,
        ___AdvisorySpeed_regional__item__regionId,
        ___AdvisorySpeed_regional__item__regExtValue,
        __AdvisorySpeed_regional__item_,
        _AdvisorySpeed_regional,
        AdvisorySpeed,
        _AdvisorySpeedList__item_,
        AdvisorySpeedList,
        _AntennaOffsetSet_antOffsetX,
        _AntennaOffsetSet_antOffsetY,
        _AntennaOffsetSet_antOffsetZ,
        AntennaOffsetSet,
        _ApproachOrLane_approach,
        _ApproachOrLane_lane,
        ApproachOrLane,
        _BrakeSystemStatus_wheelBrakes,
        _BrakeSystemStatus_traction,
        _BrakeSystemStatus_abs,
        _BrakeSystemStatus_scs,
        _BrakeSystemStatus_brakeBoost,
        _BrakeSystemStatus_auxBrakes,
        BrakeSystemStatus,
        _BSMcoreData_msgCnt,
        _BSMcoreData_id,
        _BSMcoreData_secMark,
        _BSMcoreData_lat,
        _BSMcoreData_long,
        _BSMcoreData_elev,
        _BSMcoreData_accuracy,
        _BSMcoreData_transmission,
        _BSMcoreData_speed,
        _BSMcoreData_heading,
        _BSMcoreData_angle,
        _BSMcoreData_accelSet,
        _BSMcoreData_brakes,
        _BSMcoreData_size,
        BSMcoreData,
        _BumperHeights_front,
        _BumperHeights_rear,
        BumperHeights,
        _Circle_center,
        _Circle_radius,
        _Circle_units,
        Circle,
        _ComputedLane_referenceLaneId,
        __ComputedLane_offsetXaxis_small,
        __ComputedLane_offsetXaxis_large,
        _ComputedLane_offsetXaxis,
        __ComputedLane_offsetYaxis_small,
        __ComputedLane_offsetYaxis_large,
        _ComputedLane_offsetYaxis,
        _ComputedLane_rotateXY,
        _ComputedLane_scaleXaxis,
        _ComputedLane_scaleYaxis,
        ____ComputedLane_regional__item__regionId_tab,
        ___ComputedLane_regional__item__regionId,
        ___ComputedLane_regional__item__regExtValue,
        __ComputedLane_regional__item_,
        _ComputedLane_regional,
        ComputedLane,
        _ConfidenceSet_accelConfidence,
        _ConfidenceSet_speedConfidence,
        _ConfidenceSet_timeConfidence,
        _ConfidenceSet_posConfidence,
        _ConfidenceSet_steerConfidence,
        _ConfidenceSet_headingConfidence,
        _ConfidenceSet_throttleConfidence,
        ConfidenceSet,
        _ConnectingLane_lane,
        _ConnectingLane_maneuver,
        ConnectingLane,
        _Connection_connectingLane,
        _Connection_remoteIntersection,
        _Connection_signalGroup,
        _Connection_userClass,
        _Connection_connectionID,
        Connection,
        _ConnectionManeuverAssist_connectionID,
        _ConnectionManeuverAssist_queueLength,
        _ConnectionManeuverAssist_availableStorageLength,
        _ConnectionManeuverAssist_waitOnStop,
        _ConnectionManeuverAssist_pedBicycleDetect,
        ____ConnectionManeuverAssist_regional__item__regionId_tab,
        _____ConnectionManeuverAssist_regional__item__regionId_tab_val_Type_0,
        ___ConnectionManeuverAssist_regional__item__regionId,
        ___ConnectionManeuverAssist_regional__item__regExtValue,
        __ConnectionManeuverAssist_regional__item_,
        _ConnectionManeuverAssist_regional,
        ConnectionManeuverAssist,
        _ConnectsToList__item_,
        ConnectsToList,
        _DataParameters_processMethod,
        _DataParameters_processAgency,
        _DataParameters_lastCheckedDate,
        _DataParameters_geoidUsed,
        DataParameters,
        _DDate_year,
        _DDate_month,
        _DDate_day,
        DDate,
        _DDateTime_year,
        _DDateTime_month,
        _DDateTime_day,
        _DDateTime_hour,
        _DDateTime_minute,
        _DDateTime_second,
        _DDateTime_offset,
        DDateTime,
        _DFullTime_year,
        _DFullTime_month,
        _DFullTime_day,
        _DFullTime_hour,
        _DFullTime_minute,
        DFullTime,
        _DMonthDay_month,
        _DMonthDay_day,
        DMonthDay,
        _DTime_hour,
        _DTime_minute,
        _DTime_second,
        _DTime_offset,
        DTime,
        _DYearMonth_year,
        _DYearMonth_month,
        DYearMonth,
        _DisabledVehicle_statusDetails,
        _DisabledVehicle_locationDetails,
        DisabledVehicle,
        _EmergencyDetails_sspRights,
        _EmergencyDetails_sirenUse,
        _EmergencyDetails_lightsUse,
        _EmergencyDetails_multi,
        _EmergencyDetails_events,
        _EmergencyDetails_responseType,
        EmergencyDetails,
        _EnabledLaneList__item_,
        EnabledLaneList,
        _EventDescription_typeEvent,
        __EventDescription_description__item_,
        _EventDescription_description,
        _EventDescription_priority,
        _EventDescription_heading,
        _EventDescription_extent,
        ____EventDescription_regional__item__regionId_tab,
        ___EventDescription_regional__item__regionId,
        ___EventDescription_regional__item__regExtValue,
        __EventDescription_regional__item_,
        _EventDescription_regional,
        EventDescription,
        _FullPositionVector_utcTime,
        _FullPositionVector_long,
        _FullPositionVector_lat,
        _FullPositionVector_elevation,
        _FullPositionVector_heading,
        _FullPositionVector_speed,
        _FullPositionVector_posAccuracy,
        _FullPositionVector_timeConfidence,
        _FullPositionVector_posConfidence,
        _FullPositionVector_speedConfidence,
        FullPositionVector,
        _GenericLane_laneID,
        _GenericLane_name,
        _GenericLane_ingressApproach,
        _GenericLane_egressApproach,
        _GenericLane_laneAttributes,
        _GenericLane_maneuvers,
        _GenericLane_nodeList,
        _GenericLane_connectsTo,
        _GenericLane_overlays,
        ____GenericLane_regional__item__regionId_tab,
        ___GenericLane_regional__item__regionId,
        ___GenericLane_regional__item__regExtValue,
        __GenericLane_regional__item_,
        _GenericLane_regional,
        GenericLane,
        _GeographicalPath_name,
        _GeographicalPath_id,
        _GeographicalPath_anchor,
        _GeographicalPath_laneWidth,
        _GeographicalPath_directionality,
        _GeographicalPath_closedPath,
        _GeographicalPath_direction,
        __GeographicalPath_description_path,
        __GeographicalPath_description_geometry,
        __GeographicalPath_description_oldRegion,
        _GeographicalPath_description,
        ____GeographicalPath_regional__item__regionId_tab,
        ___GeographicalPath_regional__item__regionId,
        ___GeographicalPath_regional__item__regExtValue,
        __GeographicalPath_regional__item_,
        _GeographicalPath_regional,
        GeographicalPath,
        _GeometricProjection_direction,
        _GeometricProjection_extent,
        _GeometricProjection_laneWidth,
        _GeometricProjection_circle,
        ____GeometricProjection_regional__item__regionId_tab,
        ___GeometricProjection_regional__item__regionId,
        ___GeometricProjection_regional__item__regExtValue,
        __GeometricProjection_regional__item_,
        _GeometricProjection_regional,
        GeometricProjection,
        _Header_year,
        _Header_timeStamp,
        _Header_secMark,
        _Header_msgIssueRevision,
        Header,
        _IntersectionAccessPoint_lane,
        _IntersectionAccessPoint_approach,
        _IntersectionAccessPoint_connection,
        IntersectionAccessPoint,
        _IntersectionGeometry_name,
        _IntersectionGeometry_id,
        _IntersectionGeometry_revision,
        _IntersectionGeometry_refPoint,
        _IntersectionGeometry_laneWidth,
        _IntersectionGeometry_speedLimits,
        _IntersectionGeometry_laneSet,
        _IntersectionGeometry_preemptPriorityData,
        ____IntersectionGeometry_regional__item__regionId_tab,
        ___IntersectionGeometry_regional__item__regionId,
        ___IntersectionGeometry_regional__item__regExtValue,
        __IntersectionGeometry_regional__item_,
        _IntersectionGeometry_regional,
        IntersectionGeometry,
        _IntersectionGeometryList__item_,
        IntersectionGeometryList,
        _IntersectionReferenceID_region,
        _IntersectionReferenceID_id,
        IntersectionReferenceID,
        _IntersectionState_name,
        _IntersectionState_id,
        _IntersectionState_revision,
        _IntersectionState_status,
        _IntersectionState_moy,
        _IntersectionState_timeStamp,
        _IntersectionState_enabledLanes,
        _IntersectionState_states,
        _IntersectionState_maneuverAssistList,
        ____IntersectionState_regional__item__regionId_tab,
        _____IntersectionState_regional__item__regionId_tab_val_Type_0,
        ___IntersectionState_regional__item__regionId,
        ___IntersectionState_regional__item__regExtValue,
        __IntersectionState_regional__item_,
        _IntersectionState_regional,
        IntersectionState,
        _IntersectionStateList__item_,
        IntersectionStateList,
        ___ExitService__item__item_itis,
        ___ExitService__item__item_text,
        __ExitService__item__item,
        _ExitService__item_,
        ExitService,
        ___GenericSignage__item__item_itis,
        ___GenericSignage__item__item_text,
        __GenericSignage__item__item,
        _GenericSignage__item_,
        GenericSignage,
        ___SpeedLimit__item__item_itis,
        ___SpeedLimit__item__item_text,
        __SpeedLimit__item__item,
        _SpeedLimit__item_,
        SpeedLimit,
        ___WorkZone__item__item_itis,
        ___WorkZone__item__item_text,
        __WorkZone__item__item,
        _WorkZone__item_,
        WorkZone,
        _J1939data_tires,
        _J1939data_axles,
        _J1939data_trailerWeight,
        _J1939data_cargoWeight,
        _J1939data_steeringAxleTemperature,
        _J1939data_driveAxleLocation,
        _J1939data_driveAxleLiftAirPressure,
        _J1939data_driveAxleTemperature,
        _J1939data_driveAxleLubePressure,
        _J1939data_steeringAxleLubePressure,
        J1939data,
        _TireDataList__item_,
        TireDataList,
        _TireData_location,
        _TireData_pressure,
        _TireData_temp,
        _TireData_wheelSensorStatus,
        _TireData_wheelEndElectFault,
        _TireData_leakageRate,
        _TireData_detection,
        TireData,
        _AxleWeightList__item_,
        AxleWeightList,
        _AxleWeightSet_location,
        _AxleWeightSet_weight,
        AxleWeightSet,
        _LaneAttributes_directionalUse,
        _LaneAttributes_sharedWith,
        _LaneAttributes_laneType,
        ___LaneAttributes_regional_regionId_tab,
        __LaneAttributes_regional_regionId,
        __LaneAttributes_regional_regExtValue,
        _LaneAttributes_regional,
        LaneAttributes,
        _LaneDataAttribute_pathEndPointAngle,
        _LaneDataAttribute_laneCrownPointCenter,
        _LaneDataAttribute_laneCrownPointLeft,
        _LaneDataAttribute_laneCrownPointRight,
        _LaneDataAttribute_laneAngle,
        _LaneDataAttribute_speedLimits,
        ____LaneDataAttribute_regional__item__regionId_tab,
        _____LaneDataAttribute_regional__item__regionId_tab_val_Type_0,
        ___LaneDataAttribute_regional__item__regionId,
        ___LaneDataAttribute_regional__item__regExtValue,
        __LaneDataAttribute_regional__item_,
        _LaneDataAttribute_regional,
        LaneDataAttribute,
        _LaneDataAttributeList__item_,
        LaneDataAttributeList,
        _LaneList__item_,
        LaneList,
        _LaneTypeAttributes_vehicle,
        _LaneTypeAttributes_crosswalk,
        _LaneTypeAttributes_bikeLane,
        _LaneTypeAttributes_sidewalk,
        _LaneTypeAttributes_median,
        _LaneTypeAttributes_striping,
        _LaneTypeAttributes_trackedVehicle,
        _LaneTypeAttributes_parking,
        LaneTypeAttributes,
        _ManeuverAssistList__item_,
        ManeuverAssistList,
        _MovementEventList__item_,
        MovementEventList,
        _MovementEvent_eventState,
        _MovementEvent_timing,
        _MovementEvent_speeds,
        ____MovementEvent_regional__item__regionId_tab,
        _____MovementEvent_regional__item__regionId_tab_val_Type_0,
        ___MovementEvent_regional__item__regionId,
        ___MovementEvent_regional__item__regExtValue,
        __MovementEvent_regional__item_,
        _MovementEvent_regional,
        MovementEvent,
        _MovementList__item_,
        MovementList,
        _MovementState_movementName,
        _MovementState_signalGroup,
        _MovementState_state_time_speed,
        _MovementState_maneuverAssistList,
        ____MovementState_regional__item__regionId_tab,
        ___MovementState_regional__item__regionId,
        ___MovementState_regional__item__regExtValue,
        __MovementState_regional__item_,
        _MovementState_regional,
        MovementState,
        _Node_LL_24B_lon,
        _Node_LL_24B_lat,
        Node_LL_24B,
        _Node_LL_28B_lon,
        _Node_LL_28B_lat,
        Node_LL_28B,
        _Node_LL_32B_lon,
        _Node_LL_32B_lat,
        Node_LL_32B,
        _Node_LL_36B_lon,
        _Node_LL_36B_lat,
        Node_LL_36B,
        _Node_LL_44B_lon,
        _Node_LL_44B_lat,
        Node_LL_44B,
        _Node_LL_48B_lon,
        _Node_LL_48B_lat,
        Node_LL_48B,
        _Node_LLmD_64b_lon,
        _Node_LLmD_64b_lat,
        Node_LLmD_64b,
        _Node_XY_20b_x,
        _Node_XY_20b_y,
        Node_XY_20b,
        _Node_XY_22b_x,
        _Node_XY_22b_y,
        Node_XY_22b,
        _Node_XY_24b_x,
        _Node_XY_24b_y,
        Node_XY_24b,
        _Node_XY_26b_x,
        _Node_XY_26b_y,
        Node_XY_26b,
        _Node_XY_28b_x,
        _Node_XY_28b_y,
        Node_XY_28b,
        _Node_XY_32b_x,
        _Node_XY_32b_y,
        Node_XY_32b,
        _NodeAttributeLLList__item_,
        NodeAttributeLLList,
        _NodeAttributeSetLL_localNode,
        _NodeAttributeSetLL_disabled,
        _NodeAttributeSetLL_enabled,
        _NodeAttributeSetLL_data,
        _NodeAttributeSetLL_dWidth,
        _NodeAttributeSetLL_dElevation,
        ____NodeAttributeSetLL_regional__item__regionId_tab,
        ___NodeAttributeSetLL_regional__item__regionId,
        ___NodeAttributeSetLL_regional__item__regExtValue,
        __NodeAttributeSetLL_regional__item_,
        _NodeAttributeSetLL_regional,
        NodeAttributeSetLL,
        _NodeAttributeSetXY_localNode,
        _NodeAttributeSetXY_disabled,
        _NodeAttributeSetXY_enabled,
        _NodeAttributeSetXY_data,
        _NodeAttributeSetXY_dWidth,
        _NodeAttributeSetXY_dElevation,
        ____NodeAttributeSetXY_regional__item__regionId_tab,
        ___NodeAttributeSetXY_regional__item__regionId,
        ___NodeAttributeSetXY_regional__item__regExtValue,
        __NodeAttributeSetXY_regional__item_,
        _NodeAttributeSetXY_regional,
        NodeAttributeSetXY,
        _NodeAttributeXYList__item_,
        NodeAttributeXYList,
        _NodeListLL_nodes,
        NodeListLL,
        _NodeListXY_nodes,
        _NodeListXY_computed,
        NodeListXY,
        _NodeLL_delta,
        _NodeLL_attributes,
        NodeLL,
        _NodeOffsetPointLL_node_LL1,
        _NodeOffsetPointLL_node_LL2,
        _NodeOffsetPointLL_node_LL3,
        _NodeOffsetPointLL_node_LL4,
        _NodeOffsetPointLL_node_LL5,
        _NodeOffsetPointLL_node_LL6,
        _NodeOffsetPointLL_node_LatLon,
        ___NodeOffsetPointLL_regional_regionId_tab,
        __NodeOffsetPointLL_regional_regionId,
        __NodeOffsetPointLL_regional_regExtValue,
        _NodeOffsetPointLL_regional,
        NodeOffsetPointLL,
        _NodeOffsetPointXY_node_XY1,
        _NodeOffsetPointXY_node_XY2,
        _NodeOffsetPointXY_node_XY3,
        _NodeOffsetPointXY_node_XY4,
        _NodeOffsetPointXY_node_XY5,
        _NodeOffsetPointXY_node_XY6,
        _NodeOffsetPointXY_node_LatLon,
        ___NodeOffsetPointXY_regional_regionId_tab,
        ____NodeOffsetPointXY_regional_regionId_tab_val_Type_0,
        __NodeOffsetPointXY_regional_regionId,
        __NodeOffsetPointXY_regional_regExtValue,
        _NodeOffsetPointXY_regional,
        NodeOffsetPointXY,
        _NodeSetLL__item_,
        NodeSetLL,
        _NodeSetXY__item_,
        NodeSetXY,
        _NodeXY_delta,
        _NodeXY_attributes,
        NodeXY,
        _ObstacleDetection_obDist,
        _ObstacleDetection_obDirect,
        _ObstacleDetection_description,
        _ObstacleDetection_locationDetails,
        _ObstacleDetection_dateTime,
        _ObstacleDetection_vertEvent,
        ObstacleDetection,
        _OffsetSystem_scale,
        __OffsetSystem_offset_xy,
        __OffsetSystem_offset_ll,
        _OffsetSystem_offset,
        OffsetSystem,
        _OverlayLaneList__item_,
        OverlayLaneList,
        _PathHistory_initialPosition,
        _PathHistory_currGNSSstatus,
        _PathHistory_crumbData,
        PathHistory,
        _PathHistoryPointList__item_,
        PathHistoryPointList,
        _PathHistoryPoint_latOffset,
        _PathHistoryPoint_lonOffset,
        _PathHistoryPoint_elevationOffset,
        _PathHistoryPoint_timeOffset,
        _PathHistoryPoint_speed,
        _PathHistoryPoint_posAccuracy,
        _PathHistoryPoint_heading,
        PathHistoryPoint,
        _PathPrediction_radiusOfCurve,
        _PathPrediction_confidence,
        PathPrediction,
        _PivotPointDescription_pivotOffset,
        _PivotPointDescription_pivotAngle,
        _PivotPointDescription_pivots,
        PivotPointDescription,
        _Position3D_lat,
        _Position3D_long,
        _Position3D_elevation,
        ____Position3D_regional__item__regionId_tab,
        _____Position3D_regional__item__regionId_tab_val_Type_0,
        _____Position3D_regional__item__regionId_tab_val_Type_1,
        ___Position3D_regional__item__regionId,
        ___Position3D_regional__item__regExtValue,
        __Position3D_regional__item_,
        _Position3D_regional,
        Position3D,
        _PositionalAccuracy_semiMajor,
        _PositionalAccuracy_semiMinor,
        _PositionalAccuracy_orientation,
        PositionalAccuracy,
        _PositionConfidenceSet_pos,
        _PositionConfidenceSet_elevation,
        PositionConfidenceSet,
        _PreemptPriorityList__item_,
        PreemptPriorityList,
        ___SignalControlZone_zone_regionId_tab,
        __SignalControlZone_zone_regionId,
        __SignalControlZone_zone_regExtValue,
        _SignalControlZone_zone,
        SignalControlZone,
        _PrivilegedEvents_sspRights,
        _PrivilegedEvents_event,
        PrivilegedEvents,
        _PropelledInformation_human,
        _PropelledInformation_animal,
        _PropelledInformation_motor,
        PropelledInformation,
        _RegionList__item_,
        RegionList,
        _RegionOffsets_xOffset,
        _RegionOffsets_yOffset,
        _RegionOffsets_zOffset,
        RegionOffsets,
        _RegionPointSet_anchor,
        _RegionPointSet_scale,
        _RegionPointSet_nodeList,
        RegionPointSet,
        _RegulatorySpeedLimit_type,
        _RegulatorySpeedLimit_speed,
        RegulatorySpeedLimit,
        _RequestedItemList__item_,
        RequestedItemList,
        _RequestorDescription_id,
        _RequestorDescription_type,
        _RequestorDescription_position,
        _RequestorDescription_name,
        _RequestorDescription_routeName,
        _RequestorDescription_transitStatus,
        _RequestorDescription_transitOccupancy,
        _RequestorDescription_transitSchedule,
        ____RequestorDescription_regional__item__regionId_tab,
        ___RequestorDescription_regional__item__regionId,
        ___RequestorDescription_regional__item__regExtValue,
        __RequestorDescription_regional__item_,
        _RequestorDescription_regional,
        RequestorDescription,
        _RequestorPositionVector_position,
        _RequestorPositionVector_heading,
        _RequestorPositionVector_speed,
        RequestorPositionVector,
        _RequestorType_role,
        _RequestorType_subrole,
        _RequestorType_request,
        _RequestorType_iso3883,
        _RequestorType_hpmsType,
        ___RequestorType_regional_regionId_tab,
        __RequestorType_regional_regionId,
        __RequestorType_regional_regExtValue,
        _RequestorType_regional,
        RequestorType,
        _RestrictionClassAssignment_id,
        _RestrictionClassAssignment_users,
        RestrictionClassAssignment,
        _RestrictionClassList__item_,
        RestrictionClassList,
        _RestrictionUserTypeList__item_,
        RestrictionUserTypeList,
        _RestrictionUserType_basicType,
        ____RestrictionUserType_regional__item__regionId_tab,
        _____RestrictionUserType_regional__item__regionId_tab_val_Type_0,
        ___RestrictionUserType_regional__item__regionId,
        ___RestrictionUserType_regional__item__regExtValue,
        __RestrictionUserType_regional__item_,
        _RestrictionUserType_regional,
        RestrictionUserType,
        _RoadLaneSetList__item_,
        RoadLaneSetList,
        _RoadSegmentList__item_,
        RoadSegmentList,
        _RoadSegmentReferenceID_region,
        _RoadSegmentReferenceID_id,
        RoadSegmentReferenceID,
        _RoadSegment_name,
        _RoadSegment_id,
        _RoadSegment_revision,
        _RoadSegment_refPoint,
        _RoadSegment_laneWidth,
        _RoadSegment_speedLimits,
        _RoadSegment_roadLaneSet,
        ____RoadSegment_regional__item__regionId_tab,
        ___RoadSegment_regional__item__regionId,
        ___RoadSegment_regional__item__regExtValue,
        __RoadSegment_regional__item_,
        _RoadSegment_regional,
        RoadSegment,
        _RoadSignID_position,
        _RoadSignID_viewAngle,
        _RoadSignID_mutcdCode,
        _RoadSignID_crc,
        RoadSignID,
        _RTCMheader_status,
        _RTCMheader_offsetSet,
        RTCMheader,
        _RTCMmessageList__item_,
        RTCMmessageList,
        _RTCMPackage_rtcmHeader,
        _RTCMPackage_msgs,
        RTCMPackage,
        _Sample_sampleStart,
        _Sample_sampleEnd,
        Sample,
        _SegmentAttributeLLList__item_,
        SegmentAttributeLLList,
        _SegmentAttributeXYList__item_,
        SegmentAttributeXYList,
        _ShapePointSet_anchor,
        _ShapePointSet_laneWidth,
        _ShapePointSet_directionality,
        _ShapePointSet_nodeList,
        ShapePointSet,
        _SignalRequesterInfo_id,
        _SignalRequesterInfo_request,
        _SignalRequesterInfo_sequenceNumber,
        _SignalRequesterInfo_role,
        _SignalRequesterInfo_typeData,
        SignalRequesterInfo,
        _SignalRequestList__item_,
        SignalRequestList,
        _SignalRequestPackage_request,
        _SignalRequestPackage_minute,
        _SignalRequestPackage_second,
        _SignalRequestPackage_duration,
        ____SignalRequestPackage_regional__item__regionId_tab,
        ___SignalRequestPackage_regional__item__regionId,
        ___SignalRequestPackage_regional__item__regExtValue,
        __SignalRequestPackage_regional__item_,
        _SignalRequestPackage_regional,
        SignalRequestPackage,
        _SignalRequest_id,
        _SignalRequest_requestID,
        _SignalRequest_requestType,
        _SignalRequest_inBoundLane,
        _SignalRequest_outBoundLane,
        ____SignalRequest_regional__item__regionId_tab,
        ___SignalRequest_regional__item__regionId,
        ___SignalRequest_regional__item__regExtValue,
        __SignalRequest_regional__item_,
        _SignalRequest_regional,
        SignalRequest,
        _SignalStatusList__item_,
        SignalStatusList,
        _SignalStatusPackageList__item_,
        SignalStatusPackageList,
        _SignalStatusPackage_requester,
        _SignalStatusPackage_inboundOn,
        _SignalStatusPackage_outboundOn,
        _SignalStatusPackage_minute,
        _SignalStatusPackage_second,
        _SignalStatusPackage_duration,
        _SignalStatusPackage_status,
        ____SignalStatusPackage_regional__item__regionId_tab,
        ___SignalStatusPackage_regional__item__regionId,
        ___SignalStatusPackage_regional__item__regExtValue,
        __SignalStatusPackage_regional__item_,
        _SignalStatusPackage_regional,
        SignalStatusPackage,
        _SignalStatus_sequenceNumber,
        _SignalStatus_id,
        _SignalStatus_sigStatus,
        ____SignalStatus_regional__item__regionId_tab,
        ___SignalStatus_regional__item__regionId,
        ___SignalStatus_regional__item__regExtValue,
        __SignalStatus_regional__item_,
        _SignalStatus_regional,
        SignalStatus,
        _SnapshotDistance_distance1,
        _SnapshotDistance_speed1,
        _SnapshotDistance_distance2,
        _SnapshotDistance_speed2,
        SnapshotDistance,
        _Snapshot_thePosition,
        _Snapshot_safetyExt,
        _Snapshot_dataSet,
        Snapshot,
        _SnapshotTime_speed1,
        _SnapshotTime_time1,
        _SnapshotTime_speed2,
        _SnapshotTime_time2,
        SnapshotTime,
        _SpecialVehicleExtensions_vehicleAlerts,
        _SpecialVehicleExtensions_description,
        _SpecialVehicleExtensions_trailers,
        SpecialVehicleExtensions,
        _SpeedandHeadingandThrottleConfidence_heading,
        _SpeedandHeadingandThrottleConfidence_speed,
        _SpeedandHeadingandThrottleConfidence_throttle,
        SpeedandHeadingandThrottleConfidence,
        _SpeedLimitList__item_,
        SpeedLimitList,
        _SpeedProfileMeasurementList__item_,
        SpeedProfileMeasurementList,
        _SpeedProfile_speedReports,
        SpeedProfile,
        _SupplementalVehicleExtensions_classification,
        _SupplementalVehicleExtensions_classDetails,
        _SupplementalVehicleExtensions_vehicleData,
        _SupplementalVehicleExtensions_weatherReport,
        _SupplementalVehicleExtensions_weatherProbe,
        _SupplementalVehicleExtensions_obstacle,
        _SupplementalVehicleExtensions_status,
        _SupplementalVehicleExtensions_speedProfile,
        _SupplementalVehicleExtensions_theRTCM,
        ____SupplementalVehicleExtensions_regional__item__regionId_tab,
        ___SupplementalVehicleExtensions_regional__item__regionId,
        ___SupplementalVehicleExtensions_regional__item__regExtValue,
        __SupplementalVehicleExtensions_regional__item_,
        _SupplementalVehicleExtensions_regional,
        SupplementalVehicleExtensions,
        _TimeChangeDetails_startTime,
        _TimeChangeDetails_minEndTime,
        _TimeChangeDetails_maxEndTime,
        _TimeChangeDetails_likelyTime,
        _TimeChangeDetails_confidence,
        _TimeChangeDetails_nextTime,
        TimeChangeDetails,
        _TrailerData_sspRights,
        _TrailerData_connection,
        _TrailerData_units,
        TrailerData,
        _TrailerHistoryPointList__item_,
        TrailerHistoryPointList,
        _TrailerHistoryPoint_pivotAngle,
        _TrailerHistoryPoint_timeOffset,
        _TrailerHistoryPoint_positionOffset,
        _TrailerHistoryPoint_elevationOffset,
        _TrailerHistoryPoint_heading,
        TrailerHistoryPoint,
        _TrailerUnitDescriptionList__item_,
        TrailerUnitDescriptionList,
        _TrailerUnitDescription_isDolly,
        _TrailerUnitDescription_width,
        _TrailerUnitDescription_length,
        _TrailerUnitDescription_height,
        _TrailerUnitDescription_mass,
        _TrailerUnitDescription_bumperHeights,
        _TrailerUnitDescription_centerOfGravity,
        _TrailerUnitDescription_frontPivot,
        _TrailerUnitDescription_rearPivot,
        _TrailerUnitDescription_rearWheelOffset,
        _TrailerUnitDescription_positionOffset,
        _TrailerUnitDescription_elevationOffset,
        _TrailerUnitDescription_crumbData,
        TrailerUnitDescription,
        _TransmissionAndSpeed_transmisson,
        _TransmissionAndSpeed_speed,
        TransmissionAndSpeed,
        _TravelerDataFrameList__item_,
        TravelerDataFrameList,
        _TravelerDataFrame_sspTimRights,
        _TravelerDataFrame_frameType,
        __TravelerDataFrame_msgId_furtherInfoID,
        __TravelerDataFrame_msgId_roadSignID,
        _TravelerDataFrame_msgId,
        _TravelerDataFrame_startYear,
        _TravelerDataFrame_startTime,
        _TravelerDataFrame_duratonTime,
        _TravelerDataFrame_priority,
        _TravelerDataFrame_sspLocationRights,
        __TravelerDataFrame_regions__item_,
        _TravelerDataFrame_regions,
        _TravelerDataFrame_sspMsgRights1,
        _TravelerDataFrame_sspMsgRights2,
        __TravelerDataFrame_content_advisory,
        __TravelerDataFrame_content_workZone,
        __TravelerDataFrame_content_genericSign,
        __TravelerDataFrame_content_speedLimit,
        __TravelerDataFrame_content_exitService,
        _TravelerDataFrame_content,
        _TravelerDataFrame_url,
        TravelerDataFrame,
        _ValidRegion_direction,
        _ValidRegion_extent,
        __ValidRegion_area_shapePointSet,
        __ValidRegion_area_circle,
        __ValidRegion_area_regionPointSet,
        _ValidRegion_area,
        ValidRegion,
        _VehicleClassification_keyType,
        _VehicleClassification_role,
        _VehicleClassification_iso3883,
        _VehicleClassification_hpmsType,
        _VehicleClassification_vehicleType,
        _VehicleClassification_responseEquip,
        _VehicleClassification_responderType,
        _VehicleClassification_fuelType,
        ____VehicleClassification_regional__item__regionId_tab,
        ___VehicleClassification_regional__item__regionId,
        ___VehicleClassification_regional__item__regExtValue,
        __VehicleClassification_regional__item_,
        _VehicleClassification_regional,
        VehicleClassification,
        _VehicleData_height,
        _VehicleData_bumpers,
        _VehicleData_mass,
        _VehicleData_trailerWeight,
        VehicleData,
        _VehicleIdent_name,
        _VehicleIdent_vin,
        _VehicleIdent_ownerCode,
        _VehicleIdent_id,
        _VehicleIdent_vehicleType,
        __VehicleIdent_vehicleClass_vGroup,
        __VehicleIdent_vehicleClass_rGroup,
        __VehicleIdent_vehicleClass_rEquip,
        _VehicleIdent_vehicleClass,
        VehicleIdent,
        _VehicleID_entityID,
        _VehicleID_stationID,
        VehicleID,
        _VehicleSafetyExtensions_events,
        _VehicleSafetyExtensions_pathHistory,
        _VehicleSafetyExtensions_pathPrediction,
        _VehicleSafetyExtensions_lights,
        VehicleSafetyExtensions,
        _VehicleSize_width,
        _VehicleSize_length,
        VehicleSize,
        _VehicleStatusRequest_dataType,
        _VehicleStatusRequest_subType,
        _VehicleStatusRequest_sendOnLessThenValue,
        _VehicleStatusRequest_sendOnMoreThenValue,
        _VehicleStatusRequest_sendAll,
        VehicleStatusRequest,
        _VehicleStatusRequestList__item_,
        VehicleStatusRequestList,
        _VehicleStatus_lights,
        _VehicleStatus_lightBar,
        _VehicleStatus_wipers,
        _VehicleStatus_brakeStatus,
        _VehicleStatus_brakePressure,
        _VehicleStatus_roadFriction,
        _VehicleStatus_sunData,
        _VehicleStatus_rainData,
        _VehicleStatus_airTemp,
        _VehicleStatus_airPres,
        __VehicleStatus_steering_angle,
        __VehicleStatus_steering_confidence,
        __VehicleStatus_steering_rate,
        __VehicleStatus_steering_wheels,
        _VehicleStatus_steering,
        __VehicleStatus_accelSets_accel4way,
        __VehicleStatus_accelSets_vertAccelThres,
        __VehicleStatus_accelSets_yawRateCon,
        __VehicleStatus_accelSets_hozAccelCon,
        __VehicleStatus_accelSets_confidenceSet,
        _VehicleStatus_accelSets,
        __VehicleStatus_object_obDist,
        __VehicleStatus_object_obDirect,
        __VehicleStatus_object_dateTime,
        _VehicleStatus_object,
        _VehicleStatus_fullPos,
        _VehicleStatus_throttlePos,
        _VehicleStatus_speedHeadC,
        _VehicleStatus_speedC,
        __VehicleStatus_vehicleData_height,
        __VehicleStatus_vehicleData_bumpers,
        __VehicleStatus_vehicleData_mass,
        __VehicleStatus_vehicleData_trailerWeight,
        __VehicleStatus_vehicleData_type,
        _VehicleStatus_vehicleData,
        _VehicleStatus_vehicleIdent,
        _VehicleStatus_j1939data,
        __VehicleStatus_weatherReport_isRaining,
        __VehicleStatus_weatherReport_rainRate,
        __VehicleStatus_weatherReport_precipSituation,
        __VehicleStatus_weatherReport_solarRadiation,
        __VehicleStatus_weatherReport_friction,
        _VehicleStatus_weatherReport,
        _VehicleStatus_gnssStatus,
        VehicleStatus,
        _VerticalOffset_offset1,
        _VerticalOffset_offset2,
        _VerticalOffset_offset3,
        _VerticalOffset_offset4,
        _VerticalOffset_offset5,
        _VerticalOffset_offset6,
        _VerticalOffset_elevation,
        ___VerticalOffset_regional_regionId_tab,
        __VerticalOffset_regional_regionId,
        __VerticalOffset_regional_regExtValue,
        _VerticalOffset_regional,
        VerticalOffset,
        _WeatherProbe_airTemp,
        _WeatherProbe_airPressure,
        _WeatherProbe_rainRates,
        WeatherProbe,
        _WeatherReport_isRaining,
        _WeatherReport_rainRate,
        _WeatherReport_precipSituation,
        _WeatherReport_solarRadiation,
        _WeatherReport_friction,
        _WeatherReport_roadFriction,
        WeatherReport,
        _WiperSet_statusFront,
        _WiperSet_rateFront,
        _WiperSet_statusRear,
        _WiperSet_rateRear,
        WiperSet,
        Acceleration,
        AccelerationConfidence,
        AdvisorySpeedType,
        AllowedManeuvers,
        AmbientAirPressure,
        AmbientAirTemperature,
        Angle,
        AnimalPropelledType,
        AnimalType,
        AntiLockBrakeStatus,
        ApproachID,
        Attachment,
        AttachmentRadius,
        AuxiliaryBrakeStatus,
        BasicVehicleClass,
        unknownVehicleClass,
        specialVehicleClass,
        passenger_Vehicle_TypeUnknown,
        passenger_Vehicle_TypeOther,
        lightTruck_Vehicle_TypeUnknown,
        lightTruck_Vehicle_TypeOther,
        truck_Vehicle_TypeUnknown,
        truck_Vehicle_TypeOther,
        truck_axleCnt2,
        truck_axleCnt3,
        truck_axleCnt4,
        truck_axleCnt4Trailer,
        truck_axleCnt5Trailer,
        truck_axleCnt6Trailer,
        truck_axleCnt5MultiTrailer,
        truck_axleCnt6MultiTrailer,
        truck_axleCnt7MultiTrailer,
        motorcycle_TypeUnknown,
        motorcycle_TypeOther,
        motorcycle_Cruiser_Standard,
        motorcycle_SportUnclad,
        motorcycle_SportTouring,
        motorcycle_SuperSport,
        motorcycle_Touring,
        motorcycle_Trike,
        motorcycle_wPassengers,
        transit_TypeUnknown,
        transit_TypeOther,
        transit_BRT,
        transit_ExpressBus,
        transit_LocalBus,
        transit_SchoolBus,
        transit_FixedGuideway,
        transit_Paratransit,
        transit_Paratransit_Ambulance,
        emergency_TypeUnknown,
        emergency_TypeOther,
        emergency_Fire_Light_Vehicle,
        emergency_Fire_Heavy_Vehicle,
        emergency_Fire_Paramedic_Vehicle,
        emergency_Fire_Ambulance_Vehicle,
        emergency_Police_Light_Vehicle,
        emergency_Police_Heavy_Vehicle,
        emergency_Other_Responder,
        emergency_Other_Ambulance,
        otherTraveler_TypeUnknown,
        otherTraveler_TypeOther,
        otherTraveler_Pedestrian,
        otherTraveler_Visually_Disabled,
        otherTraveler_Physically_Disabled,
        otherTraveler_Bicycle,
        otherTraveler_Vulnerable_Roadworker,
        infrastructure_TypeUnknown,
        infrastructure_Fixed,
        infrastructure_Movable,
        equipped_CargoTrailer,
        BasicVehicleRole,
        BrakeAppliedPressure,
        BrakeAppliedStatus,
        BrakeBoostApplied,
        BumperHeight,
        CoarseHeading,
        CodeWord,
        CoefficientOfFriction,
        Confidence,
        Count,
        DDay,
        DeltaAngle,
        DeltaTime,
        DescriptiveName,
        DHour,
        DirectionOfUse,
        DistanceUnits,
        DMinute,
        DMonth,
        DOffset,
        DrivenLineOffsetLg,
        DrivenLineOffsetSm,
        DrivingWheelAngle,
        DSecond,
        DSRCmsgID,
        reservedMessageId_D,
        alaCarteMessage_D,
        basicSafetyMessage_D,
        basicSafetyMessageVerbose_D,
        commonSafetyRequest_D,
        emergencyVehicleAlert_D,
        intersectionCollision_D,
        mapData_D,
        nmeaCorrections_D,
        probeDataManagement_D,
        probeVehicleData_D,
        roadSideAlert_D,
        rtcmCorrections_D,
        signalPhaseAndTimingMessage_D,
        signalRequestMessage_D,
        signalStatusMessage_D,
        travelerInformation_D,
        uperFrame_D,
        mapData,
        signalPhaseAndTimingMessage,
        basicSafetyMessage,
        commonSafetyRequest,
        emergencyVehicleAlert,
        intersectionCollision,
        nmeaCorrections,
        probeDataManagement,
        probeVehicleData,
        roadSideAlert,
        rtcmCorrections,
        signalRequestMessage,
        signalStatusMessage,
        travelerInformation,
        personalSafetyMessage,
        testMessage00,
        testMessage01,
        testMessage02,
        testMessage03,
        testMessage04,
        testMessage05,
        testMessage06,
        testMessage07,
        testMessage08,
        testMessage09,
        testMessage10,
        testMessage11,
        testMessage12,
        testMessage13,
        testMessage14,
        testMessage15,
        Duration,
        DYear,
        ElevationConfidence,
        Elevation,
        Extent,
        ExteriorLights,
        FuelType,
        unknownFuel,
        gasoline,
        ethanol,
        diesel,
        electric,
        hybrid,
        hydrogen,
        natGasLiquid,
        natGasComp,
        propane,
        FurtherInfoID,
        GNSSstatus,
        GrossDistance,
        GrossSpeed,
        HeadingConfidence,
        Heading,
        HeadingSlice,
        IntersectionID,
        IntersectionStatusObject,
        IsDolly,
        Iso3833VehicleType,
        ITIStextPhrase,
        AxleLocation,
        AxleWeight,
        CargoWeight,
        DriveAxleLiftAirPressure,
        DriveAxleLocation,
        DriveAxleLubePressure,
        DriveAxleTemperature,
        SteeringAxleLubePressure,
        SteeringAxleTemperature,
        TireLeakageRate,
        TireLocation,
        TirePressureThresholdDetection,
        TirePressure,
        TireTemp,
        TrailerWeight,
        WheelEndElectFault,
        WheelSensorStatus,
        LaneAttributes_Barrier,
        LaneAttributes_Bike,
        LaneAttributes_Crosswalk,
        LaneAttributes_Parking,
        LaneAttributes_Sidewalk,
        LaneAttributes_Striping,
        LaneAttributes_TrackedVehicle,
        LaneAttributes_Vehicle,
        LaneConnectionID,
        LaneDirection,
        LaneID,
        LaneSharing,
        LaneWidth,
        Latitude,
        LayerID,
        LayerType,
        LightbarInUse,
        Longitude,
        Location_quality,
        Location_tech,
        MergeDivergeNodeAngle,
        MessageBLOB,
        MinuteOfTheYear,
        MinutesDuration,
        MotorizedPropelledType,
        MovementPhaseState,
        MsgCount,
        MsgCRC,
        MultiVehicleResponse,
        MUTCDCode,
        NMEA_MsgType,
        NMEA_Payload,
        NMEA_Revision,
        NodeAttributeLL,
        NodeAttributeXY,
        NumberOfParticipantsInCluster,
        ObjectCount,
        ObstacleDirection,
        ObstacleDistance,
        Offset_B09,
        Offset_B10,
        Offset_B11,
        Offset_B12,
        Offset_B13,
        Offset_B14,
        Offset_B16,
        OffsetLL_B12,
        OffsetLL_B14,
        OffsetLL_B16,
        OffsetLL_B18,
        OffsetLL_B22,
        OffsetLL_B24,
        PayloadData,
        PedestrianBicycleDetect,
        HumanPropelledType,
        PersonalAssistive,
        PersonalClusterRadius,
        PersonalCrossingInProgress,
        PersonalCrossingRequest,
        PersonalDeviceUsageState,
        PersonalDeviceUserType,
        PivotingAllowed,
        PositionConfidence,
        PrioritizationResponseStatus,
        Priority,
        PriorityRequestType,
        PrivilegedEventFlags,
        ProbeSegmentNumber,
        PublicSafetyAndRoadWorkerActivity,
        PublicSafetyDirectingTrafficSubType,
        PublicSafetyEventResponderWorkerType,
        RadiusOfCurvature,
        Radius_B12,
        RainSensor,
        RegionId,
        noRegion,
        addGrpA,
        addGrpB,
        addGrpC,
        RequestedItem,
        RequestID,
        RequestImportanceLevel,
        RequestSubRole,
        ResponseType,
        RestrictionAppliesTo,
        RestrictionClassID,
        RoadRegulatorID,
        RoadSegmentID,
        RoadwayCrownAngle,
        RTCM_Revision,
        RTCMmessage,
        Scale_B12,
        SecondOfTime,
        SegmentAttributeLL,
        SegmentAttributeXY,
        SemiMajorAxisAccuracy,
        SemiMajorAxisOrientation,
        SemiMinorAxisAccuracy,
        SignalGroupID,
        SignalReqScheme,
        SignPrority,
        SirenInUse,
        SpeedAdvice,
        SpeedConfidence,
        SpeedLimitType,
        SpeedProfileMeasurement,
        Speed,
        SSPindex,
        StabilityControlStatus,
        StationID,
        SteeringWheelAngleConfidence,
        SteeringWheelAngleRateOfChange,
        SteeringWheelAngle,
        SunSensor,
        TemporaryID,
        TermDistance,
        TermTime,
        ThrottleConfidence,
        ThrottlePosition,
        TimeConfidence,
        TimeIntervalConfidence,
        TimeMark,
        TimeOffset,
        TractionControlStatus,
        TrailerMass,
        TransitStatus,
        TransitVehicleOccupancy,
        TransitVehicleStatus,
        TransmissionState,
        TravelerInfoType,
        UniqueMSGID,
        URL_Base,
        URL_Link,
        URL_Short,
        UserSizeAndBehaviour,
        VehicleEventFlags,
        VehicleHeight,
        VehicleLength,
        VehicleMass,
        VehicleStatusDeviceTypeTag,
        VehicleType,
        VehicleWidth,
        Velocity,
        VerticalAccelerationThreshold,
        VerticalAcceleration,
        VertOffset_B07,
        VertOffset_B08,
        VertOffset_B09,
        VertOffset_B10,
        VertOffset_B11,
        VertOffset_B12,
        VINstring,
        WaitOnStopline,
        WiperRate,
        WiperStatus,
        YawRateConfidence,
        YawRate,
        ZoneLength,
        Zoom,
    ]

class REGION:

    _name_  = 'REGION'
    _oid_   = []
    
    _obj_ = [
        'Reg-AdvisorySpeed',
        'Reg-ComputedLane',
        'Reg-EventDescription',
        'Reg-GenericLane',
        'Reg-GeographicalPath',
        'Reg-GeometricProjection',
        'Reg-IntersectionGeometry',
        'Reg-LaneAttributes',
        'Reg-MovementState',
        'Reg-NodeAttributeSetLL',
        'Reg-NodeAttributeSetXY',
        'Reg-NodeOffsetPointLL',
        'Reg-RequestorDescription',
        'Reg-RequestorType',
        'Reg-RoadSegment',
        'Reg-SignalControlZone',
        'Reg-SignalRequest',
        'Reg-SignalRequestPackage',
        'Reg-SignalStatus',
        'Reg-SignalStatusPackage',
        'Reg-SupplementalVehicleExtensions',
        'Reg-VehicleClassification',
        'Reg-VerticalOffset',
        'Reg-ConnectionManeuverAssist',
        'Reg-IntersectionState',
        'Reg-LaneDataAttribute',
        'Reg-MovementEvent',
        'Reg-NodeOffsetPointXY',
        'Reg-Position3D',
        'Reg-RestrictionUserType',
        'Reg-BasicSafetyMessage',
        'Reg-CommonSafetyRequest',
        'Reg-EmergencyVehicleAlert',
        'Reg-IntersectionCollision',
        'Reg-NMEAcorrections',
        'Reg-ProbeDataManagement',
        'Reg-ProbeVehicleData',
        'Reg-RoadSideAlert',
        'Reg-RTCMcorrections',
        'Reg-SignalRequestMessage',
        'Reg-SignalStatusMessage',
        'Reg-SPAT',
        'Reg-TravelerInformation',
        'Reg-PersonalSafetyMessage',
        'Reg-MapData',
        'Reg-TestMessage00',
        'Reg-TestMessage01',
        'Reg-TestMessage02',
        'Reg-TestMessage03',
        'Reg-TestMessage04',
        'Reg-TestMessage05',
        'Reg-TestMessage06',
        'Reg-TestMessage07',
        'Reg-TestMessage08',
        'Reg-TestMessage09',
        'Reg-TestMessage10',
        'Reg-TestMessage11',
        'Reg-TestMessage12',
        'Reg-TestMessage13',
        'Reg-TestMessage14',
        'Reg-TestMessage15',
        ]
    _type_ = [
        ]
    _set_ = [
        'Reg-AdvisorySpeed',
        'Reg-ComputedLane',
        'Reg-EventDescription',
        'Reg-GenericLane',
        'Reg-GeographicalPath',
        'Reg-GeometricProjection',
        'Reg-IntersectionGeometry',
        'Reg-LaneAttributes',
        'Reg-MovementState',
        'Reg-NodeAttributeSetLL',
        'Reg-NodeAttributeSetXY',
        'Reg-NodeOffsetPointLL',
        'Reg-RequestorDescription',
        'Reg-RequestorType',
        'Reg-RoadSegment',
        'Reg-SignalControlZone',
        'Reg-SignalRequest',
        'Reg-SignalRequestPackage',
        'Reg-SignalStatus',
        'Reg-SignalStatusPackage',
        'Reg-SupplementalVehicleExtensions',
        'Reg-VehicleClassification',
        'Reg-VerticalOffset',
        'Reg-ConnectionManeuverAssist',
        'Reg-IntersectionState',
        'Reg-LaneDataAttribute',
        'Reg-MovementEvent',
        'Reg-NodeOffsetPointXY',
        'Reg-Position3D',
        'Reg-RestrictionUserType',
        'Reg-BasicSafetyMessage',
        'Reg-CommonSafetyRequest',
        'Reg-EmergencyVehicleAlert',
        'Reg-IntersectionCollision',
        'Reg-NMEAcorrections',
        'Reg-ProbeDataManagement',
        'Reg-ProbeVehicleData',
        'Reg-RoadSideAlert',
        'Reg-RTCMcorrections',
        'Reg-SignalRequestMessage',
        'Reg-SignalStatusMessage',
        'Reg-SPAT',
        'Reg-TravelerInformation',
        'Reg-PersonalSafetyMessage',
        'Reg-MapData',
        'Reg-TestMessage00',
        'Reg-TestMessage01',
        'Reg-TestMessage02',
        'Reg-TestMessage03',
        'Reg-TestMessage04',
        'Reg-TestMessage05',
        'Reg-TestMessage06',
        'Reg-TestMessage07',
        'Reg-TestMessage08',
        'Reg-TestMessage09',
        'Reg-TestMessage10',
        'Reg-TestMessage11',
        'Reg-TestMessage12',
        'Reg-TestMessage13',
        'Reg-TestMessage14',
        'Reg-TestMessage15',
        ]
    _val_ = [
        ]
    _class_ = [
        'Reg-AdvisorySpeed',
        'Reg-ComputedLane',
        'Reg-EventDescription',
        'Reg-GenericLane',
        'Reg-GeographicalPath',
        'Reg-GeometricProjection',
        'Reg-IntersectionGeometry',
        'Reg-LaneAttributes',
        'Reg-MovementState',
        'Reg-NodeAttributeSetLL',
        'Reg-NodeAttributeSetXY',
        'Reg-NodeOffsetPointLL',
        'Reg-RequestorDescription',
        'Reg-RequestorType',
        'Reg-RoadSegment',
        'Reg-SignalControlZone',
        'Reg-SignalRequest',
        'Reg-SignalRequestPackage',
        'Reg-SignalStatus',
        'Reg-SignalStatusPackage',
        'Reg-SupplementalVehicleExtensions',
        'Reg-VehicleClassification',
        'Reg-VerticalOffset',
        'Reg-ConnectionManeuverAssist',
        'Reg-IntersectionState',
        'Reg-LaneDataAttribute',
        'Reg-MovementEvent',
        'Reg-NodeOffsetPointXY',
        'Reg-Position3D',
        'Reg-RestrictionUserType',
        'Reg-BasicSafetyMessage',
        'Reg-CommonSafetyRequest',
        'Reg-EmergencyVehicleAlert',
        'Reg-IntersectionCollision',
        'Reg-NMEAcorrections',
        'Reg-ProbeDataManagement',
        'Reg-ProbeVehicleData',
        'Reg-RoadSideAlert',
        'Reg-RTCMcorrections',
        'Reg-SignalRequestMessage',
        'Reg-SignalStatusMessage',
        'Reg-SPAT',
        'Reg-TravelerInformation',
        'Reg-PersonalSafetyMessage',
        'Reg-MapData',
        'Reg-TestMessage00',
        'Reg-TestMessage01',
        'Reg-TestMessage02',
        'Reg-TestMessage03',
        'Reg-TestMessage04',
        'Reg-TestMessage05',
        'Reg-TestMessage06',
        'Reg-TestMessage07',
        'Reg-TestMessage08',
        'Reg-TestMessage09',
        'Reg-TestMessage10',
        'Reg-TestMessage11',
        'Reg-TestMessage12',
        'Reg-TestMessage13',
        'Reg-TestMessage14',
        'Reg-TestMessage15',
        ]
    _param_ = [
        ]
    
    #-----< Reg-AdvisorySpeed >-----#
    Reg_AdvisorySpeed = CLASS(name='Reg-AdvisorySpeed', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_AdvisorySpeed._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-ComputedLane >-----#
    Reg_ComputedLane = CLASS(name='Reg-ComputedLane', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_ComputedLane._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-EventDescription >-----#
    Reg_EventDescription = CLASS(name='Reg-EventDescription', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_EventDescription._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-GenericLane >-----#
    Reg_GenericLane = CLASS(name='Reg-GenericLane', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_GenericLane._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-GeographicalPath >-----#
    Reg_GeographicalPath = CLASS(name='Reg-GeographicalPath', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_GeographicalPath._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-GeometricProjection >-----#
    Reg_GeometricProjection = CLASS(name='Reg-GeometricProjection', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_GeometricProjection._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-IntersectionGeometry >-----#
    Reg_IntersectionGeometry = CLASS(name='Reg-IntersectionGeometry', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_IntersectionGeometry._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-LaneAttributes >-----#
    Reg_LaneAttributes = CLASS(name='Reg-LaneAttributes', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_LaneAttributes._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-MovementState >-----#
    Reg_MovementState = CLASS(name='Reg-MovementState', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_MovementState._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-NodeAttributeSetLL >-----#
    Reg_NodeAttributeSetLL = CLASS(name='Reg-NodeAttributeSetLL', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_NodeAttributeSetLL._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-NodeAttributeSetXY >-----#
    Reg_NodeAttributeSetXY = CLASS(name='Reg-NodeAttributeSetXY', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_NodeAttributeSetXY._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-NodeOffsetPointLL >-----#
    Reg_NodeOffsetPointLL = CLASS(name='Reg-NodeOffsetPointLL', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_NodeOffsetPointLL._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-RequestorDescription >-----#
    Reg_RequestorDescription = CLASS(name='Reg-RequestorDescription', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_RequestorDescription._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-RequestorType >-----#
    Reg_RequestorType = CLASS(name='Reg-RequestorType', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_RequestorType._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-RoadSegment >-----#
    Reg_RoadSegment = CLASS(name='Reg-RoadSegment', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_RoadSegment._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalControlZone >-----#
    Reg_SignalControlZone = CLASS(name='Reg-SignalControlZone', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalControlZone._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalRequest >-----#
    Reg_SignalRequest = CLASS(name='Reg-SignalRequest', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalRequest._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalRequestPackage >-----#
    Reg_SignalRequestPackage = CLASS(name='Reg-SignalRequestPackage', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalRequestPackage._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalStatus >-----#
    Reg_SignalStatus = CLASS(name='Reg-SignalStatus', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalStatus._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalStatusPackage >-----#
    Reg_SignalStatusPackage = CLASS(name='Reg-SignalStatusPackage', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalStatusPackage._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SupplementalVehicleExtensions >-----#
    Reg_SupplementalVehicleExtensions = CLASS(name='Reg-SupplementalVehicleExtensions', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SupplementalVehicleExtensions._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-VehicleClassification >-----#
    Reg_VehicleClassification = CLASS(name='Reg-VehicleClassification', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_VehicleClassification._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-VerticalOffset >-----#
    Reg_VerticalOffset = CLASS(name='Reg-VerticalOffset', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_VerticalOffset._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-ConnectionManeuverAssist >-----#
    Reg_ConnectionManeuverAssist = CLASS(name='Reg-ConnectionManeuverAssist', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_ConnectionManeuverAssist_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'ConnectionManeuverAssist-addGrpC')))
    Reg_ConnectionManeuverAssist._val = ASN1Set(rv=[dict([('Type', _Reg_ConnectionManeuverAssist_val_Type_0), ('id', 3)])], rr=[], ev=[], er=[])
    
    #-----< Reg-IntersectionState >-----#
    Reg_IntersectionState = CLASS(name='Reg-IntersectionState', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_IntersectionState_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'IntersectionState-addGrpC')))
    Reg_IntersectionState._val = ASN1Set(rv=[dict([('Type', _Reg_IntersectionState_val_Type_0), ('id', 3)])], rr=[], ev=[], er=[])
    
    #-----< Reg-LaneDataAttribute >-----#
    Reg_LaneDataAttribute = CLASS(name='Reg-LaneDataAttribute', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_LaneDataAttribute_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'LaneDataAttribute-addGrpB')))
    Reg_LaneDataAttribute._val = ASN1Set(rv=[dict([('Type', _Reg_LaneDataAttribute_val_Type_0), ('id', 2)])], rr=[], ev=[], er=[])
    
    #-----< Reg-MovementEvent >-----#
    Reg_MovementEvent = CLASS(name='Reg-MovementEvent', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_MovementEvent_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'MovementEvent-addGrpB')))
    Reg_MovementEvent._val = ASN1Set(rv=[dict([('Type', _Reg_MovementEvent_val_Type_0), ('id', 2)])], rr=[], ev=[], er=[])
    
    #-----< Reg-NodeOffsetPointXY >-----#
    Reg_NodeOffsetPointXY = CLASS(name='Reg-NodeOffsetPointXY', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_NodeOffsetPointXY_val_Type_0 = CHOICE(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'NodeOffsetPointXY-addGrpB')))
    Reg_NodeOffsetPointXY._val = ASN1Set(rv=[dict([('Type', _Reg_NodeOffsetPointXY_val_Type_0), ('id', 2)])], rr=[], ev=[], er=[])
    
    #-----< Reg-Position3D >-----#
    Reg_Position3D = CLASS(name='Reg-Position3D', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_Position3D_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpB', 'Position3D-addGrpB')))
    _Reg_Position3D_val_Type_1 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'Position3D-addGrpC')))
    Reg_Position3D._val = ASN1Set(rv=[dict([('Type', _Reg_Position3D_val_Type_0), ('id', 2)]), dict([('Type', _Reg_Position3D_val_Type_1), ('id', 3)])], rr=[], ev=[], er=[])
    
    #-----< Reg-RestrictionUserType >-----#
    Reg_RestrictionUserType = CLASS(name='Reg-RestrictionUserType', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_RestrictionUserType_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'RestrictionUserType-addGrpC')))
    Reg_RestrictionUserType._val = ASN1Set(rv=[dict([('Type', _Reg_RestrictionUserType_val_Type_0), ('id', 3)])], rr=[], ev=[], er=[])
    
    #-----< Reg-BasicSafetyMessage >-----#
    Reg_BasicSafetyMessage = CLASS(name='Reg-BasicSafetyMessage', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_BasicSafetyMessage._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-CommonSafetyRequest >-----#
    Reg_CommonSafetyRequest = CLASS(name='Reg-CommonSafetyRequest', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_CommonSafetyRequest._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-EmergencyVehicleAlert >-----#
    Reg_EmergencyVehicleAlert = CLASS(name='Reg-EmergencyVehicleAlert', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_EmergencyVehicleAlert._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-IntersectionCollision >-----#
    Reg_IntersectionCollision = CLASS(name='Reg-IntersectionCollision', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_IntersectionCollision._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-NMEAcorrections >-----#
    Reg_NMEAcorrections = CLASS(name='Reg-NMEAcorrections', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_NMEAcorrections._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-ProbeDataManagement >-----#
    Reg_ProbeDataManagement = CLASS(name='Reg-ProbeDataManagement', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_ProbeDataManagement._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-ProbeVehicleData >-----#
    Reg_ProbeVehicleData = CLASS(name='Reg-ProbeVehicleData', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_ProbeVehicleData._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-RoadSideAlert >-----#
    Reg_RoadSideAlert = CLASS(name='Reg-RoadSideAlert', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_RoadSideAlert._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-RTCMcorrections >-----#
    Reg_RTCMcorrections = CLASS(name='Reg-RTCMcorrections', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_RTCMcorrections._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalRequestMessage >-----#
    Reg_SignalRequestMessage = CLASS(name='Reg-SignalRequestMessage', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalRequestMessage._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SignalStatusMessage >-----#
    Reg_SignalStatusMessage = CLASS(name='Reg-SignalStatusMessage', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SignalStatusMessage._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-SPAT >-----#
    Reg_SPAT = CLASS(name='Reg-SPAT', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_SPAT._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TravelerInformation >-----#
    Reg_TravelerInformation = CLASS(name='Reg-TravelerInformation', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TravelerInformation._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-PersonalSafetyMessage >-----#
    Reg_PersonalSafetyMessage = CLASS(name='Reg-PersonalSafetyMessage', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_PersonalSafetyMessage._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-MapData >-----#
    Reg_MapData = CLASS(name='Reg-MapData', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    _Reg_MapData_val_Type_0 = SEQ(name='Type', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'MapData-addGrpC')))
    Reg_MapData._val = ASN1Set(rv=[dict([('Type', _Reg_MapData_val_Type_0), ('id', 3)])], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage00 >-----#
    Reg_TestMessage00 = CLASS(name='Reg-TestMessage00', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage00._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage01 >-----#
    Reg_TestMessage01 = CLASS(name='Reg-TestMessage01', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage01._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage02 >-----#
    Reg_TestMessage02 = CLASS(name='Reg-TestMessage02', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage02._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage03 >-----#
    Reg_TestMessage03 = CLASS(name='Reg-TestMessage03', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage03._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage04 >-----#
    Reg_TestMessage04 = CLASS(name='Reg-TestMessage04', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage04._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage05 >-----#
    Reg_TestMessage05 = CLASS(name='Reg-TestMessage05', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage05._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage06 >-----#
    Reg_TestMessage06 = CLASS(name='Reg-TestMessage06', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage06._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage07 >-----#
    Reg_TestMessage07 = CLASS(name='Reg-TestMessage07', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage07._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage08 >-----#
    Reg_TestMessage08 = CLASS(name='Reg-TestMessage08', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage08._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage09 >-----#
    Reg_TestMessage09 = CLASS(name='Reg-TestMessage09', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage09._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage10 >-----#
    Reg_TestMessage10 = CLASS(name='Reg-TestMessage10', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage10._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage11 >-----#
    Reg_TestMessage11 = CLASS(name='Reg-TestMessage11', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage11._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage12 >-----#
    Reg_TestMessage12 = CLASS(name='Reg-TestMessage12', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage12._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage13 >-----#
    Reg_TestMessage13 = CLASS(name='Reg-TestMessage13', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage13._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage14 >-----#
    Reg_TestMessage14 = CLASS(name='Reg-TestMessage14', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage14._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    #-----< Reg-TestMessage15 >-----#
    Reg_TestMessage15 = CLASS(name='Reg-TestMessage15', mode=MODE_SET, typeref=ASN1RefType(('DSRC', 'REG-EXT-ID-AND-TYPE')))
    Reg_TestMessage15._val = ASN1Set(rv=[], rr=[], ev=[], er=[])
    
    _all_ = [
        Reg_AdvisorySpeed,
        Reg_ComputedLane,
        Reg_EventDescription,
        Reg_GenericLane,
        Reg_GeographicalPath,
        Reg_GeometricProjection,
        Reg_IntersectionGeometry,
        Reg_LaneAttributes,
        Reg_MovementState,
        Reg_NodeAttributeSetLL,
        Reg_NodeAttributeSetXY,
        Reg_NodeOffsetPointLL,
        Reg_RequestorDescription,
        Reg_RequestorType,
        Reg_RoadSegment,
        Reg_SignalControlZone,
        Reg_SignalRequest,
        Reg_SignalRequestPackage,
        Reg_SignalStatus,
        Reg_SignalStatusPackage,
        Reg_SupplementalVehicleExtensions,
        Reg_VehicleClassification,
        Reg_VerticalOffset,
        Reg_ConnectionManeuverAssist,
        _Reg_ConnectionManeuverAssist_val_Type_0,
        Reg_IntersectionState,
        _Reg_IntersectionState_val_Type_0,
        Reg_LaneDataAttribute,
        _Reg_LaneDataAttribute_val_Type_0,
        Reg_MovementEvent,
        _Reg_MovementEvent_val_Type_0,
        Reg_NodeOffsetPointXY,
        _Reg_NodeOffsetPointXY_val_Type_0,
        Reg_Position3D,
        _Reg_Position3D_val_Type_0,
        _Reg_Position3D_val_Type_1,
        Reg_RestrictionUserType,
        _Reg_RestrictionUserType_val_Type_0,
        Reg_BasicSafetyMessage,
        Reg_CommonSafetyRequest,
        Reg_EmergencyVehicleAlert,
        Reg_IntersectionCollision,
        Reg_NMEAcorrections,
        Reg_ProbeDataManagement,
        Reg_ProbeVehicleData,
        Reg_RoadSideAlert,
        Reg_RTCMcorrections,
        Reg_SignalRequestMessage,
        Reg_SignalStatusMessage,
        Reg_SPAT,
        Reg_TravelerInformation,
        Reg_PersonalSafetyMessage,
        Reg_MapData,
        _Reg_MapData_val_Type_0,
        Reg_TestMessage00,
        Reg_TestMessage01,
        Reg_TestMessage02,
        Reg_TestMessage03,
        Reg_TestMessage04,
        Reg_TestMessage05,
        Reg_TestMessage06,
        Reg_TestMessage07,
        Reg_TestMessage08,
        Reg_TestMessage09,
        Reg_TestMessage10,
        Reg_TestMessage11,
        Reg_TestMessage12,
        Reg_TestMessage13,
        Reg_TestMessage14,
        Reg_TestMessage15,
    ]

class AddGrpC:

    _name_  = 'AddGrpC'
    _oid_   = []
    
    _obj_ = [
        'AltitudeConfidence',
        'AltitudeValue',
        'EmissionType',
        'Altitude',
        'PrioritizationResponse',
        'PrioritizationResponseList',
        'ConnectionManeuverAssist-addGrpC',
        'IntersectionState-addGrpC',
        'MapData-addGrpC',
        'Position3D-addGrpC',
        'RestrictionUserType-addGrpC',
        'SignalHeadLocation',
        'SignalHeadLocationList',
        'VehicleToLanePosition',
        'VehicleToLanePositionList',
        ]
    _type_ = [
        'AltitudeConfidence',
        'AltitudeValue',
        'EmissionType',
        'Altitude',
        'PrioritizationResponse',
        'PrioritizationResponseList',
        'ConnectionManeuverAssist-addGrpC',
        'IntersectionState-addGrpC',
        'MapData-addGrpC',
        'Position3D-addGrpC',
        'RestrictionUserType-addGrpC',
        'SignalHeadLocation',
        'SignalHeadLocationList',
        'VehicleToLanePosition',
        'VehicleToLanePositionList',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< AltitudeConfidence >-----#
    AltitudeConfidence = ENUM(name='AltitudeConfidence', mode=MODE_TYPE)
    AltitudeConfidence._cont = ASN1Dict([('alt-000-01', 0), ('alt-000-02', 1), ('alt-000-05', 2), ('alt-000-10', 3), ('alt-000-20', 4), ('alt-000-50', 5), ('alt-001-00', 6), ('alt-002-00', 7), ('alt-005-00', 8), ('alt-010-00', 9), ('alt-020-00', 10), ('alt-050-00', 11), ('alt-100-00', 12), ('alt-200-00', 13), ('outOfRange', 14), ('unavailable', 15)])
    AltitudeConfidence._ext = None
    
    #-----< AltitudeValue >-----#
    AltitudeValue = INT(name='AltitudeValue', mode=MODE_TYPE)
    AltitudeValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-100000, ub=800001)], ev=None, er=[])
    
    #-----< EmissionType >-----#
    EmissionType = ENUM(name='EmissionType', mode=MODE_TYPE)
    EmissionType._cont = ASN1Dict([('typeA', 0), ('typeB', 1), ('typeC', 2), ('typeD', 3), ('typeE', 4)])
    EmissionType._ext = []
    
    #-----< Altitude >-----#
    Altitude = SEQ(name='Altitude', mode=MODE_TYPE)
    _Altitude_value = INT(name='value', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'AltitudeValue')))
    _Altitude_confidence = ENUM(name='confidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'AltitudeConfidence')))
    Altitude._cont = ASN1Dict([
        ('value', _Altitude_value),
        ('confidence', _Altitude_confidence),
        ])
    Altitude._ext = None
    
    #-----< PrioritizationResponse >-----#
    PrioritizationResponse = SEQ(name='PrioritizationResponse', mode=MODE_TYPE)
    _PrioritizationResponse_stationID = INT(name='stationID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'StationID')))
    _PrioritizationResponse_priorState = ENUM(name='priorState', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'PrioritizationResponseStatus')))
    _PrioritizationResponse_signalGroup = INT(name='signalGroup', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalGroupID')))
    PrioritizationResponse._cont = ASN1Dict([
        ('stationID', _PrioritizationResponse_stationID),
        ('priorState', _PrioritizationResponse_priorState),
        ('signalGroup', _PrioritizationResponse_signalGroup),
        ])
    PrioritizationResponse._ext = []
    
    #-----< PrioritizationResponseList >-----#
    PrioritizationResponseList = SEQ_OF(name='PrioritizationResponseList', mode=MODE_TYPE)
    _PrioritizationResponseList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'PrioritizationResponse')))
    PrioritizationResponseList._cont = _PrioritizationResponseList__item_
    PrioritizationResponseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    
    #-----< ConnectionManeuverAssist-addGrpC >-----#
    ConnectionManeuverAssist_addGrpC = SEQ(name='ConnectionManeuverAssist-addGrpC', mode=MODE_TYPE)
    _ConnectionManeuverAssist_addGrpC_vehicleToLanePositions = SEQ_OF(name='vehicleToLanePositions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'VehicleToLanePositionList')))
    _ConnectionManeuverAssist_addGrpC_rsuDistanceFromAnchor = CHOICE(name='rsuDistanceFromAnchor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeOffsetPointXY')), opt=True)
    ConnectionManeuverAssist_addGrpC._cont = ASN1Dict([
        ('vehicleToLanePositions', _ConnectionManeuverAssist_addGrpC_vehicleToLanePositions),
        ('rsuDistanceFromAnchor', _ConnectionManeuverAssist_addGrpC_rsuDistanceFromAnchor),
        ])
    ConnectionManeuverAssist_addGrpC._ext = None
    
    #-----< IntersectionState-addGrpC >-----#
    IntersectionState_addGrpC = SEQ(name='IntersectionState-addGrpC', mode=MODE_TYPE)
    _IntersectionState_addGrpC_activePrioritizations = SEQ_OF(name='activePrioritizations', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'PrioritizationResponseList')), opt=True)
    IntersectionState_addGrpC._cont = ASN1Dict([
        ('activePrioritizations', _IntersectionState_addGrpC_activePrioritizations),
        ])
    IntersectionState_addGrpC._ext = []
    
    #-----< MapData-addGrpC >-----#
    MapData_addGrpC = SEQ(name='MapData-addGrpC', mode=MODE_TYPE)
    _MapData_addGrpC_signalHeadLocations = SEQ_OF(name='signalHeadLocations', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'SignalHeadLocationList')), opt=True)
    MapData_addGrpC._cont = ASN1Dict([
        ('signalHeadLocations', _MapData_addGrpC_signalHeadLocations),
        ])
    MapData_addGrpC._ext = []
    
    #-----< Position3D-addGrpC >-----#
    Position3D_addGrpC = SEQ(name='Position3D-addGrpC', mode=MODE_TYPE)
    _Position3D_addGrpC_altitude = SEQ(name='altitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'Altitude')))
    Position3D_addGrpC._cont = ASN1Dict([
        ('altitude', _Position3D_addGrpC_altitude),
        ])
    Position3D_addGrpC._ext = []
    
    #-----< RestrictionUserType-addGrpC >-----#
    RestrictionUserType_addGrpC = SEQ(name='RestrictionUserType-addGrpC', mode=MODE_TYPE)
    _RestrictionUserType_addGrpC_emission = ENUM(name='emission', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpC', 'EmissionType')), opt=True)
    RestrictionUserType_addGrpC._cont = ASN1Dict([
        ('emission', _RestrictionUserType_addGrpC_emission),
        ])
    RestrictionUserType_addGrpC._ext = []
    
    #-----< SignalHeadLocation >-----#
    SignalHeadLocation = SEQ(name='SignalHeadLocation', mode=MODE_TYPE)
    _SignalHeadLocation_node = CHOICE(name='node', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('DSRC', 'NodeOffsetPointXY')))
    _SignalHeadLocation_signalGroupID = INT(name='signalGroupID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'SignalGroupID')))
    SignalHeadLocation._cont = ASN1Dict([
        ('node', _SignalHeadLocation_node),
        ('signalGroupID', _SignalHeadLocation_signalGroupID),
        ])
    SignalHeadLocation._ext = []
    
    #-----< SignalHeadLocationList >-----#
    SignalHeadLocationList = SEQ_OF(name='SignalHeadLocationList', mode=MODE_TYPE)
    _SignalHeadLocationList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'SignalHeadLocation')))
    SignalHeadLocationList._cont = _SignalHeadLocationList__item_
    SignalHeadLocationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< VehicleToLanePosition >-----#
    VehicleToLanePosition = SEQ(name='VehicleToLanePosition', mode=MODE_TYPE)
    _VehicleToLanePosition_stationID = INT(name='stationID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'StationID')))
    _VehicleToLanePosition_laneID = INT(name='laneID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'LaneID')))
    VehicleToLanePosition._cont = ASN1Dict([
        ('stationID', _VehicleToLanePosition_stationID),
        ('laneID', _VehicleToLanePosition_laneID),
        ])
    VehicleToLanePosition._ext = []
    
    #-----< VehicleToLanePositionList >-----#
    VehicleToLanePositionList = SEQ_OF(name='VehicleToLanePositionList', mode=MODE_TYPE)
    _VehicleToLanePositionList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('AddGrpC', 'VehicleToLanePosition')))
    VehicleToLanePositionList._cont = _VehicleToLanePositionList__item_
    VehicleToLanePositionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    
    _all_ = [
        AltitudeConfidence,
        AltitudeValue,
        EmissionType,
        _Altitude_value,
        _Altitude_confidence,
        Altitude,
        _PrioritizationResponse_stationID,
        _PrioritizationResponse_priorState,
        _PrioritizationResponse_signalGroup,
        PrioritizationResponse,
        _PrioritizationResponseList__item_,
        PrioritizationResponseList,
        _ConnectionManeuverAssist_addGrpC_vehicleToLanePositions,
        _ConnectionManeuverAssist_addGrpC_rsuDistanceFromAnchor,
        ConnectionManeuverAssist_addGrpC,
        _IntersectionState_addGrpC_activePrioritizations,
        IntersectionState_addGrpC,
        _MapData_addGrpC_signalHeadLocations,
        MapData_addGrpC,
        _Position3D_addGrpC_altitude,
        Position3D_addGrpC,
        _RestrictionUserType_addGrpC_emission,
        RestrictionUserType_addGrpC,
        _SignalHeadLocation_node,
        _SignalHeadLocation_signalGroupID,
        SignalHeadLocation,
        _SignalHeadLocationList__item_,
        SignalHeadLocationList,
        _VehicleToLanePosition_stationID,
        _VehicleToLanePosition_laneID,
        VehicleToLanePosition,
        _VehicleToLanePositionList__item_,
        VehicleToLanePositionList,
    ]

class AddGrpB:

    _name_  = 'AddGrpB'
    _oid_   = []
    
    _obj_ = [
        'Angle',
        'Day',
        'DayOfWeek',
        'DegreesLat',
        'DegreesLong',
        'Elevation',
        'Holiday',
        'Hour',
        'LatitudeDMS',
        'LongitudeDMS',
        'MaxTimetoChange',
        'MinTimetoChange',
        'Minute',
        'MinutesAngle',
        'Month',
        'MsgCount',
        'Second',
        'SecondsAngle',
        'SummerTime',
        'TenthSecond',
        'TimeRemaining',
        'Year',
        'LatitudeDMS2',
        'LongitudeDMS2',
        'Node-LLdms-48b',
        'Node-LLdms-80b',
        'LaneDataAttribute-addGrpB',
        'MovementEvent-addGrpB',
        'NodeOffsetPointXY-addGrpB',
        'Position3D-addGrpB',
        'TimeMark',
        ]
    _type_ = [
        'Angle',
        'Day',
        'DayOfWeek',
        'DegreesLat',
        'DegreesLong',
        'Elevation',
        'Holiday',
        'Hour',
        'LatitudeDMS',
        'LongitudeDMS',
        'MaxTimetoChange',
        'MinTimetoChange',
        'Minute',
        'MinutesAngle',
        'Month',
        'MsgCount',
        'Second',
        'SecondsAngle',
        'SummerTime',
        'TenthSecond',
        'TimeRemaining',
        'Year',
        'LatitudeDMS2',
        'LongitudeDMS2',
        'Node-LLdms-48b',
        'Node-LLdms-80b',
        'LaneDataAttribute-addGrpB',
        'MovementEvent-addGrpB',
        'NodeOffsetPointXY-addGrpB',
        'Position3D-addGrpB',
        'TimeMark',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< Angle >-----#
    Angle = INT(name='Angle', mode=MODE_TYPE)
    Angle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=239)], ev=None, er=[])
    
    #-----< Day >-----#
    Day = INT(name='Day', mode=MODE_TYPE)
    Day._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DayOfWeek >-----#
    DayOfWeek = ENUM(name='DayOfWeek', mode=MODE_TYPE)
    DayOfWeek._cont = ASN1Dict([('unknown', 0), ('monday', 1), ('tuesday', 2), ('wednesday', 3), ('thursday', 4), ('friday', 5), ('saturday', 6), ('sunday', 7)])
    DayOfWeek._ext = None
    
    #-----< DegreesLat >-----#
    DegreesLat = INT(name='DegreesLat', mode=MODE_TYPE)
    DegreesLat._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-90, ub=90)], ev=None, er=[])
    
    #-----< DegreesLong >-----#
    DegreesLong = INT(name='DegreesLong', mode=MODE_TYPE)
    DegreesLong._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-180, ub=180)], ev=None, er=[])
    
    #-----< Elevation >-----#
    Elevation = INT(name='Elevation', mode=MODE_TYPE)
    Elevation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32768, ub=32767)], ev=None, er=[])
    
    #-----< Holiday >-----#
    Holiday = ENUM(name='Holiday', mode=MODE_TYPE)
    Holiday._cont = ASN1Dict([('weekday', 0), ('holiday', 1)])
    Holiday._ext = None
    
    #-----< Hour >-----#
    Hour = INT(name='Hour', mode=MODE_TYPE)
    Hour._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< LatitudeDMS >-----#
    LatitudeDMS = INT(name='LatitudeDMS', mode=MODE_TYPE)
    LatitudeDMS._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32400000, ub=32400000)], ev=None, er=[])
    
    #-----< LongitudeDMS >-----#
    LongitudeDMS = INT(name='LongitudeDMS', mode=MODE_TYPE)
    LongitudeDMS._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-64800000, ub=64800000)], ev=None, er=[])
    
    #-----< MaxTimetoChange >-----#
    MaxTimetoChange = INT(name='MaxTimetoChange', mode=MODE_TYPE)
    MaxTimetoChange._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2402)], ev=None, er=[])
    
    #-----< MinTimetoChange >-----#
    MinTimetoChange = INT(name='MinTimetoChange', mode=MODE_TYPE)
    MinTimetoChange._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2402)], ev=None, er=[])
    
    #-----< Minute >-----#
    Minute = INT(name='Minute', mode=MODE_TYPE)
    Minute._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< MinutesAngle >-----#
    MinutesAngle = INT(name='MinutesAngle', mode=MODE_TYPE)
    MinutesAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    
    #-----< Month >-----#
    Month = INT(name='Month', mode=MODE_TYPE)
    Month._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< MsgCount >-----#
    MsgCount = INT(name='MsgCount', mode=MODE_TYPE)
    MsgCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Second >-----#
    Second = INT(name='Second', mode=MODE_TYPE)
    Second._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=60)], ev=None, er=[])
    
    #-----< SecondsAngle >-----#
    SecondsAngle = INT(name='SecondsAngle', mode=MODE_TYPE)
    SecondsAngle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5999)], ev=None, er=[])
    
    #-----< SummerTime >-----#
    SummerTime = ENUM(name='SummerTime', mode=MODE_TYPE)
    SummerTime._cont = ASN1Dict([('notInSummerTime', 0), ('inSummerTime', 1)])
    SummerTime._ext = None
    
    #-----< TenthSecond >-----#
    TenthSecond = INT(name='TenthSecond', mode=MODE_TYPE)
    TenthSecond._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< TimeRemaining >-----#
    TimeRemaining = INT(name='TimeRemaining', mode=MODE_TYPE)
    TimeRemaining._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9001)], ev=None, er=[])
    
    #-----< Year >-----#
    Year = INT(name='Year', mode=MODE_TYPE)
    Year._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65535)], ev=None, er=[])
    
    #-----< LatitudeDMS2 >-----#
    LatitudeDMS2 = SEQ(name='LatitudeDMS2', mode=MODE_TYPE)
    _LatitudeDMS2_d = INT(name='d', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'DegreesLat')))
    _LatitudeDMS2_m = INT(name='m', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'MinutesAngle')))
    _LatitudeDMS2_s = INT(name='s', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'SecondsAngle')))
    LatitudeDMS2._cont = ASN1Dict([
        ('d', _LatitudeDMS2_d),
        ('m', _LatitudeDMS2_m),
        ('s', _LatitudeDMS2_s),
        ])
    LatitudeDMS2._ext = None
    
    #-----< LongitudeDMS2 >-----#
    LongitudeDMS2 = SEQ(name='LongitudeDMS2', mode=MODE_TYPE)
    _LongitudeDMS2_d = INT(name='d', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'DegreesLong')))
    _LongitudeDMS2_m = INT(name='m', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'MinutesAngle')))
    _LongitudeDMS2_s = INT(name='s', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'SecondsAngle')))
    LongitudeDMS2._cont = ASN1Dict([
        ('d', _LongitudeDMS2_d),
        ('m', _LongitudeDMS2_m),
        ('s', _LongitudeDMS2_s),
        ])
    LongitudeDMS2._ext = None
    
    #-----< Node-LLdms-48b >-----#
    Node_LLdms_48b = SEQ(name='Node-LLdms-48b', mode=MODE_TYPE)
    _Node_LLdms_48b_lon = INT(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'LongitudeDMS')))
    _Node_LLdms_48b_lat = INT(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'LatitudeDMS')))
    Node_LLdms_48b._cont = ASN1Dict([
        ('lon', _Node_LLdms_48b_lon),
        ('lat', _Node_LLdms_48b_lat),
        ])
    Node_LLdms_48b._ext = None
    
    #-----< Node-LLdms-80b >-----#
    Node_LLdms_80b = SEQ(name='Node-LLdms-80b', mode=MODE_TYPE)
    _Node_LLdms_80b_lon = SEQ(name='lon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'LongitudeDMS2')))
    _Node_LLdms_80b_lat = SEQ(name='lat', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'LatitudeDMS2')))
    Node_LLdms_80b._cont = ASN1Dict([
        ('lon', _Node_LLdms_80b_lon),
        ('lat', _Node_LLdms_80b_lat),
        ])
    Node_LLdms_80b._ext = None
    
    #-----< LaneDataAttribute-addGrpB >-----#
    LaneDataAttribute_addGrpB = SEQ(name='LaneDataAttribute-addGrpB', mode=MODE_TYPE)
    LaneDataAttribute_addGrpB._cont = ASN1Dict([
        ])
    LaneDataAttribute_addGrpB._ext = []
    
    #-----< MovementEvent-addGrpB >-----#
    MovementEvent_addGrpB = SEQ(name='MovementEvent-addGrpB', mode=MODE_TYPE)
    _MovementEvent_addGrpB_startTime = INT(name='startTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'TimeRemaining')), opt=True)
    _MovementEvent_addGrpB_minEndTime = INT(name='minEndTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'MinTimetoChange')))
    _MovementEvent_addGrpB_maxEndTime = INT(name='maxEndTime', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'MaxTimetoChange')), opt=True)
    _MovementEvent_addGrpB_likelyTime = INT(name='likelyTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'TimeRemaining')), opt=True)
    _MovementEvent_addGrpB_confidence = INT(name='confidence', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('DSRC', 'TimeIntervalConfidence')), opt=True)
    _MovementEvent_addGrpB_nextTime = INT(name='nextTime', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'TimeRemaining')), opt=True)
    MovementEvent_addGrpB._cont = ASN1Dict([
        ('startTime', _MovementEvent_addGrpB_startTime),
        ('minEndTime', _MovementEvent_addGrpB_minEndTime),
        ('maxEndTime', _MovementEvent_addGrpB_maxEndTime),
        ('likelyTime', _MovementEvent_addGrpB_likelyTime),
        ('confidence', _MovementEvent_addGrpB_confidence),
        ('nextTime', _MovementEvent_addGrpB_nextTime),
        ])
    MovementEvent_addGrpB._ext = []
    
    #-----< NodeOffsetPointXY-addGrpB >-----#
    NodeOffsetPointXY_addGrpB = CHOICE(name='NodeOffsetPointXY-addGrpB', mode=MODE_TYPE)
    _NodeOffsetPointXY_addGrpB_posA = SEQ(name='posA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Node-LLdms-48b')))
    _NodeOffsetPointXY_addGrpB_posB = SEQ(name='posB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Node-LLdms-80b')))
    NodeOffsetPointXY_addGrpB._cont = ASN1Dict([
        ('posA', _NodeOffsetPointXY_addGrpB_posA),
        ('posB', _NodeOffsetPointXY_addGrpB_posB),
        ])
    NodeOffsetPointXY_addGrpB._ext = []
    
    #-----< Position3D-addGrpB >-----#
    Position3D_addGrpB = SEQ(name='Position3D-addGrpB', mode=MODE_TYPE)
    _Position3D_addGrpB_latitude = SEQ(name='latitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'LatitudeDMS2')))
    _Position3D_addGrpB_longitude = SEQ(name='longitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'LongitudeDMS2')))
    _Position3D_addGrpB_elevation = INT(name='elevation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Elevation')))
    Position3D_addGrpB._cont = ASN1Dict([
        ('latitude', _Position3D_addGrpB_latitude),
        ('longitude', _Position3D_addGrpB_longitude),
        ('elevation', _Position3D_addGrpB_elevation),
        ])
    Position3D_addGrpB._ext = []
    
    #-----< TimeMark >-----#
    TimeMark = SEQ(name='TimeMark', mode=MODE_TYPE)
    _TimeMark_year = INT(name='year', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Year')))
    _TimeMark_month = INT(name='month', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Month')))
    _TimeMark_day = INT(name='day', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Day')))
    _TimeMark_summerTime = ENUM(name='summerTime', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'SummerTime')))
    _TimeMark_holiday = ENUM(name='holiday', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Holiday')))
    _TimeMark_dayofWeek = ENUM(name='dayofWeek', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'DayOfWeek')))
    _TimeMark_hour = INT(name='hour', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Hour')))
    _TimeMark_minute = INT(name='minute', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Minute')))
    _TimeMark_second = INT(name='second', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'Second')))
    _TimeMark_tenthSecond = INT(name='tenthSecond', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('AddGrpB', 'TenthSecond')))
    TimeMark._cont = ASN1Dict([
        ('year', _TimeMark_year),
        ('month', _TimeMark_month),
        ('day', _TimeMark_day),
        ('summerTime', _TimeMark_summerTime),
        ('holiday', _TimeMark_holiday),
        ('dayofWeek', _TimeMark_dayofWeek),
        ('hour', _TimeMark_hour),
        ('minute', _TimeMark_minute),
        ('second', _TimeMark_second),
        ('tenthSecond', _TimeMark_tenthSecond),
        ])
    TimeMark._ext = None
    
    _all_ = [
        Angle,
        Day,
        DayOfWeek,
        DegreesLat,
        DegreesLong,
        Elevation,
        Holiday,
        Hour,
        LatitudeDMS,
        LongitudeDMS,
        MaxTimetoChange,
        MinTimetoChange,
        Minute,
        MinutesAngle,
        Month,
        MsgCount,
        Second,
        SecondsAngle,
        SummerTime,
        TenthSecond,
        TimeRemaining,
        Year,
        _LatitudeDMS2_d,
        _LatitudeDMS2_m,
        _LatitudeDMS2_s,
        LatitudeDMS2,
        _LongitudeDMS2_d,
        _LongitudeDMS2_m,
        _LongitudeDMS2_s,
        LongitudeDMS2,
        _Node_LLdms_48b_lon,
        _Node_LLdms_48b_lat,
        Node_LLdms_48b,
        _Node_LLdms_80b_lon,
        _Node_LLdms_80b_lat,
        Node_LLdms_80b,
        LaneDataAttribute_addGrpB,
        _MovementEvent_addGrpB_startTime,
        _MovementEvent_addGrpB_minEndTime,
        _MovementEvent_addGrpB_maxEndTime,
        _MovementEvent_addGrpB_likelyTime,
        _MovementEvent_addGrpB_confidence,
        _MovementEvent_addGrpB_nextTime,
        MovementEvent_addGrpB,
        _NodeOffsetPointXY_addGrpB_posA,
        _NodeOffsetPointXY_addGrpB_posB,
        NodeOffsetPointXY_addGrpB,
        _Position3D_addGrpB_latitude,
        _Position3D_addGrpB_longitude,
        _Position3D_addGrpB_elevation,
        Position3D_addGrpB,
        _TimeMark_year,
        _TimeMark_month,
        _TimeMark_day,
        _TimeMark_summerTime,
        _TimeMark_holiday,
        _TimeMark_dayofWeek,
        _TimeMark_hour,
        _TimeMark_minute,
        _TimeMark_second,
        _TimeMark_tenthSecond,
        TimeMark,
    ]

class NTCIP:

    _name_  = 'NTCIP'
    _oid_   = []
    
    _obj_ = [
        'EssMobileFriction',
        'EssPrecipRate',
        'EssPrecipSituation',
        'EssPrecipYesNo',
        'EssSolarRadiation',
        ]
    _type_ = [
        'EssMobileFriction',
        'EssPrecipRate',
        'EssPrecipSituation',
        'EssPrecipYesNo',
        'EssSolarRadiation',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< EssMobileFriction >-----#
    EssMobileFriction = INT(name='EssMobileFriction', mode=MODE_TYPE)
    EssMobileFriction._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=101)], ev=None, er=[])
    
    #-----< EssPrecipRate >-----#
    EssPrecipRate = INT(name='EssPrecipRate', mode=MODE_TYPE)
    EssPrecipRate._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< EssPrecipSituation >-----#
    EssPrecipSituation = ENUM(name='EssPrecipSituation', mode=MODE_TYPE)
    EssPrecipSituation._cont = ASN1Dict([('other', 1), ('unknown', 2), ('noPrecipitation', 3), ('unidentifiedSlight', 4), ('unidentifiedModerate', 5), ('unidentifiedHeavy', 6), ('snowSlight', 7), ('snowModerate', 8), ('snowHeavy', 9), ('rainSlight', 10), ('rainModerate', 11), ('rainHeavy', 12), ('frozenPrecipitationSlight', 13), ('frozenPrecipitationModerate', 14), ('frozenPrecipitationHeavy', 15)])
    EssPrecipSituation._ext = None
    
    #-----< EssPrecipYesNo >-----#
    EssPrecipYesNo = ENUM(name='EssPrecipYesNo', mode=MODE_TYPE)
    EssPrecipYesNo._cont = ASN1Dict([('precip', 1), ('noPrecip', 2), ('error', 3)])
    EssPrecipYesNo._ext = None
    
    #-----< EssSolarRadiation >-----#
    EssSolarRadiation = INT(name='EssSolarRadiation', mode=MODE_TYPE)
    EssSolarRadiation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    _all_ = [
        EssMobileFriction,
        EssPrecipRate,
        EssPrecipSituation,
        EssPrecipYesNo,
        EssSolarRadiation,
    ]

class ITIS:

    _name_  = 'ITIS'
    _oid_   = []
    
    _obj_ = [
        'GenericLocations',
        'IncidentResponseEquipment',
        'ITIStext',
        'ResponderGroupAffected',
        'VehicleGroupAffected',
        'ITIScodesAndText',
        'ITIScodes',
        ]
    _type_ = [
        'GenericLocations',
        'IncidentResponseEquipment',
        'ITIStext',
        'ResponderGroupAffected',
        'VehicleGroupAffected',
        'ITIScodesAndText',
        'ITIScodes',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< GenericLocations >-----#
    GenericLocations = ENUM(name='GenericLocations', mode=MODE_TYPE)
    GenericLocations._cont = ASN1Dict([('on-bridges', 7937), ('in-tunnels', 7938), ('entering-or-leaving-tunnels', 7939), ('on-ramps', 7940), ('in-road-construction-area', 7941), ('around-a-curve', 7942), ('on-minor-roads', 7943), ('in-the-opposing-lanes', 7944), ('adjacent-to-roadway', 7945), ('on-bend', 7946), ('entire-intersection', 7947), ('in-the-median', 7948), ('moved-to-side-of-road', 7949), ('moved-to-shoulder', 7950), ('on-the-roadway', 7951), ('in-shaded-areas', 7952), ('in-low-lying-areas', 7953), ('in-the-downtown-area', 7954), ('in-the-inner-city-area', 7955), ('in-parts', 7956), ('in-some-places', 7957), ('in-the-ditch', 7958), ('in-the-valley', 7959), ('on-hill-top', 7960), ('near-the-foothills', 7961), ('at-high-altitudes', 7962), ('near-the-lake', 7963), ('near-the-shore', 7964), ('over-the-crest-of-a-hill', 7965), ('other-than-on-the-roadway', 7966), ('near-the-beach', 7967), ('near-beach-access-point', 7968), ('lower-level', 7969), ('upper-level', 7970), ('airport', 7971), ('concourse', 7972), ('gate', 7973), ('baggage-claim', 7974), ('customs-point', 7975), ('station', 7976), ('platform', 7977), ('dock', 7978), ('depot', 7979), ('ev-charging-point', 7980), ('information-welcome-point', 7981), ('at-rest-area', 7982), ('at-service-area', 7983), ('at-weigh-station', 7984), ('picnic-areas', 7985), ('rest-area', 7986), ('service-stations', 7987), ('toilets', 7988), ('on-the-right', 7989), ('on-the-left', 7990), ('in-the-center', 7991), ('in-the-opposite-direction', 7992), ('cross-traffic', 7993), ('northbound-traffic', 7994), ('eastbound-traffic', 7995), ('southbound-traffic', 7996), ('westbound-traffic', 7997), ('north', 7998), ('south', 7999), ('east', 8000), ('west', 8001), ('northeast', 8002), ('northwest', 8003), ('southeast', 8004), ('southwest', 8005), ('mountain-pass', 8006), ('reservation-center', 8007), ('nearby-basin', 8008), ('on-tracks', 8009), ('dip', 8010), ('traffic-circle', 8011), ('park-and-ride-lot', 8012), ('to', 8014), ('by', 8015), ('through', 8016), ('area-of', 8017), ('under', 8018), ('over', 8019), ('from', 8020), ('approaching', 8021), ('entering-at', 8022), ('exiting-at', 8023), ('across-tracks', 8024), ('in-street', 8025), ('on-curve', 8026), ('shoulder', 8027), ('crossover', 8028), ('cross-road', 8029), ('side-road', 8030), ('bus-stop', 8031), ('intersection', 8032), ('roadside-park', 8033)])
    GenericLocations._ext = []
    
    #-----< IncidentResponseEquipment >-----#
    IncidentResponseEquipment = ENUM(name='IncidentResponseEquipment', mode=MODE_TYPE)
    IncidentResponseEquipment._cont = ASN1Dict([('ground-fire-suppression', 9985), ('heavy-ground-equipment', 9986), ('aircraft', 9988), ('marine-equipment', 9989), ('support-equipment', 9990), ('medical-rescue-unit', 9991), ('other', 9993), ('ground-fire-suppression-other', 9994), ('engine', 9995), ('truck-or-aerial', 9996), ('quint', 9997), ('tanker-pumper-combination', 9998), ('brush-truck', 10000), ('aircraft-rescue-firefighting', 10001), ('heavy-ground-equipment-other', 10004), ('dozer-or-plow', 10005), ('tractor', 10006), ('tanker-or-tender', 10008), ('aircraft-other', 10024), ('aircraft-fixed-wing-tanker', 10025), ('helitanker', 10026), ('helicopter', 10027), ('marine-equipment-other', 10034), ('fire-boat-with-pump', 10035), ('boat-no-pump', 10036), ('support-apparatus-other', 10044), ('breathing-apparatus-support', 10045), ('light-and-air-unit', 10046), ('medical-rescue-unit-other', 10054), ('rescue-unit', 10055), ('urban-search-rescue-unit', 10056), ('high-angle-rescue', 10057), ('crash-fire-rescue', 10058), ('bLS-unit', 10059), ('aLS-unit', 10060), ('mobile-command-post', 10075), ('chief-officer-car', 10076), ('hAZMAT-unit', 10077), ('type-i-hand-crew', 10078), ('type-ii-hand-crew', 10079), ('privately-owned-vehicle', 10083), ('other-apparatus-resource', 10084), ('ambulance', 10085), ('bomb-squad-van', 10086), ('combine-harvester', 10087), ('construction-vehicle', 10088), ('farm-tractor', 10089), ('grass-cutting-machines', 10090), ('hAZMAT-containment-tow', 10091), ('heavy-tow', 10092), ('hedge-cutting-machines', 10093), ('light-tow', 10094), ('mobile-crane', 10095), ('refuse-collection-vehicle', 10096), ('resurfacing-vehicle', 10097), ('road-sweeper', 10098), ('roadside-litter-collection-crews', 10099), ('salvage-vehicle', 10100), ('sand-truck', 10101), ('snowplow', 10102), ('steam-roller', 10103), ('swat-team-van', 10104), ('track-laying-vehicle', 10105), ('unknown-vehicle', 10106), ('white-lining-vehicle', 10107), ('dump-truck', 10108), ('supervisor-vehicle', 10109), ('snow-blower', 10110), ('rotary-snow-blower', 10111), ('road-grader', 10112), ('steam-truck', 10113), ('flatbed-tow', 10114)])
    IncidentResponseEquipment._ext = []
    
    #-----< ITIStext >-----#
    ITIStext = STR_IA5(name='ITIStext', mode=MODE_TYPE)
    ITIStext._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=500)], ev=None, er=[])
    
    #-----< ResponderGroupAffected >-----#
    ResponderGroupAffected = ENUM(name='ResponderGroupAffected', mode=MODE_TYPE)
    ResponderGroupAffected._cont = ASN1Dict([('emergency-vehicle-units', 9729), ('federal-law-enforcement-units', 9730), ('state-police-units', 9731), ('county-police-units', 9732), ('local-police-units', 9733), ('ambulance-units', 9734), ('rescue-units', 9735), ('fire-units', 9736), ('hAZMAT-units', 9737), ('light-tow-unit', 9738), ('heavy-tow-unit', 9739), ('freeway-service-patrols', 9740), ('transportation-response-units', 9741), ('private-contractor-response-units', 9742)])
    ResponderGroupAffected._ext = []
    
    #-----< VehicleGroupAffected >-----#
    VehicleGroupAffected = ENUM(name='VehicleGroupAffected', mode=MODE_TYPE)
    VehicleGroupAffected._cont = ASN1Dict([('all-vehicles', 9217), ('bicycles', 9218), ('motorcycles', 9219), ('cars', 9220), ('light-vehicles', 9221), ('cars-and-light-vehicles', 9222), ('cars-with-trailers', 9223), ('cars-with-recreational-trailers', 9224), ('vehicles-with-trailers', 9225), ('heavy-vehicles', 9226), ('trucks', 9227), ('buses', 9228), ('articulated-buses', 9229), ('school-buses', 9230), ('vehicles-with-semi-trailers', 9231), ('vehicles-with-double-trailers', 9232), ('high-profile-vehicles', 9233), ('wide-vehicles', 9234), ('long-vehicles', 9235), ('hazardous-loads', 9236), ('exceptional-loads', 9237), ('abnormal-loads', 9238), ('convoys', 9239), ('maintenance-vehicles', 9240), ('delivery-vehicles', 9241), ('vehicles-with-even-numbered-license-plates', 9242), ('vehicles-with-odd-numbered-license-plates', 9243), ('vehicles-with-parking-permits', 9244), ('vehicles-with-catalytic-converters', 9245), ('vehicles-without-catalytic-converters', 9246), ('gas-powered-vehicles', 9247), ('diesel-powered-vehicles', 9248), ('lPG-vehicles', 9249), ('military-convoys', 9250), ('military-vehicles', 9251)])
    VehicleGroupAffected._ext = []
    
    #-----< ITIScodesAndText >-----#
    ITIScodesAndText = SEQ_OF(name='ITIScodesAndText', mode=MODE_TYPE)
    _ITIScodesAndText__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __ITIScodesAndText__item__item = CHOICE(name='item', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___ITIScodesAndText__item__item_itis = INT(name='itis', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIScodes')))
    ___ITIScodesAndText__item__item_text = STR_IA5(name='text', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITIS', 'ITIStext')))
    __ITIScodesAndText__item__item._cont = ASN1Dict([
        ('itis', ___ITIScodesAndText__item__item_itis),
        ('text', ___ITIScodesAndText__item__item_text),
        ])
    __ITIScodesAndText__item__item._ext = None
    _ITIScodesAndText__item_._cont = ASN1Dict([
        ('item', __ITIScodesAndText__item__item),
        ])
    _ITIScodesAndText__item_._ext = None
    ITIScodesAndText._cont = _ITIScodesAndText__item_
    ITIScodesAndText._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    
    #-----< ITIScodes >-----#
    ITIScodes = INT(name='ITIScodes', mode=MODE_TYPE)
    ITIScodes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    _all_ = [
        GenericLocations,
        IncidentResponseEquipment,
        ITIStext,
        ResponderGroupAffected,
        VehicleGroupAffected,
        ___ITIScodesAndText__item__item_itis,
        ___ITIScodesAndText__item__item_text,
        __ITIScodesAndText__item__item,
        _ITIScodesAndText__item_,
        ITIScodesAndText,
        ITIScodes,
    ]

init_modules(DSRC, REGION, AddGrpC, AddGrpB, NTCIP, ITIS)
