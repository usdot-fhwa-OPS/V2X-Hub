# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget tmxutils tmxapi)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target tmxutils
add_library(tmxutils STATIC IMPORTED)

set_target_properties(tmxutils PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/workspace/src/tmx/TmxUtils/src;/workspace/src/tmx/Messages/include;/usr/include/mysql;/usr/include"
  INTERFACE_LINK_LIBRARIES "tmxapi;/usr/lib/x86_64-linux-gnu/libmysqlclient.so;/usr/lib/x86_64-linux-gnu/libmysqlcppconn.so;/usr/lib/x86_64-linux-gnu/libuuid.so;/usr/lib/x86_64-linux-gnu/libuuid.so;/usr/local/lib/libnetsnmpagent.so;/usr/local/lib/libnetsnmpmibs.so;/usr/local/lib/libnetsnmp.so;rdkafka++;::carma-clock;gmock;pthread;m;rt"
)

# Create imported target tmxapi
add_library(tmxapi SHARED IMPORTED)

set_target_properties(tmxapi PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SAEJ2735_SPEC=2016;BOOST_ASIO_HEADER_ONLY -DBOOST_SPIRIT_THREADSAFE  -DBOOST_ALL_DYN_LINK"
  INTERFACE_COMPILE_FEATURES "cxx_lambdas;cxx_nullptr;cxx_range_for;cxx_variadic_templates"
  INTERFACE_INCLUDE_DIRECTORIES "/workspace/src/tmx/TmxApi;/opt/carma/include/stol-j2735-201603-carma;/usr/include"
  INTERFACE_LINK_LIBRARIES "::stol-j2735-201603-carma;Boost::system;Boost::thread;Boost::atomic;Boost::chrono;Boost::regex;Boost::log;Boost::log_setup;Boost::filesystem;Boost::program_options;/usr/lib/x86_64-linux-gnu/libicui18n.so;/usr/lib/x86_64-linux-gnu/libicuuc.so;/usr/lib/x86_64-linux-gnu/libicudata.so;pugixml"
)

# Import target "tmxutils" for configuration "Debug"
set_property(TARGET tmxutils APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(tmxutils PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/workspace/src/tmx/build/lib/libtmxutils.a"
  )

# Import target "tmxapi" for configuration "Debug"
set_property(TARGET tmxapi APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(tmxapi PROPERTIES
  IMPORTED_LOCATION_DEBUG "/workspace/src/tmx/build/lib/libtmxapi.so"
  IMPORTED_SONAME_DEBUG "libtmxapi.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
