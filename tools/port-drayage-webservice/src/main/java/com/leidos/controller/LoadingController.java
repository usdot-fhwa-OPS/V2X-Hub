package com.leidos.controller;

import com.baeldung.openapi.api.LoadingApi;
import com.baeldung.openapi.model.ActionStatusList;
import com.baeldung.openapi.model.ContainerActionStatus;
import com.baeldung.openapi.model.ContainerRequest;
import com.leidos.loading.LoadingActions;

import org.springframework.web.bind.annotation.RestController;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

/**
 * {@link RestController} for all /loading REST API endpoints.
 * Implements {@link LoadingApi} interface generated by openapi codegen to 
 * define methods of endpoint responses.
 * 
 * @author Paul Bourelly
 */
@RestController
public class LoadingController implements LoadingApi  {

    
    private static Logger logger = LoggerFactory.getLogger(LoadingController.class);

    /**
     * Injected {@link LoadingActions} Spring Bean
     */
    @Autowired
    private LoadingActions loadingActions;

    /**
     * {@inheritDoc}
     */
    @Override
    public ResponseEntity<ActionStatusList> loadingPendingGet() {
        return ResponseEntity.ok(loadingActions.getPendingActions());
   
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResponseEntity<ContainerActionStatus> loadingVehicleIdGet( String vehicleId ) {
        ContainerActionStatus action = loadingActions.getContainerActionStatus(vehicleId);
        logger.debug(String.format("Found action %s!", action));
        if ( action != null )
            return ResponseEntity.ok(action);
        return new ResponseEntity<ContainerActionStatus>( HttpStatus.BAD_REQUEST );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResponseEntity<Void> loadingPost( ContainerRequest request ){
        loadingActions.requestLoadingAction(request);
        return new ResponseEntity<>(HttpStatus.CREATED);
        
    }

    
}
